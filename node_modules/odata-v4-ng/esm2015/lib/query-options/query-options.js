/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { FilterString } from './filter/filter-string';
import { Expand } from './expand';
import { Utils } from '../utils/utils';
import { Orderby } from './orderby';
export class QueryOptions {
    /**
     * @param {?} separator
     */
    constructor(separator) {
        Utils.requireNotNullNorUndefined(separator, 'separator');
        Utils.requireNotEmpty(separator, 'separator');
        this._separator = separator;
        this._select = null;
        this._filter = null;
        this._expand = null;
        this._orderby = null;
        this._search = null;
        this._skip = null;
        this._top = null;
        this._count = null;
        this._customOptions = null;
        this._format = null;
    }
    /**
     * @param {?} select
     * @return {?}
     */
    select(select) {
        if (Utils.isNullOrUndefined(select) || Utils.isEmpty(select)) {
            this._select = null;
        }
        else {
            this._select = typeof (select) === 'string' ? [select] : select;
        }
        return this;
    }
    /**
     * @param {?} filter
     * @return {?}
     */
    filter(filter) {
        if (Utils.isNullOrUndefined(filter) || Utils.isEmpty(filter)) {
            this._filter = null;
        }
        else {
            this._filter = typeof (filter) === 'string' ? new FilterString(filter) : filter;
        }
        return this;
    }
    /**
     * @param {?} expand
     * @return {?}
     */
    expand(expand) {
        if (Utils.isNullOrUndefined(expand) || Utils.isEmpty(expand)) {
            this._expand = null;
        }
        else {
            this._expand = typeof (expand) === 'string' ? [new Expand(expand)] : expand instanceof Expand ? [expand] : expand;
        }
        return this;
    }
    /**
     * @param {?} orderby
     * @return {?}
     */
    orderby(orderby) {
        if (Utils.isNullOrUndefined(orderby) || Utils.isEmpty(orderby)) {
            this._orderby = null;
        }
        else {
            this._orderby = typeof (orderby) === 'string' ? [new Orderby(orderby)] : orderby;
        }
        return this;
    }
    /**
     * @param {?} search
     * @return {?}
     */
    search(search) {
        this._search = search;
        return this;
    }
    /**
     * @param {?} skip
     * @return {?}
     */
    skip(skip) {
        Utils.requireNotNegative(skip, 'skip');
        this._skip = skip;
        return this;
    }
    /**
     * @param {?} top
     * @return {?}
     */
    top(top) {
        Utils.requireNotNegative(top, 'top');
        this._top = top;
        return this;
    }
    /**
     * @param {?} count
     * @return {?}
     */
    count(count) {
        this._count = count;
        return this;
    }
    /**
     * @param {?} format
     * @return {?}
     */
    format(format) {
        this._format = format;
        return this;
    }
    /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    customOption(key, value) {
        Utils.requireNotNullNorUndefined(key, 'key');
        if (Utils.isNullOrUndefined(this._customOptions)) {
            this._customOptions = new Map();
        }
        this._customOptions.set(key, value);
        return this;
    }
    /**
     * @return {?}
     */
    toString() {
        /** @type {?} */
        let queryOptions = '';
        // add select
        if (!Utils.isNullOrUndefined(this._select) && !Utils.isEmpty(this._select)) {
            queryOptions += '$select=';
            if (typeof (this._select) === 'string') {
                queryOptions += this._select;
            }
            else {
                queryOptions += Utils.toString(this._select);
            }
        }
        // add filter
        if (!Utils.isNullOrUndefined(this._filter) && !Utils.isEmpty(this._filter)) {
            if (queryOptions.length) {
                queryOptions += this._separator;
            }
            queryOptions += '$filter=' + encodeURIComponent(this._filter.toString());
        }
        // add expand
        if (!Utils.isNullOrUndefined(this._expand) && !Utils.isEmpty(this._expand)) {
            if (queryOptions.length) {
                queryOptions += this._separator;
            }
            queryOptions += '$expand=';
            if (typeof (this._expand) === 'string') {
                queryOptions += this._expand;
            }
            else {
                queryOptions += Utils.toString(this._expand);
            }
        }
        // add orderby
        if (!Utils.isNullOrUndefined(this._orderby) && !Utils.isEmpty(this._orderby)) {
            if (queryOptions.length) {
                queryOptions += this._separator;
            }
            queryOptions += '$orderby=';
            if (typeof (this._orderby) === 'string') {
                queryOptions += this._orderby;
            }
            else {
                queryOptions += Utils.toString(this._orderby);
            }
        }
        // add search
        if (!Utils.isNullOrUndefined(this._search) && !Utils.isEmpty(this._search)) {
            if (queryOptions.length) {
                queryOptions += this._separator;
            }
            queryOptions += '$search=' + encodeURIComponent(this._search.toString());
        }
        // add skip
        if (!Utils.isNullOrUndefined(this._skip) && !Utils.isEmpty(this._skip)) {
            if (queryOptions.length) {
                queryOptions += this._separator;
            }
            queryOptions += '$skip=' + this._skip;
        }
        // add top
        if (!Utils.isNullOrUndefined(this._top) && !Utils.isEmpty(this._top)) {
            if (queryOptions.length) {
                queryOptions += this._separator;
            }
            queryOptions += '$top=' + this._top;
        }
        // add count
        if (!Utils.isNullOrUndefined(this._count) && !Utils.isEmpty(this._count)) {
            if (queryOptions.length) {
                queryOptions += this._separator;
            }
            queryOptions += '$count=' + this._count;
        }
        // add custom query options
        if (Utils.isNotNullNorUndefined(this._customOptions) && this._customOptions.size > 0) {
            this._customOptions.forEach((value, key, map) => {
                if (Utils.isNotNullNorUndefined(key) && !Utils.isEmpty(key)
                    && Utils.isNotNullNorUndefined(value) && !Utils.isEmpty(value)) {
                    if (queryOptions.length) {
                        queryOptions += this._separator;
                    }
                    queryOptions += key + '=' + encodeURIComponent(value);
                }
            });
        }
        // add format
        if (!Utils.isNullOrUndefined(this._format) && !Utils.isEmpty(this._format)) {
            if (queryOptions.length) {
                queryOptions += this._separator;
            }
            queryOptions += '$format=' + this._format;
        }
        return queryOptions;
    }
    /**
     * @return {?}
     */
    isEmpty() {
        for (const key in this) {
            if (key === '_purpose' || key === '_separator') {
                continue;
            }
            if (this.hasOwnProperty(key) && !Utils.isEmpty(this[key])) {
                return false;
            }
        }
        return true;
    }
}
if (false) {
    /** @type {?} */
    QueryOptions.prototype._separator;
    /** @type {?} */
    QueryOptions.prototype._select;
    /** @type {?} */
    QueryOptions.prototype._filter;
    /** @type {?} */
    QueryOptions.prototype._expand;
    /** @type {?} */
    QueryOptions.prototype._orderby;
    /** @type {?} */
    QueryOptions.prototype._search;
    /** @type {?} */
    QueryOptions.prototype._skip;
    /** @type {?} */
    QueryOptions.prototype._top;
    /** @type {?} */
    QueryOptions.prototype._count;
    /** @type {?} */
    QueryOptions.prototype._customOptions;
    /** @type {?} */
    QueryOptions.prototype._format;
}

//# sourceMappingURL=data:application/json;base64,