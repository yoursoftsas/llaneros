/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
export class CsdlStructuredType {
    /**
     * @param {?} name
     * @param {?=} properties
     * @param {?=} navigationProperties
     * @param {?=} baseType
     * @param {?=} openType
     * @param {?=} abstract
     */
    constructor(name, properties, navigationProperties, baseType, openType, abstract) {
        this.name = name;
        this.properties = properties;
        this.navigationProperties = navigationProperties;
        this.baseType = baseType;
        this.openType = openType;
        this.abstract = abstract;
    }
}
if (false) {
    /** @type {?} */
    CsdlStructuredType.prototype.name;
    /** @type {?} */
    CsdlStructuredType.prototype.properties;
    /** @type {?} */
    CsdlStructuredType.prototype.navigationProperties;
    /** @type {?} */
    CsdlStructuredType.prototype.baseType;
    /** @type {?} */
    CsdlStructuredType.prototype.openType;
    /** @type {?} */
    CsdlStructuredType.prototype.abstract;
}
export class CsdlComplexType extends CsdlStructuredType {
    /**
     * @param {?} name
     * @param {?=} properties
     * @param {?=} navigationProperties
     * @param {?=} baseType
     * @param {?=} openType
     * @param {?=} abstract
     */
    constructor(name, properties, navigationProperties, baseType, openType, abstract) {
        super(name, properties, navigationProperties, baseType, openType, abstract);
    }
}
export class CsdlEntityType extends CsdlStructuredType {
    /**
     * @param {?} name
     * @param {?=} key
     * @param {?=} properties
     * @param {?=} navigationProperties
     * @param {?=} baseType
     * @param {?=} openType
     * @param {?=} abstract
     * @param {?=} hasStream
     */
    constructor(name, key, properties, navigationProperties, baseType, openType, abstract, hasStream) {
        super(name, properties, navigationProperties, baseType, openType, abstract);
        this.key = key;
        this.hasStream = hasStream;
    }
}
if (false) {
    /** @type {?} */
    CsdlEntityType.prototype.key;
    /** @type {?} */
    CsdlEntityType.prototype.hasStream;
}
export class CsdlKey {
    /**
     * @param {?} propertyRefs
     */
    constructor(propertyRefs) {
        this.propertyRefs = propertyRefs;
    }
}
if (false) {
    /** @type {?} */
    CsdlKey.prototype.propertyRefs;
}
export class CsdlPropertyRef {
    /**
     * @param {?} name
     * @param {?=} alias
     */
    constructor(name, alias) {
        this.name = name;
        this.alias = alias;
    }
}
if (false) {
    /** @type {?} */
    CsdlPropertyRef.prototype.name;
    /** @type {?} */
    CsdlPropertyRef.prototype.alias;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NkbC1zdHJ1Y3R1cmVkLXR5cGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vZGF0YS12NC1uZy8iLCJzb3VyY2VzIjpbImxpYi9vZGF0YS1yZXNwb25zZS9jc2RsL2NzZGwtc3RydWN0dXJlZC10eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxNQUFNOzs7Ozs7Ozs7SUFDRixZQUNXLE1BQ0EsWUFDQSxzQkFDQSxVQUNBLFVBQ0E7UUFMQSxTQUFJLEdBQUosSUFBSTtRQUNKLGVBQVUsR0FBVixVQUFVO1FBQ1YseUJBQW9CLEdBQXBCLG9CQUFvQjtRQUNwQixhQUFRLEdBQVIsUUFBUTtRQUNSLGFBQVEsR0FBUixRQUFRO1FBQ1IsYUFBUSxHQUFSLFFBQVE7S0FDZDtDQUNSOzs7Ozs7Ozs7Ozs7Ozs7QUFFRCxNQUFNLHNCQUF1QixTQUFRLGtCQUFrQjs7Ozs7Ozs7O0lBQ25ELFlBQ0ksSUFBWSxFQUNaLFVBQTJCLEVBQzNCLG9CQUErQyxFQUMvQyxRQUFpQixFQUNqQixRQUFrQixFQUNsQixRQUFrQjtRQUVsQixLQUFLLENBQUMsSUFBSSxFQUFFLFVBQVUsRUFBRSxvQkFBb0IsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0tBQy9FO0NBQ0o7QUFFRCxNQUFNLHFCQUFzQixTQUFRLGtCQUFrQjs7Ozs7Ozs7Ozs7SUFDbEQsWUFDSSxJQUFZLEVBQ0wsS0FDUCxVQUEyQixFQUMzQixvQkFBK0MsRUFDL0MsUUFBaUIsRUFDakIsUUFBa0IsRUFDbEIsUUFBa0IsRUFDWDtRQUVQLEtBQUssQ0FBQyxJQUFJLEVBQUUsVUFBVSxFQUFFLG9CQUFvQixFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFSckUsUUFBRyxHQUFILEdBQUc7UUFNSCxjQUFTLEdBQVQsU0FBUztLQUduQjtDQUNKOzs7Ozs7O0FBRUQsTUFBTTs7OztJQUNGLFlBQ1c7UUFBQSxpQkFBWSxHQUFaLFlBQVk7S0FDbEI7Q0FDUjs7Ozs7QUFFRCxNQUFNOzs7OztJQUNGLFlBQ1csTUFDQTtRQURBLFNBQUksR0FBSixJQUFJO1FBQ0osVUFBSyxHQUFMLEtBQUs7S0FDWDtDQUNSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3NkbFByb3BlcnR5LCBDc2RsTmF2aWdhdGlvblByb3BlcnR5IH0gZnJvbSAnLi9jc2RsLXN0cnVjdHVyYWwtcHJvcGVydHknO1xuXG5leHBvcnQgY2xhc3MgQ3NkbFN0cnVjdHVyZWRUeXBlIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHVibGljIG5hbWU6IHN0cmluZyxcbiAgICAgICAgcHVibGljIHByb3BlcnRpZXM/OiBDc2RsUHJvcGVydHlbXSxcbiAgICAgICAgcHVibGljIG5hdmlnYXRpb25Qcm9wZXJ0aWVzPzogQ3NkbE5hdmlnYXRpb25Qcm9wZXJ0eVtdLFxuICAgICAgICBwdWJsaWMgYmFzZVR5cGU/OiBzdHJpbmcsXG4gICAgICAgIHB1YmxpYyBvcGVuVHlwZT86IGJvb2xlYW4sXG4gICAgICAgIHB1YmxpYyBhYnN0cmFjdD86IGJvb2xlYW5cbiAgICApIHsgfVxufVxuXG5leHBvcnQgY2xhc3MgQ3NkbENvbXBsZXhUeXBlIGV4dGVuZHMgQ3NkbFN0cnVjdHVyZWRUeXBlIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgbmFtZTogc3RyaW5nLFxuICAgICAgICBwcm9wZXJ0aWVzPzogQ3NkbFByb3BlcnR5W10sXG4gICAgICAgIG5hdmlnYXRpb25Qcm9wZXJ0aWVzPzogQ3NkbE5hdmlnYXRpb25Qcm9wZXJ0eVtdLFxuICAgICAgICBiYXNlVHlwZT86IHN0cmluZyxcbiAgICAgICAgb3BlblR5cGU/OiBib29sZWFuLFxuICAgICAgICBhYnN0cmFjdD86IGJvb2xlYW5cbiAgICApIHtcbiAgICAgICAgc3VwZXIobmFtZSwgcHJvcGVydGllcywgbmF2aWdhdGlvblByb3BlcnRpZXMsIGJhc2VUeXBlLCBvcGVuVHlwZSwgYWJzdHJhY3QpO1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIENzZGxFbnRpdHlUeXBlIGV4dGVuZHMgQ3NkbFN0cnVjdHVyZWRUeXBlIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgbmFtZTogc3RyaW5nLFxuICAgICAgICBwdWJsaWMga2V5PzogQ3NkbEtleSxcbiAgICAgICAgcHJvcGVydGllcz86IENzZGxQcm9wZXJ0eVtdLFxuICAgICAgICBuYXZpZ2F0aW9uUHJvcGVydGllcz86IENzZGxOYXZpZ2F0aW9uUHJvcGVydHlbXSxcbiAgICAgICAgYmFzZVR5cGU/OiBzdHJpbmcsXG4gICAgICAgIG9wZW5UeXBlPzogYm9vbGVhbixcbiAgICAgICAgYWJzdHJhY3Q/OiBib29sZWFuLFxuICAgICAgICBwdWJsaWMgaGFzU3RyZWFtPzogYm9vbGVhblxuICAgICkge1xuICAgICAgICBzdXBlcihuYW1lLCBwcm9wZXJ0aWVzLCBuYXZpZ2F0aW9uUHJvcGVydGllcywgYmFzZVR5cGUsIG9wZW5UeXBlLCBhYnN0cmFjdCk7XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ3NkbEtleSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyBwcm9wZXJ0eVJlZnM6IENzZGxQcm9wZXJ0eVJlZltdLFxuICAgICkgeyB9XG59XG5cbmV4cG9ydCBjbGFzcyBDc2RsUHJvcGVydHlSZWYge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwdWJsaWMgbmFtZTogc3RyaW5nLFxuICAgICAgICBwdWJsaWMgYWxpYXM/OiBzdHJpbmdcbiAgICApIHsgfVxufVxuIl19