/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
export class CsdlAnnotable {
    /**
     * @param {?=} annotationList
     */
    constructor(annotationList) {
        this.annotationList = annotationList;
    }
}
if (false) {
    /** @type {?} */
    CsdlAnnotable.prototype.annotationList;
}
export class CsdlAnnotations extends CsdlAnnotable {
    /**
     * @param {?} target
     * @param {?} annotationList
     * @param {?=} qualifier
     */
    constructor(target, annotationList, qualifier) {
        super(annotationList);
        this.target = target;
        this.qualifier = qualifier;
    }
}
if (false) {
    /** @type {?} */
    CsdlAnnotations.prototype.target;
    /** @type {?} */
    CsdlAnnotations.prototype.qualifier;
}
export class CsdlAnnotation {
    /**
     * @param {?} term
     * @param {?=} qualifier
     */
    constructor(term, qualifier) {
        this.term = term;
        this.qualifier = qualifier;
    }
}
if (false) {
    /** @type {?} */
    CsdlAnnotation.prototype.term;
    /** @type {?} */
    CsdlAnnotation.prototype.qualifier;
}
export class CsdlTerm {
    /**
     * @param {?} name
     * @param {?} type
     * @param {?=} baseTerm
     * @param {?=} defaultValue
     * @param {?=} appliesTo
     * @param {?=} nullable
     * @param {?=} maxLength
     * @param {?=} precision
     * @param {?=} scale
     * @param {?=} srid
     */
    constructor(name, type, baseTerm, defaultValue, appliesTo, nullable, maxLength, precision, scale, srid) {
        this.name = name;
        this.type = type;
        this.baseTerm = baseTerm;
        this.defaultValue = defaultValue;
        this.appliesTo = appliesTo;
        this.nullable = nullable;
        this.maxLength = maxLength;
        this.precision = precision;
        this.scale = scale;
        this.srid = srid;
    }
}
if (false) {
    /** @type {?} */
    CsdlTerm.prototype.name;
    /** @type {?} */
    CsdlTerm.prototype.type;
    /** @type {?} */
    CsdlTerm.prototype.baseTerm;
    /** @type {?} */
    CsdlTerm.prototype.defaultValue;
    /** @type {?} */
    CsdlTerm.prototype.appliesTo;
    /** @type {?} */
    CsdlTerm.prototype.nullable;
    /** @type {?} */
    CsdlTerm.prototype.maxLength;
    /** @type {?} */
    CsdlTerm.prototype.precision;
    /** @type {?} */
    CsdlTerm.prototype.scale;
    /** @type {?} */
    CsdlTerm.prototype.srid;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NkbC1hbm5vdGF0aW9uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vb2RhdGEtdjQtbmcvIiwic291cmNlcyI6WyJsaWIvb2RhdGEtcmVzcG9uc2UvY3NkbC9jc2RsLWFubm90YXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU07Ozs7SUFDRixZQUFtQixjQUFpQztRQUFqQyxtQkFBYyxHQUFkLGNBQWMsQ0FBbUI7S0FBSztDQUM1RDs7Ozs7QUFFRCxNQUFNLHNCQUF1QixTQUFRLGFBQWE7Ozs7OztJQUM5QyxZQUNXLFFBQ1AsY0FBZ0MsRUFDekI7UUFFUCxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUM7UUFKZixXQUFNLEdBQU4sTUFBTTtRQUVOLGNBQVMsR0FBVCxTQUFTO0tBR25CO0NBQ0o7Ozs7Ozs7QUFFRCxNQUFNOzs7OztJQUNGLFlBQ1csTUFDQTtRQURBLFNBQUksR0FBSixJQUFJO1FBQ0osY0FBUyxHQUFULFNBQVM7S0FDZjtDQUNSOzs7Ozs7O0FBRUQsTUFBTTs7Ozs7Ozs7Ozs7OztJQUNGLFlBQ1csTUFDQSxNQUNBLFVBQ0EsY0FDQSxXQUNBLFVBQ0EsV0FDQSxXQUNBLE9BQ0E7UUFUQSxTQUFJLEdBQUosSUFBSTtRQUNKLFNBQUksR0FBSixJQUFJO1FBQ0osYUFBUSxHQUFSLFFBQVE7UUFDUixpQkFBWSxHQUFaLFlBQVk7UUFDWixjQUFTLEdBQVQsU0FBUztRQUNULGFBQVEsR0FBUixRQUFRO1FBQ1IsY0FBUyxHQUFULFNBQVM7UUFDVCxjQUFTLEdBQVQsU0FBUztRQUNULFVBQUssR0FBTCxLQUFLO1FBQ0wsU0FBSSxHQUFKLElBQUk7S0FDVjtDQUNSIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIENzZGxBbm5vdGFibGUge1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBhbm5vdGF0aW9uTGlzdD86IENzZGxBbm5vdGF0aW9uW10pIHsgfVxufVxuXG5leHBvcnQgY2xhc3MgQ3NkbEFubm90YXRpb25zIGV4dGVuZHMgQ3NkbEFubm90YWJsZSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyB0YXJnZXQ6IHN0cmluZyxcbiAgICAgICAgYW5ub3RhdGlvbkxpc3Q6IENzZGxBbm5vdGF0aW9uW10sXG4gICAgICAgIHB1YmxpYyBxdWFsaWZpZXI/OiBzdHJpbmdcbiAgICApIHtcbiAgICAgICAgc3VwZXIoYW5ub3RhdGlvbkxpc3QpO1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIENzZGxBbm5vdGF0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHVibGljIHRlcm06IHN0cmluZyxcbiAgICAgICAgcHVibGljIHF1YWxpZmllcj86IHN0cmluZ1xuICAgICkgeyB9XG59XG5cbmV4cG9ydCBjbGFzcyBDc2RsVGVybSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyBuYW1lOiBzdHJpbmcsXG4gICAgICAgIHB1YmxpYyB0eXBlOiBzdHJpbmcsXG4gICAgICAgIHB1YmxpYyBiYXNlVGVybT86IHN0cmluZyxcbiAgICAgICAgcHVibGljIGRlZmF1bHRWYWx1ZT86IHN0cmluZyxcbiAgICAgICAgcHVibGljIGFwcGxpZXNUbz86IHN0cmluZyxcbiAgICAgICAgcHVibGljIG51bGxhYmxlPzogYm9vbGVhbixcbiAgICAgICAgcHVibGljIG1heExlbmd0aD86IG51bWJlcixcbiAgICAgICAgcHVibGljIHByZWNpc2lvbj86IG51bWJlcixcbiAgICAgICAgcHVibGljIHNjYWxlPzogbnVtYmVyLFxuICAgICAgICBwdWJsaWMgc3JpZD86IHN0cmluZ1xuICAgICkgeyB9XG59XG4iXX0=