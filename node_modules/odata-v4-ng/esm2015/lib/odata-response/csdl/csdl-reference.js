/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { CsdlAnnotable } from './csdl-annotation';
export class CsdlReference extends CsdlAnnotable {
    /**
     * @param {?} uri
     * @param {?=} includes
     * @param {?=} includeAnnotations
     * @param {?=} annotationList
     */
    constructor(uri, includes, includeAnnotations, annotationList) {
        super(annotationList);
        this.uri = uri;
        this.includes = includes;
        this.includeAnnotations = includeAnnotations;
    }
}
if (false) {
    /** @type {?} */
    CsdlReference.prototype.uri;
    /** @type {?} */
    CsdlReference.prototype.includes;
    /** @type {?} */
    CsdlReference.prototype.includeAnnotations;
}
export class CsdlInclude {
    /**
     * @param {?} namespace
     * @param {?=} alias
     */
    constructor(namespace, alias) {
        this.namespace = namespace;
        this.alias = alias;
    }
}
if (false) {
    /** @type {?} */
    CsdlInclude.prototype.namespace;
    /** @type {?} */
    CsdlInclude.prototype.alias;
}
export class CsdlIncludeAnnotations {
    /**
     * @param {?} termNamespace
     * @param {?=} qualifier
     * @param {?=} targetNamespace
     */
    constructor(termNamespace, qualifier, targetNamespace) {
        this.termNamespace = termNamespace;
        this.qualifier = qualifier;
        this.targetNamespace = targetNamespace;
    }
}
if (false) {
    /** @type {?} */
    CsdlIncludeAnnotations.prototype.termNamespace;
    /** @type {?} */
    CsdlIncludeAnnotations.prototype.qualifier;
    /** @type {?} */
    CsdlIncludeAnnotations.prototype.targetNamespace;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NkbC1yZWZlcmVuY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vZGF0YS12NC1uZy8iLCJzb3VyY2VzIjpbImxpYi9vZGF0YS1yZXNwb25zZS9jc2RsL2NzZGwtcmVmZXJlbmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFrQixNQUFNLG1CQUFtQixDQUFDO0FBRWxFLE1BQU0sb0JBQXFCLFNBQVEsYUFBYTs7Ozs7OztJQUM1QyxZQUNXLEtBQ0EsVUFDQSxvQkFDUCxjQUFpQztRQUVqQyxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUM7UUFMZixRQUFHLEdBQUgsR0FBRztRQUNILGFBQVEsR0FBUixRQUFRO1FBQ1IsdUJBQWtCLEdBQWxCLGtCQUFrQjtLQUk1QjtDQUNKOzs7Ozs7Ozs7QUFFRCxNQUFNOzs7OztJQUNGLFlBQ1csV0FDQTtRQURBLGNBQVMsR0FBVCxTQUFTO1FBQ1QsVUFBSyxHQUFMLEtBQUs7S0FDWDtDQUNSOzs7Ozs7O0FBRUQsTUFBTTs7Ozs7O0lBQ0YsWUFDVyxlQUNBLFdBQ0E7UUFGQSxrQkFBYSxHQUFiLGFBQWE7UUFDYixjQUFTLEdBQVQsU0FBUztRQUNULG9CQUFlLEdBQWYsZUFBZTtLQUNyQjtDQUNSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3NkbEFubm90YWJsZSwgQ3NkbEFubm90YXRpb24gfSBmcm9tICcuL2NzZGwtYW5ub3RhdGlvbic7XG5cbmV4cG9ydCBjbGFzcyBDc2RsUmVmZXJlbmNlIGV4dGVuZHMgQ3NkbEFubm90YWJsZSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyB1cmk6IHN0cmluZyxcbiAgICAgICAgcHVibGljIGluY2x1ZGVzPzogQ3NkbEluY2x1ZGVbXSxcbiAgICAgICAgcHVibGljIGluY2x1ZGVBbm5vdGF0aW9ucz86IENzZGxJbmNsdWRlQW5ub3RhdGlvbnNbXSxcbiAgICAgICAgYW5ub3RhdGlvbkxpc3Q/OiBDc2RsQW5ub3RhdGlvbltdXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKGFubm90YXRpb25MaXN0KTtcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDc2RsSW5jbHVkZSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyBuYW1lc3BhY2U6IHN0cmluZyxcbiAgICAgICAgcHVibGljIGFsaWFzPzogc3RyaW5nXG4gICAgKSB7IH1cbn1cblxuZXhwb3J0IGNsYXNzIENzZGxJbmNsdWRlQW5ub3RhdGlvbnMge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwdWJsaWMgdGVybU5hbWVzcGFjZTogc3RyaW5nLFxuICAgICAgICBwdWJsaWMgcXVhbGlmaWVyPzogc3RyaW5nLFxuICAgICAgICBwdWJsaWMgdGFyZ2V0TmFtZXNwYWNlPzogc3RyaW5nXG4gICAgKSB7IH1cbn1cbiJdfQ==