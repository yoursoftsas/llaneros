/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Utils } from '../utils/utils';
/**
 * @template T
 */
export class EntitySet {
    /**
     * @param {?} entities
     * @param {?} count
     * @param {?} type
     */
    constructor(entities, count, type) {
        Utils.requireNotNullNorUndefined(entities, 'entities');
        this.entities = [];
        entities.forEach(entity => {
            if (Utils.isNullOrUndefined(type)) {
                this.entities.push(Object.assign({}, entity));
            }
            else {
                this.entities.push(Object.assign(new type(), entity));
            }
        });
        this.count = count;
    }
    /**
     * @return {?}
     */
    getEntities() {
        return this.entities;
    }
    /**
     * @return {?}
     */
    getCount() {
        return this.count;
    }
}
if (false) {
    /** @type {?} */
    EntitySet.prototype.entities;
    /** @type {?} */
    EntitySet.prototype.count;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LWNvbGxlY3Rpb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vZGF0YS12NC1uZy8iLCJzb3VyY2VzIjpbImxpYi9vZGF0YS1yZXNwb25zZS9lbnRpdHktY29sbGVjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7O0FBQ3ZDLE1BQU07Ozs7OztJQUlGLFlBQVksUUFBYSxFQUFFLEtBQWEsRUFBRSxJQUFtQjtRQUN6RCxLQUFLLENBQUMsMEJBQTBCLENBQUMsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQ3ZELElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ25CLFFBQVEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDdEIsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQzthQUNqRDtZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO2FBQ3pEO1NBQ0osQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7S0FDdEI7Ozs7SUFFRCxXQUFXO1FBQ1AsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7S0FDeEI7Ozs7SUFFRCxRQUFRO1FBQ0osTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7S0FDckI7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFV0aWxzIH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xuZXhwb3J0IGNsYXNzIEVudGl0eVNldDxUPiB7XG4gICAgcHJpdmF0ZSBlbnRpdGllczogVFtdO1xuICAgIHByaXZhdGUgY291bnQ6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKGVudGl0aWVzOiBUW10sIGNvdW50OiBudW1iZXIsIHR5cGU6IChuZXcgKCkgPT4gVCkpIHtcbiAgICAgICAgVXRpbHMucmVxdWlyZU5vdE51bGxOb3JVbmRlZmluZWQoZW50aXRpZXMsICdlbnRpdGllcycpO1xuICAgICAgICB0aGlzLmVudGl0aWVzID0gW107XG4gICAgICAgIGVudGl0aWVzLmZvckVhY2goZW50aXR5ID0+IHtcbiAgICAgICAgICAgIGlmIChVdGlscy5pc051bGxPclVuZGVmaW5lZCh0eXBlKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZW50aXRpZXMucHVzaChPYmplY3QuYXNzaWduKHt9LCBlbnRpdHkpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lbnRpdGllcy5wdXNoKE9iamVjdC5hc3NpZ24obmV3IHR5cGUoKSwgZW50aXR5KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNvdW50ID0gY291bnQ7XG4gICAgfVxuXG4gICAgZ2V0RW50aXRpZXMoKTogVFtdIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZW50aXRpZXM7XG4gICAgfVxuXG4gICAgZ2V0Q291bnQoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY291bnQ7XG4gICAgfVxufVxuIl19