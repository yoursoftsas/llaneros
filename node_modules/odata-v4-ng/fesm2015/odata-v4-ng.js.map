{"version":3,"file":"odata-v4-ng.js.map","sources":["ng://odata-v4-ng/lib/query-options/operator.ts","ng://odata-v4-ng/lib/odata-query/quoted-string.ts","ng://odata-v4-ng/lib/utils/utils.ts","ng://odata-v4-ng/lib/odata-query/odata-query-abstract.ts","ng://odata-v4-ng/lib/odata-query/odata-query-batch.ts","ng://odata-v4-ng/lib/query-options/filter/filter-string.ts","ng://odata-v4-ng/lib/query-options/expand.ts","ng://odata-v4-ng/lib/query-options/orderby.ts","ng://odata-v4-ng/lib/query-options/query-options.ts","ng://odata-v4-ng/lib/odata-query/odata-query.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-annotation.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-entity-container.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-entity-set.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-enum-type.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-function-action.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-navigation-property-binding.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-reference.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-schema.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-singleton.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-structural-property.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-structured-type.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-type-definition.ts","ng://odata-v4-ng/lib/odata-response/entity-collection.ts","ng://odata-v4-ng/lib/odata-response/metadata.ts","ng://odata-v4-ng/lib/odata-response/odata-response-abstract.ts","ng://odata-v4-ng/lib/odata-response/odata-response.ts","ng://odata-v4-ng/lib/odata-response/odata-response-batch.ts","ng://odata-v4-ng/lib/odata-service/http-options.ts","ng://odata-v4-ng/lib/odata-service/odata.service.ts","ng://odata-v4-ng/lib/query-options/filter/filter.ts","ng://odata-v4-ng/lib/query-options/filter/filter-has-property.ts","ng://odata-v4-ng/lib/query-options/filter/filter-comparison.ts","ng://odata-v4-ng/lib/query-options/filter/filter-function.ts","ng://odata-v4-ng/lib/query-options/filter/filter-has-filter.ts","ng://odata-v4-ng/lib/query-options/filter/filter-lambda.ts","ng://odata-v4-ng/lib/query-options/filter/filter-logical.ts","ng://odata-v4-ng/lib/query-options/search/search.ts","ng://odata-v4-ng/lib/query-options/search/search-logical.ts","ng://odata-v4-ng/lib/query-options/search/search-simple.ts","ng://odata-v4-ng/lib/query-options/search/search-phrase.ts","ng://odata-v4-ng/lib/odata.module.ts"],"sourcesContent":["export enum OperatorComparison {\n    EQ, NE, GT, GE, LT, LE, HAS\n}\n\nexport enum OperatorLogical {\n    AND, OR, NOT\n}\n\nexport enum OperatorArithmetic {\n    ADD, SUB, MUL, DIV, MOD\n}\n","export class QuotedString {\n    constructor(private value: string) { }\n    toString(): string {\n        return this.value;\n    }\n}\n","import { OperatorLogical } from '../query-options/operator';\n\nimport { QuotedString } from '../odata-query/quoted-string';\n\nexport class Utils {\n    static isNull(value: any): boolean {\n        return value === null;\n    }\n\n    static isUndefined(value: any): boolean {\n        return value === undefined;\n    }\n\n    static isNullOrUndefined(value: any): boolean {\n        return Utils.isNull(value) || Utils.isUndefined(value);\n    }\n\n    static isNotNullNorUndefined(value: any): boolean {\n        return !Utils.isNull(value) && !Utils.isUndefined(value);\n    }\n\n    static isEmpty(value: any): boolean {\n        if (Utils.isNullOrUndefined(value)\n            || typeof (value) === 'string' && !value.length\n            || value instanceof Array && !value.length\n            || typeof (value.isEmpty) === 'function' && value.isEmpty()) {\n            return true;\n        }\n        if (value instanceof Array && value) {\n            for (const v of value) {\n                if (!Utils.isEmpty(v)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    static requireNull(fieldValue: any, fieldName: string) {\n        if (fieldValue !== null) {\n            throw new Error(fieldName + ' must be null');\n        }\n    }\n\n    static requireUndefined(fieldValue: any, fieldName: string) {\n        if (fieldValue !== undefined) {\n            throw new Error(fieldName + ' must be undefined');\n        }\n    }\n\n    static requireNotNull(fieldValue: any, fieldName: string) {\n        if (fieldValue === null) {\n            throw new Error(fieldName + ' cannot be null');\n        }\n    }\n\n    static requireNotUndefined(fieldValue: any, fieldName: string) {\n        if (fieldValue === undefined) {\n            throw new Error(fieldName + ' cannot be undefined');\n        }\n    }\n\n    static requireNotNullNorUndefined(fieldValue: any, fieldName: string) {\n        Utils.requireNotNull(fieldValue, fieldName);\n        Utils.requireNotUndefined(fieldValue, fieldName);\n    }\n\n    static requireNullOrUndefined(fieldValue: any, fieldName: string) {\n        if (!Utils.isNull(fieldValue) && !Utils.isUndefined(fieldValue)) {\n            throw new Error(fieldName + ' must be null or undefined');\n        }\n    }\n\n    static requireNotEmpty(fieldValue: any, fieldName: string) {\n        if (Utils.isEmpty(fieldValue)) {\n            throw new Error(fieldName + ' cannot be empty');\n        }\n    }\n\n    static requireNotNegative(fieldValue: number, fieldName: string) {\n        if (fieldValue < 0) {\n            throw new Error(fieldName + ' cannot be negative');\n        }\n    }\n\n    static appendSegment(path: string, segment: string): string {\n        Utils.requireNotNullNorUndefined(path, 'path');\n        Utils.requireNotNullNorUndefined(segment, 'segment');\n        if (!path.endsWith('/')) {\n            path += '/';\n        }\n        return path + segment;\n    }\n\n    static removeEndingSeparator(value: string): string {\n        Utils.requireNotNullNorUndefined(value, 'value');\n        if (value.endsWith('/')) {\n            if (value.length === 1) {\n                return '';\n            }\n            return value.substring(0, value.length - 1);\n        }\n        return value;\n    }\n\n    static getValueURI(value: boolean | number | string | QuotedString, encodeURI: boolean): any {\n        Utils.requireNotUndefined(value, 'value');\n        Utils.requireNotNullNorUndefined(encodeURI, 'encodeURI');\n\n        let res: any = value;\n\n        if (typeof (res) === 'string') {\n            // encode uri component\n            if (Utils.isNotNullNorUndefined(encodeURI) && encodeURI) {\n                res = encodeURIComponent(res);\n            }\n        } else if (res instanceof QuotedString) {\n            // escape single quote\n            res = res.toString().replace(/'/g, '\\'\\'');\n\n            // encode uri component\n            if (Utils.isNotNullNorUndefined(encodeURI) && encodeURI) {\n                res = encodeURIComponent(res);\n            }\n\n            // add start/ending quotes\n            res = '\\'' + res + '\\'';\n        }\n\n        // boolean, number\n        return res;\n    }\n\n    static toString(items: any[], operator?: OperatorLogical, operatorUppercase: boolean = false): string {\n        let res = '';\n        if (Utils.isNullOrUndefined(items) || !items.length) {\n            return res;\n        }\n\n        for (const item of items) {\n            if (res.length) {\n                if (Utils.isNotNullNorUndefined(operator)) {\n                    const operatorString: string = Utils.getOperatorString(operator, operatorUppercase);\n                    res += ` ${operatorString} `;\n                } else {\n                    res += ',';\n                }\n            }\n            if (Utils.isNotNullNorUndefined(operator) && operator === OperatorLogical.NOT) {\n                const operatorString: string = Utils.getOperatorString(operator, operatorUppercase);\n                res += `${operatorString} `;\n            }\n\n            res += item;\n        }\n\n        if (Utils.isNotNullNorUndefined(operator)) {\n            return `(${res})`;\n        }\n\n        return res;\n    }\n\n    protected static getOperatorString(operator: OperatorLogical, operatorUppercase: boolean): string {\n        let operatorString: string = OperatorLogical[operator].toLowerCase();\n        if (Utils.isNotNullNorUndefined(operatorUppercase) && operatorUppercase) {\n            operatorString = operatorString.toUpperCase();\n        }\n        return operatorString;\n    }\n}\n","import { Utils } from '../utils/utils';\nimport { ODataService } from '../odata-service/odata.service';\n\nexport abstract class ODataQueryAbstract {\n  protected odataService: ODataService;\n  protected serviceRoot: string;\n  protected queryString: string;\n\n  constructor(odataService: ODataService, serviceRoot: string) {\n    Utils.requireNotNullNorUndefined(odataService, 'odataService');\n    Utils.requireNotNullNorUndefined(serviceRoot, 'serviceRoot');\n    Utils.requireNotEmpty(serviceRoot, 'serviceRoot');\n    this.odataService = odataService;\n    this.serviceRoot = serviceRoot;\n    this.queryString = serviceRoot;\n  }\n\n  abstract toString();\n}\n","import { HttpHeaders } from '@angular/common/http';\nimport { UUID } from 'angular2-uuid';\nimport { Observable } from 'rxjs';\nimport { ODataResponse } from '../odata-response/odata-response';\nimport { HttpOptionsI } from '../odata-service/http-options';\nimport { ODataService } from '../odata-service/odata.service';\nimport { Utils } from '../utils/utils';\nimport { ODataQuery } from './odata-query';\nimport { ODataQueryAbstract } from './odata-query-abstract';\n\n\nexport enum Method {\n  GET, POST, PUT, PATCH, DELETE\n}\n\nexport class BatchRequest {\n  constructor(\n    public method: Method,\n    public odataQuery: ODataQuery,\n    public body?: any,\n    public httpOptions?: HttpOptionsI) { }\n}\n\nexport class ODataQueryBatch extends ODataQueryAbstract {\n  private static readonly BOUNDARY_PREFIX_SUFFIX = '--';\n  private static readonly BATCH_PREFIX = 'batch_';\n  private static readonly CHANGESET_PREFIX = 'changeset_';\n  private static readonly NEWLINE = '\\r\\n';\n\n  // CONSTANT SEGMENTS\n  private static readonly $BATCH = '$batch';\n\n  // HEADERS\n  private static readonly HTTP11 = 'HTTP/1.1';\n  private static readonly ODATA_VERSION = 'OData-Version';\n  private static readonly CONTENT_TYPE = 'Content-Type';\n  private static readonly ACCEPT = 'Accept';\n  private static readonly CONTENT_TRANSFER_ENCODING = 'Content-Transfer-Encoding';\n  private static readonly CONTENT_ID = 'Content-ID';\n\n  // HEADER VALUES\n  private static readonly VERSION_4_0 = '4.0';\n  private static readonly MULTIPART_MIXED = 'multipart/mixed';\n  private static readonly MULTIPART_MIXED_BOUNDARY = 'multipart/mixed;boundary=';\n  private static readonly APPLICATION_HTTP = 'application/http';\n  private static readonly BINARY = 'binary';\n  private static readonly APPLICATION_JSON = 'application/json';\n\n  // VARIABLES\n  private requests: BatchRequest[];\n  private batchBoundary: string;\n  private changesetBoundary: string;\n  private changesetID: number;\n\n  constructor(odataService: ODataService, serviceRoot: string) {\n    super(odataService, serviceRoot);\n    Utils.requireNotNullNorUndefined(odataService, 'odataService');\n    Utils.requireNotNullNorUndefined(serviceRoot, 'serviceRoot');\n    Utils.requireNotEmpty(serviceRoot, 'serviceRoot');\n    this.queryString = Utils.appendSegment(serviceRoot, ODataQueryBatch.$BATCH);\n    this.requests = [];\n    this.batchBoundary = ODataQueryBatch.BATCH_PREFIX + this.getUUID();\n    this.changesetBoundary = null;\n    this.changesetID = 1;\n  }\n\n  get(odataQuery: ODataQuery, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.GET, odataQuery, undefined, httpOptions));\n    return this;\n  }\n\n  post(odataQuery: ODataQuery, body: any, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.POST, odataQuery, body, httpOptions));\n    return this;\n  }\n\n  put(odataQuery: ODataQuery, body: any, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.PUT, odataQuery, body, httpOptions));\n    return this;\n  }\n\n  patch(odataQuery: ODataQuery, body: any, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.PATCH, odataQuery, body, httpOptions));\n    return this;\n  }\n\n  delete(odataQuery: ODataQuery, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.DELETE, odataQuery, undefined, httpOptions));\n    return this;\n  }\n\n  execute(httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    // set headers\n    if (Utils.isNullOrUndefined(httpOptions)) {\n      httpOptions = {};\n    }\n    if (Utils.isNullOrUndefined(httpOptions.headers)) {\n      httpOptions.headers = new HttpHeaders();\n    }\n    httpOptions.headers = httpOptions.headers.set(ODataQueryBatch.ODATA_VERSION, ODataQueryBatch.VERSION_4_0);\n    httpOptions.headers = httpOptions.headers.set(ODataQueryBatch.CONTENT_TYPE, ODataQueryBatch.MULTIPART_MIXED_BOUNDARY + this.batchBoundary);\n    httpOptions.headers = httpOptions.headers.set(ODataQueryBatch.ACCEPT, ODataQueryBatch.MULTIPART_MIXED);\n\n    // send request\n    return this.odataService.post(this, this.getBody(), httpOptions);\n  }\n\n  toString(): string {\n    return this.queryString;\n  }\n\n  getBody(): string {\n    let res = '';\n\n    for (const request of this.requests) {\n      const method: Method = request.method;\n      const odataQuery: ODataQuery = request.odataQuery;\n      const httpOptions: HttpOptionsI = request.httpOptions;\n      const body: any = request.body;\n\n      // if method is GET and there is a changeset boundary open then close it\n      if (method === Method.GET && Utils.isNotNullNorUndefined(this.changesetBoundary)) {\n        res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + ODataQueryBatch.NEWLINE;\n        this.changesetBoundary = null;\n      }\n\n      // if there is no changeset boundary open then open a batch boundary\n      if (Utils.isNullOrUndefined(this.changesetBoundary)) {\n        res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.batchBoundary + ODataQueryBatch.NEWLINE;\n      }\n\n      // if method is not GET and there is no changeset boundary open then open a changeset boundary\n      if (method !== Method.GET) {\n        if (Utils.isNullOrUndefined(this.changesetBoundary)) {\n          this.changesetBoundary = ODataQueryBatch.CHANGESET_PREFIX + this.getUUID();\n          res += ODataQueryBatch.CONTENT_TYPE + ': ' + ODataQueryBatch.MULTIPART_MIXED_BOUNDARY + this.changesetBoundary + ODataQueryBatch.NEWLINE;\n          res += ODataQueryBatch.NEWLINE;\n        }\n        res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + ODataQueryBatch.NEWLINE;\n      }\n\n      res += ODataQueryBatch.CONTENT_TYPE + ': ' + ODataQueryBatch.APPLICATION_HTTP + ODataQueryBatch.NEWLINE;\n      res += ODataQueryBatch.CONTENT_TRANSFER_ENCODING + ': ' + ODataQueryBatch.BINARY + ODataQueryBatch.NEWLINE;\n\n      if (method !== Method.GET) {\n        res += ODataQueryBatch.CONTENT_ID + ': ' + this.changesetID++ + ODataQueryBatch.NEWLINE;\n      }\n\n      res += ODataQueryBatch.NEWLINE;\n      res += Method[method] + ' ' + odataQuery + ' ' + ODataQueryBatch.HTTP11 + ODataQueryBatch.NEWLINE;\n\n      res += this.getHeaders(method, httpOptions);\n\n      res += ODataQueryBatch.NEWLINE;\n      if (method === Method.GET || method === Method.DELETE) {\n        res += ODataQueryBatch.NEWLINE;\n      } else {\n        res += JSON.stringify(body) + ODataQueryBatch.NEWLINE;\n      }\n    }\n\n    if (res.length) {\n      if (Utils.isNotNullNorUndefined(this.changesetBoundary)) {\n        res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + ODataQueryBatch.NEWLINE;\n        this.changesetBoundary = null;\n      }\n      res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.batchBoundary + ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX;\n    }\n\n    return res;\n  }\n\n  protected getHeaders(method: Method, httpOptions: HttpOptionsI): string {\n    let res = '';\n\n    if (method === Method.POST || method === Method.PATCH || method === Method.PUT) {\n      res += ODataQueryBatch.CONTENT_TYPE + ': ' + ODataQueryBatch.APPLICATION_JSON + ODataQueryBatch.NEWLINE;\n    }\n\n    if (Utils.isNullOrUndefined(httpOptions) || Utils.isNullOrUndefined(httpOptions.headers)) {\n      return res;\n    }\n\n    for (const key of httpOptions.headers.keys()) {\n      res += key + ': ' + httpOptions.headers.getAll(key) + ODataQueryBatch.NEWLINE;\n    }\n\n    return res;\n  }\n\n  getUUID(): string {\n    return UUID.UUID();\n  }\n}\n","import { Utils } from '../../utils/utils';\nimport { Filter } from './filter';\n\nexport class FilterString implements Filter {\n    private filter: string;\n\n    constructor(filter: string) {\n        Utils.requireNotNullNorUndefined(filter, 'filter');\n        Utils.requireNotEmpty(filter, 'filter');\n        this.filter = filter;\n    }\n\n    toString(): string {\n        return this.filter;\n    }\n\n    isEmpty(): boolean {\n        return Utils.isNullOrUndefined(this.filter) || !this.filter.length;\n    }\n}\n","import { QueryOptions } from './query-options';\nimport { Utils } from '../utils/utils';\nimport { Filter } from './filter/filter';\nimport { Orderby } from './orderby';\nimport { Search } from './search/search';\n\nexport class Expand {\n    static readonly SEPARATOR = ';';\n    private entitySet: string;\n    private queryOptions: QueryOptions;\n\n    constructor(entitySet: string) {\n        Utils.requireNotNullNorUndefined(entitySet, 'entitySet');\n        Utils.requireNotEmpty(entitySet, 'entitySet');\n        this.entitySet = entitySet;\n        this.queryOptions = new QueryOptions(Expand.SEPARATOR);\n    }\n\n    // QUERY OPTIONS\n\n    select(select: string | string[]): Expand {\n        this.queryOptions.select(select);\n        return this;\n    }\n\n    filter(filter: string | Filter): Expand {\n        this.queryOptions.filter(filter);\n        return this;\n    }\n\n    expand(expand: string | Expand | Expand[]): Expand {\n        this.queryOptions.expand(expand);\n        return this;\n    }\n\n    orderby(orderby: string | Orderby[]): Expand {\n        this.queryOptions.orderby(orderby);\n        return this;\n    }\n\n    search(search: string | Search): Expand {\n        this.queryOptions.search(search);\n        return this;\n    }\n\n    skip(skip: number): Expand {\n        this.queryOptions.skip(skip);\n        return this;\n    }\n\n    top(top: number): Expand {\n        this.queryOptions.top(top);\n        return this;\n    }\n\n    customOption(key: string, value: string) {\n        this.queryOptions.customOption(key, value);\n        return this;\n    }\n\n    toString(): string {\n        let res: string = this.entitySet;\n        if (!Utils.isEmpty(this.queryOptions)) {\n            res += '(' + this.queryOptions + ')';\n        }\n        return res;\n    }\n\n    isEmpty(): boolean {\n        return Utils.isEmpty(this.entitySet);\n    }\n}\n","import { Utils } from '../utils/utils';\n\nexport enum Order {\n    ASC, DESC\n}\n\nexport class Orderby {\n    private property: string;\n    private order: Order;\n\n    constructor(property: string, order?: Order) {\n        Utils.requireNotNullNorUndefined(property, 'property');\n        this.property = property;\n        this.order = order;\n    }\n\n    toString() {\n        let res = this.property;\n        if (!Utils.isNullOrUndefined(this.order)) {\n            res += ' ' + Order[this.order].toLowerCase();\n        }\n        return res;\n    }\n}\n","import { FilterString } from './filter/filter-string';\nimport { Filter } from './filter/filter';\nimport { Expand } from './expand';\nimport { Utils } from '../utils/utils';\nimport { Orderby } from './orderby';\nimport { Search } from './search/search';\n\nexport class QueryOptions {\n  private _separator: string;\n  private _select: string[];\n  private _filter: Filter;\n  private _expand: Expand[];\n  private _orderby: Orderby[];\n  private _search: string | Search;\n  private _skip: number;\n  private _top: number;\n  private _count: boolean;\n  private _customOptions: Map<string, string>;\n  private _format: string;\n\n  constructor(separator: string) {\n    Utils.requireNotNullNorUndefined(separator, 'separator');\n    Utils.requireNotEmpty(separator, 'separator');\n    this._separator = separator;\n    this._select = null;\n    this._filter = null;\n    this._expand = null;\n    this._orderby = null;\n    this._search = null;\n    this._skip = null;\n    this._top = null;\n    this._count = null;\n    this._customOptions = null;\n    this._format = null;\n  }\n\n  select(select: string | string[]): QueryOptions {\n    if (Utils.isNullOrUndefined(select) || Utils.isEmpty(select)) {\n      this._select = null;\n    } else {\n      this._select = typeof (select) === 'string' ? [select] : select;\n    }\n    return this;\n  }\n\n  filter(filter: string | Filter): QueryOptions {\n    if (Utils.isNullOrUndefined(filter) || Utils.isEmpty(filter)) {\n      this._filter = null;\n    } else {\n      this._filter = typeof (filter) === 'string' ? new FilterString(filter) : filter;\n    }\n    return this;\n  }\n\n  expand(expand: string | Expand | Expand[]): QueryOptions {\n    if (Utils.isNullOrUndefined(expand) || Utils.isEmpty(expand)) {\n      this._expand = null;\n    } else {\n      this._expand = typeof (expand) === 'string' ? [new Expand(expand)] : expand instanceof Expand ? [expand] : expand;\n    }\n    return this;\n  }\n\n  orderby(orderby: string | Orderby[]): QueryOptions {\n    if (Utils.isNullOrUndefined(orderby) || Utils.isEmpty(orderby)) {\n      this._orderby = null;\n    } else {\n      this._orderby = typeof (orderby) === 'string' ? [new Orderby(orderby)] : orderby;\n    }\n    return this;\n  }\n\n  search(search: string | Search): QueryOptions {\n    this._search = search;\n    return this;\n  }\n\n  skip(skip: number): QueryOptions {\n    Utils.requireNotNegative(skip, 'skip');\n    this._skip = skip;\n    return this;\n  }\n\n  top(top: number): QueryOptions {\n    Utils.requireNotNegative(top, 'top');\n    this._top = top;\n    return this;\n  }\n\n  count(count: boolean): QueryOptions {\n    this._count = count;\n    return this;\n  }\n\n  format(format: string): QueryOptions {\n    this._format = format;\n    return this;\n  }\n\n  customOption(key: string, value: string) {\n    Utils.requireNotNullNorUndefined(key, 'key');\n    if (Utils.isNullOrUndefined(this._customOptions)) {\n      this._customOptions = new Map<string, string>();\n    }\n    this._customOptions.set(key, value);\n    return this;\n  }\n\n  toString(): string {\n    // query options\n    let queryOptions = '';\n\n    // add select\n    if (!Utils.isNullOrUndefined(this._select) && !Utils.isEmpty(this._select)) {\n      queryOptions += '$select=';\n      if (typeof (this._select) === 'string') {\n        queryOptions += this._select;\n      } else {\n        queryOptions += Utils.toString(this._select);\n      }\n    }\n\n    // add filter\n    if (!Utils.isNullOrUndefined(this._filter) && !Utils.isEmpty(this._filter)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$filter=' + encodeURIComponent(this._filter.toString());\n    }\n\n    // add expand\n    if (!Utils.isNullOrUndefined(this._expand) && !Utils.isEmpty(this._expand)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$expand=';\n      if (typeof (this._expand) === 'string') {\n        queryOptions += this._expand;\n      } else {\n        queryOptions += Utils.toString(this._expand);\n      }\n    }\n\n    // add orderby\n    if (!Utils.isNullOrUndefined(this._orderby) && !Utils.isEmpty(this._orderby)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$orderby=';\n      if (typeof (this._orderby) === 'string') {\n        queryOptions += this._orderby;\n      } else {\n        queryOptions += Utils.toString(this._orderby);\n      }\n    }\n\n    // add search\n    if (!Utils.isNullOrUndefined(this._search) && !Utils.isEmpty(this._search)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$search=' + encodeURIComponent(this._search.toString());\n    }\n\n    // add skip\n    if (!Utils.isNullOrUndefined(this._skip) && !Utils.isEmpty(this._skip)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$skip=' + this._skip;\n    }\n\n    // add top\n    if (!Utils.isNullOrUndefined(this._top) && !Utils.isEmpty(this._top)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$top=' + this._top;\n    }\n\n    // add count\n    if (!Utils.isNullOrUndefined(this._count) && !Utils.isEmpty(this._count)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$count=' + this._count;\n    }\n\n    // add custom query options\n    if (Utils.isNotNullNorUndefined(this._customOptions) && this._customOptions.size > 0) {\n      this._customOptions.forEach((value: string, key: string, map: Map<string, string>) => {\n        if (Utils.isNotNullNorUndefined(key) && !Utils.isEmpty(key)\n          && Utils.isNotNullNorUndefined(value) && !Utils.isEmpty(value)) {\n          if (queryOptions.length) {\n            queryOptions += this._separator;\n          }\n          queryOptions += key + '=' + encodeURIComponent(value);\n        }\n      });\n    }\n\n    // add format\n    if (!Utils.isNullOrUndefined(this._format) && !Utils.isEmpty(this._format)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$format=' + this._format;\n    }\n\n    return queryOptions;\n  }\n\n  isEmpty(): boolean {\n    for (const key in this) {\n      if (key === '_purpose' || key === '_separator') {\n        continue;\n      }\n      if (this.hasOwnProperty(key) && !Utils.isEmpty(this[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Observable } from 'rxjs';\n\nimport { ODataResponse } from '../odata-response/odata-response';\nimport { HttpOptionsI } from '../odata-service/http-options';\nimport { ODataService } from '../odata-service/odata.service';\nimport { Expand } from '../query-options/expand';\nimport { Filter } from '../query-options/filter/filter';\nimport { Orderby } from '../query-options/orderby';\nimport { QueryOptions } from '../query-options/query-options';\nimport { Search } from '../query-options/search/search';\nimport { Utils } from '../utils/utils';\nimport { ODataQueryAbstract } from './odata-query-abstract';\nimport { ODataQueryBatch } from './odata-query-batch';\n\nexport class ODataQuery extends ODataQueryAbstract {\n  // QUERY OPTIONS SEPARATOR\n  static readonly SEPARATOR = '&';\n\n  // SEGMENT NAMES\n  private static readonly METADATA = 'metadata';\n  private static readonly ENTITY_SET = 'entitySet';\n  private static readonly ENTITY_KEY = 'entityKey';\n  private static readonly SINGLETON = 'singleton';\n  private static readonly TYPE_NAME = 'typeName';\n  private static readonly PROPERTY = 'property';\n  private static readonly NAVIGATION_PROPERTY = 'navigationProperty';\n  private static readonly REF = 'ref';\n  private static readonly VALUE = 'value';\n  private static readonly COUNT = 'count';\n  private static readonly FUNCTION_CALL = 'functionCall';\n  private static readonly ACTION_CALL = 'actionCall';\n\n  // CONSTANT SEGMENTS\n  private static readonly $METADATA = '$metadata';\n  private static readonly $REF = '$ref';\n  private static readonly $VALUE = '$value';\n  private static readonly $COUNT = '$count';\n\n  // VARIABLES\n  private queryOptions: QueryOptions;\n  private segments: string[];\n  private lastSegment: string;\n\n  constructor(odataService: ODataService, serviceRoot: string) {\n    super(odataService, serviceRoot);\n    Utils.requireNotNullNorUndefined(odataService, 'odataService');\n    Utils.requireNotNullNorUndefined(serviceRoot, 'serviceRoot');\n    Utils.requireNotEmpty(serviceRoot, 'serviceRoot');\n    this.queryOptions = new QueryOptions(ODataQuery.SEPARATOR);\n    this.segments = [];\n    this.lastSegment = null;\n  }\n\n  // QUERY SEGMENTS\n\n  metadata(): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.METADATA), ODataQuery.METADATA);\n    if (this.segments.length) {\n      throw new Error('metadata segment cannot be appended to other segments');\n    }\n    this.queryString = Utils.appendSegment(this.queryString, ODataQuery.$METADATA);\n    this.addSegment(ODataQuery.METADATA);\n    return this;\n  }\n\n  entitySet(entitySet: string): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.ENTITY_SET), ODataQuery.ENTITY_SET);\n    Utils.requireNotNullNorUndefined(entitySet, 'entitySet');\n    Utils.requireNotEmpty(entitySet, 'entitySet');\n    this.queryString = Utils.appendSegment(this.queryString, entitySet);\n    this.addSegment(ODataQuery.ENTITY_SET);\n    return this;\n  }\n\n  entityKey(entityKey: any | any[]): ODataQuery {\n    if (this.lastSegment !== ODataQuery.ENTITY_SET && this.lastSegment !== ODataQuery.NAVIGATION_PROPERTY) {\n      throw new Error('entityKey can only be appended to entitySet or navigationProperty');\n    }\n    Utils.requireNotNullNorUndefined(entityKey, 'entityKey');\n    Utils.requireNotEmpty(entityKey, 'entityKey');\n    entityKey = Utils.getValueURI(entityKey, true);\n    this.queryString = Utils.removeEndingSeparator(this.queryString) + '(' + entityKey + ')';\n    this.addSegment(ODataQuery.ENTITY_KEY);\n    return this;\n  }\n\n  singleton(singleton: string) {\n    if (this.segments.length) {\n      throw new Error('singleton segment cannot be appended to other segments');\n    }\n    Utils.requireNotNullNorUndefined(singleton, 'singleton');\n    Utils.requireNotEmpty(singleton, 'singleton');\n    this.queryString = Utils.appendSegment(this.queryString, singleton);\n    this.addSegment(ODataQuery.SINGLETON);\n    return this;\n  }\n\n  typeName(typeName: string) {\n    if (this.lastSegment !== ODataQuery.ENTITY_SET && this.lastSegment !== ODataQuery.NAVIGATION_PROPERTY && this.lastSegment !== ODataQuery.ENTITY_KEY) {\n      throw new Error('typeName can only be appended to entitySet, navigationProperty or entityKey');\n    }\n    Utils.requireNotNullNorUndefined(typeName, 'typeName');\n    Utils.requireNotEmpty(typeName, 'typeName');\n    this.queryString = Utils.appendSegment(this.queryString, typeName);\n    this.addSegment(ODataQuery.TYPE_NAME);\n    return this;\n  }\n\n  property(property: string): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.PROPERTY), ODataQuery.PROPERTY);\n    if (this.lastSegment !== ODataQuery.ENTITY_KEY && this.lastSegment !== ODataQuery.SINGLETON) {\n      throw new Error('property can only be appended to entityKey or singleton');\n    }\n    Utils.requireNotNullNorUndefined(property, 'property');\n    Utils.requireNotEmpty(property, 'property');\n    this.queryString = Utils.appendSegment(this.queryString, property);\n    this.addSegment(ODataQuery.PROPERTY);\n    return this;\n  }\n\n  navigationProperty(navigationProperty: string): ODataQuery {\n    if (this.lastSegment !== ODataQuery.ENTITY_KEY && this.lastSegment !== ODataQuery.SINGLETON && this.lastSegment !== ODataQuery.TYPE_NAME) {\n      throw new Error('navigationProperty can only be appended to entityKey, singleton or typeName');\n    }\n    Utils.requireNotNullNorUndefined(navigationProperty, 'navigationProperty');\n    Utils.requireNotEmpty(navigationProperty, 'navigationProperty');\n    this.queryString = Utils.appendSegment(this.queryString, navigationProperty);\n    this.addSegment(ODataQuery.NAVIGATION_PROPERTY);\n    return this;\n  }\n\n  ref(): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.REF), ODataQuery.REF);\n    if (this.lastSegment !== ODataQuery.NAVIGATION_PROPERTY) {\n      throw new Error('ref can only be appended to navigationProperty');\n    }\n    this.queryString = Utils.appendSegment(this.queryString, ODataQuery.$REF);\n    this.addSegment(ODataQuery.REF);\n    return this;\n  }\n\n  value(): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.VALUE), ODataQuery.VALUE);\n    if (this.lastSegment !== ODataQuery.PROPERTY) {\n      throw new Error('value can only be appended to property');\n    }\n    this.queryString = Utils.appendSegment(this.queryString, ODataQuery.$VALUE);\n    this.addSegment(ODataQuery.VALUE);\n    return this;\n  }\n\n  countSegment(): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.COUNT), ODataQuery.COUNT);\n    if (this.lastSegment !== ODataQuery.ENTITY_SET && this.lastSegment !== ODataQuery.NAVIGATION_PROPERTY) {\n      throw new Error('count can only be appended to entitySet or navigationProperty');\n    }\n    this.queryString = Utils.appendSegment(this.queryString, ODataQuery.$COUNT);\n    this.addSegment(ODataQuery.COUNT);\n    return this;\n  }\n\n  functionCall(functionCall: string): ODataQuery {\n    Utils.requireNotNullNorUndefined(functionCall, 'functionCall');\n    Utils.requireNotEmpty(functionCall, 'functionCall');\n    this.queryString = Utils.appendSegment(this.queryString, functionCall);\n    this.addSegment(ODataQuery.FUNCTION_CALL);\n    return this;\n  }\n\n  actionCall(actionCall: string): ODataQuery {\n    Utils.requireNotNullNorUndefined(actionCall, 'actionCall');\n    Utils.requireNotEmpty(actionCall, 'actionCall');\n    this.queryString = Utils.appendSegment(this.queryString, actionCall);\n    this.addSegment(ODataQuery.ACTION_CALL);\n    return this;\n  }\n\n  batch(): ODataQueryBatch {\n    return new ODataQueryBatch(this.odataService, this.serviceRoot);\n  }\n\n  // QUERY OPTIONS\n\n  select(select: string | string[]): ODataQuery {\n    this.queryOptions.select(select);\n    return this;\n  }\n\n  filter(filter: string | Filter): ODataQuery {\n    this.queryOptions.filter(filter);\n    return this;\n  }\n\n  expand(expand: string | Expand | Expand[]): ODataQuery {\n    this.queryOptions.expand(expand);\n    return this;\n  }\n\n  orderby(orderby: string | Orderby[]): ODataQuery {\n    this.queryOptions.orderby(orderby);\n    return this;\n  }\n\n  search(search: string | Search): ODataQuery {\n    this.queryOptions.search(search);\n    return this;\n  }\n\n  skip(skip: number): ODataQuery {\n    this.queryOptions.skip(skip);\n    return this;\n  }\n\n  top(top: number): ODataQuery {\n    this.queryOptions.top(top);\n    return this;\n  }\n\n  countOption(count: boolean): ODataQuery {\n    this.queryOptions.count(count);\n    return this;\n  }\n\n  customOption(key: string, value: string) {\n    this.queryOptions.customOption(key, value);\n    return this;\n  }\n\n  format(format: string): ODataQuery {\n    this.queryOptions.format(format);\n    return this;\n  }\n\n  // QUERY EXECUTION\n\n  get(httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.get(this, httpOptions);\n  }\n\n  post(body: any, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.post(this, body, httpOptions);\n  }\n\n  patch(body: any, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.patch(this, body, etag, httpOptions);\n  }\n\n  put(body: any, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.put(this, body, etag, httpOptions);\n  }\n\n  delete(etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.delete(this, etag, httpOptions);\n  }\n\n  toString(): string {\n    let res: string = this.queryString;\n    if (Utils.isNotNullNorUndefined(this.queryOptions) && !this.queryOptions.isEmpty()) {\n      res += '?' + this.queryOptions.toString();\n    }\n    return res;\n  }\n\n  protected getSegment(segment: string): string {\n    Utils.requireNotNull(segment, 'segment');\n    const res: string = this.segments.find((value: string, index: number, segments: string[]) => {\n      return value === segment;\n    });\n    return res;\n  }\n\n  protected addSegment(segment: string): void {\n    Utils.requireNotNull(segment, 'segment');\n    this.segments.push(segment);\n    if (Utils.isNotNullNorUndefined(this.segments) && this.segments.length) {\n      this.lastSegment = this.segments[this.segments.length - 1];\n    }\n  }\n}\n","export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n","import { CsdlEntitySet } from './csdl-entity-set';\nimport { CsdlSingleton } from './csdl-singleton';\nimport { CsdlFunctionImport, CsdlActionImport } from './csdl-function-action';\n\nexport class CsdlEntityContainer {\n    constructor(\n        public name: string,\n        public extend?: string,\n        public entitySets?: CsdlEntitySet[],\n        public singletons?: CsdlSingleton[],\n        public functionImports?: CsdlFunctionImport[],\n        public actionImports?: CsdlActionImport[]\n    ) { }\n}\n","import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlEntitySet {\n    constructor(\n        public name: string,\n        public entityType: string,\n        public navigationPropertyBinding?: CsdlNavigationPropertyBinding[],\n        public includeInServiceDocument?: boolean\n    ) {\n\n    }\n}\n","export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n","export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n","export class CsdlNavigationPropertyBinding {\n    constructor(\n        public path: string,\n        public target: string,\n    ) { }\n}\n","import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n","import { CsdlAnnotation, CsdlAnnotable, CsdlTerm, CsdlAnnotations } from './csdl-annotation';\nimport { CsdlTypeDefinition } from './csdl-type-definition';\nimport { CsdlEnumType } from './csdl-enum-type';\nimport { CsdlEntityType, CsdlComplexType } from './csdl-structured-type';\nimport { CsdlFunction, CsdlAction } from './csdl-function-action';\nimport { CsdlEntityContainer } from './csdl-entity-container';\n\nexport class CsdlSchema extends CsdlAnnotable {\n    constructor(\n        public namespace: string,\n        public alias?: string,\n        public enumTypes?: CsdlEnumType[],\n        public complexTypes?: CsdlComplexType[],\n        public entityTypes?: CsdlEntityType[],\n        public functions?: CsdlFunction[],\n        public actions?: CsdlAction[],\n        public entityContainer?: CsdlEntityContainer,\n        public typeDefinitions?: CsdlTypeDefinition[],\n        public terms?: CsdlTerm[],\n        public annotationsList?: CsdlAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n","import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlSingleton {\n    constructor(\n        public name: string,\n        public type: string,\n        public navigationPropertyBindings?: CsdlNavigationPropertyBinding[]\n    ) { }\n}\n","export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n","import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n","import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlTypeDefinition extends CsdlAnnotable {\n    constructor(\n        public name: string,\n        public underlayingType: string,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        annotationList?: CsdlAnnotation[]) {\n        super(annotationList);\n    }\n}\n","import { Utils } from '../utils/utils';\nexport class EntitySet<T> {\n    private entities: T[];\n    private count: number;\n\n    constructor(entities: T[], count: number, type: (new () => T)) {\n        Utils.requireNotNullNorUndefined(entities, 'entities');\n        this.entities = [];\n        entities.forEach(entity => {\n            if (Utils.isNullOrUndefined(type)) {\n                this.entities.push(Object.assign({}, entity));\n            } else {\n                this.entities.push(Object.assign(new type(), entity));\n            }\n        });\n        this.count = count;\n    }\n\n    getEntities(): T[] {\n        return this.entities;\n    }\n\n    getCount(): number {\n        return this.count;\n    }\n}\n","import { CsdlTypeDefinition } from './csdl/csdl-type-definition';\nimport { CsdlSchema } from './csdl/csdl-schema';\nimport { Utils } from '../utils/utils';\nimport { CsdlEnumType, CsdlEnumMember } from './csdl/csdl-enum-type';\nimport { CsdlEntityType, CsdlPropertyRef, CsdlKey, CsdlComplexType } from './csdl/csdl-structured-type';\nimport { CsdlFunction, CsdlParameter, CsdlFunctionImport, CsdlActionImport, CsdlReturnType, CsdlAction } from './csdl/csdl-function-action';\nimport { CsdlProperty, CsdlNavigationProperty, CsdlReferentialConstraint, CsdlOnDelete } from './csdl/csdl-structural-property';\nimport { CsdlEntitySet } from './csdl/csdl-entity-set';\nimport { CsdlSingleton } from './csdl/csdl-singleton';\nimport { CsdlEntityContainer } from './csdl/csdl-entity-container';\nimport { CsdlReference, CsdlInclude, CsdlIncludeAnnotations } from './csdl/csdl-reference';\nimport { CsdlAnnotation, CsdlTerm, CsdlAnnotations } from './csdl/csdl-annotation';\nimport { CsdlNavigationPropertyBinding } from './csdl/csdl-navigation-property-binding';\n\nexport enum FieldType {\n    ATTRIBUTE, TAG\n}\nexport class Field {\n    constructor(public name: string, public fieldType: FieldType) { }\n}\n\nexport class Metadata {\n    // TAGS\n    private static readonly TAG_EDMX = 'edmx:Edmx';\n    private static readonly TAG_DATA_SERVICES = 'edmx:DataServices';\n    private static readonly TAG_REFERENCE = 'edmx:Reference';\n    private static readonly TAG_INCLUDE = 'edmx:Include';\n    private static readonly TAG_INCLUDE_ANNOTATIONS = 'edmx:IncludeAnnotations';\n    private static readonly TAG_TERM = 'Term';\n    private static readonly TAG_ANNOTATIONS = 'Annotations';\n    private static readonly TAG_ANNOTATION = 'Annotation';\n    private static readonly TAG_SCHEMA = 'Schema';\n    private static readonly TAG_ENUM_TYPE = 'EnumType';\n    private static readonly TAG_MEMBER = 'Member';\n    private static readonly TAG_COMPLEX_TYPE = 'ComplexType';\n    private static readonly TAG_ENTITY_TYPE = 'EntityType';\n    private static readonly TAG_PROPERTY = 'Property';\n    private static readonly TAG_KEY = 'Key';\n    private static readonly TAG_PROPERTY_REF = 'PropertyRef';\n    private static readonly TAG_NAVIGATION_PROPERTY = 'NavigationProperty';\n    private static readonly TAG_REFERENTIAL_CONSTRAINT = 'ReferentialConstraint';\n    private static readonly TAG_ON_DELETE = 'OnDelete';\n    private static readonly TAG_FUNCTION = 'Function';\n    private static readonly TAG_RETURN_TYPE = 'ReturnType';\n    private static readonly TAG_PARAMETER = 'Parameter';\n    private static readonly TAG_ACTION = 'Action';\n    private static readonly TAG_ENTITY_CONTAINER = 'EntityContainer';\n    private static readonly TAG_ENTITY_SET = 'EntitySet';\n    private static readonly TAG_SINGLETON = 'Singleton';\n    private static readonly TAG_FUNCTION_IMPORT = 'FunctionImport';\n    private static readonly TAG_ACTION_IMPORT = 'ActionImport';\n    private static readonly TAG_NAVIGATION_PROPERTY_BINDING = 'NavigationPropertyBinding';\n    private static readonly TAG_TYPE_DEFINITION = 'TypeDefinition';\n\n    // ATTRIBUTES\n    private static readonly ATTRIBUTE_VERSION = 'Version';\n    private static readonly ATTRIBUTE_URI = 'Uri';\n    private static readonly ATTRIBUTE_ALIAS = 'Alias';\n    private static readonly ATTRIBUTE_NAMESPACE = 'Namespace';\n    private static readonly ATTRIBUTE_TERM_NAMESPACE = 'TermNamespace';\n    private static readonly ATTRIBUTE_QUALIFIER = 'Qualifier';\n    private static readonly ATTRIBUTE_TARGET_NAMESPACE = 'TargetNamespace';\n    private static readonly ATTRIBUTE_TERM = 'Term';\n    private static readonly ATTRIBUTE_NAME = 'Name';\n    private static readonly ATTRIBUTE_VALUE = 'Value';\n    private static readonly ATTRIBUTE_BASE_TYPE = 'BaseType';\n    private static readonly ATTRIBUTE_OPEN_TYPE = 'OpenType';\n    private static readonly ATTRIBUTE_TYPE = 'Type';\n    private static readonly ATTRIBUTE_NULLABLE = 'Nullable';\n    private static readonly ATTRIBUTE_MAX_LENGTH = 'MaxLength';\n    private static readonly ATTRIBUTE_PRECISION = 'Precision';\n    private static readonly ATTRIBUTE_SCALE = 'Scale';\n    private static readonly ATTRIBUTE_UNICODE = 'Unicode';\n    private static readonly ATTRIBUTE_SRID = 'SRID';\n    private static readonly ATTRIBUTE_DEFAULT_VALUE = 'DefaultValue';\n    private static readonly ATTRIBUTE_PARTNER = 'Partner';\n    private static readonly ATTRIBUTE_PROPERTY = 'Property';\n    private static readonly ATTRIBUTE_REFERENCED_PROPERTY = 'ReferencedProperty';\n    private static readonly ATTRIBUTE_HAS_STREAM = 'HasStream';\n    private static readonly ATTRIBUTE_CONTAINS_TARGET = 'ContainsTarget';\n    private static readonly ATTRIBUTE_IS_BOUND = 'IsBound';\n    private static readonly ATTRIBUTE_ENTITY_SET_PATH = 'EntitySetPath';\n    private static readonly ATTRIBUTE_IS_COMPOSABLE = 'IsComposable';\n    private static readonly ATTRIBUTE_ENTITY_TYPE = 'EntityType';\n    private static readonly ATTRIBUTE_PATH = 'Path';\n    private static readonly ATTRIBUTE_TARGET = 'Target';\n    private static readonly ATTRIBUTE_FUNCTION = 'Function';\n    private static readonly ATTRIBUTE_ACTION = 'Action';\n    private static readonly ATTRIBUTE_ENTITY_SET = 'EntitySet';\n    private static readonly ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT = 'IncludeInServiceDocument';\n    private static readonly ATTRIBUTE_ABSTRACT = 'Abstract';\n    private static readonly ATTRIBUTE_UNDERLYING_TYPE = 'UnderlyingType';\n    private static readonly ATTRIBUTE_IS_FLAGS = 'IsFlags';\n    private static readonly ATTRIBUTE_EXTENDS = 'Extends';\n    private static readonly ATTRIBUTE_BASE_TERM = 'BaseTerm';\n    private static readonly ATTRIBUTE_APPLIES_TO = 'AppliesTo';\n\n    public readonly version: string;\n    public readonly references: CsdlReference[];\n    public readonly schemas: CsdlSchema[];\n\n    constructor(xml: string) {\n        try {\n            const parser: DOMParser = new DOMParser();\n            const document: Document = parser.parseFromString(xml, 'text/xml');\n\n            this.checkVersion(document);\n\n            this.version = this.getFieldValueByAttribute(\n                new Field(Metadata.ATTRIBUTE_VERSION, FieldType.ATTRIBUTE),\n                document.documentElement.attributes);\n\n            this.references = this.getObjects(document.documentElement, Metadata.TAG_REFERENCE, [\n                new Field(Metadata.ATTRIBUTE_URI, FieldType.ATTRIBUTE),\n                new Field(Metadata.TAG_INCLUDE, FieldType.TAG),\n                new Field(Metadata.TAG_INCLUDE_ANNOTATIONS, FieldType.TAG),\n                new Field(Metadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n\n            const dataServices: Element = document.documentElement.getElementsByTagName(Metadata.TAG_DATA_SERVICES)[0];\n            this.schemas = this.getObjects(dataServices, Metadata.TAG_SCHEMA, [\n                new Field(Metadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n                new Field(Metadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE),\n                new Field(Metadata.TAG_ENUM_TYPE, FieldType.TAG),\n                new Field(Metadata.TAG_COMPLEX_TYPE, FieldType.TAG),\n                new Field(Metadata.TAG_ENTITY_TYPE, FieldType.TAG),\n                new Field(Metadata.TAG_FUNCTION, FieldType.TAG),\n                new Field(Metadata.TAG_ACTION, FieldType.TAG),\n                new Field(Metadata.TAG_ENTITY_CONTAINER, FieldType.TAG),\n                new Field(Metadata.TAG_TYPE_DEFINITION, FieldType.TAG),\n                new Field(Metadata.TAG_TERM, FieldType.TAG),\n                new Field(Metadata.TAG_ANNOTATIONS, FieldType.TAG),\n                new Field(Metadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n        } catch (error) {\n            throw new Error('Unable to parse metadata, ' + error);\n        }\n    }\n\n    protected checkVersion(document: Document) {\n        // check version\n        const attributes: NamedNodeMap = document.documentElement.attributes;\n        if (Utils.isNullOrUndefined(attributes)) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const attr: Attr = attributes.getNamedItem('Version');\n        if (Utils.isNullOrUndefined(attr)) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const odataVersion: string = attr.nodeValue;\n        if (odataVersion !== '4.0') {\n            throw new Error('OData version \"' + odataVersion + '\" is not supported');\n        }\n    }\n\n    protected getObjects(parentElement: Element, tag: string, fieldNames: Field[]): any[] {\n        let objects: any[];\n\n        const children: HTMLCollection = parentElement.children;\n        for (let index = 0; index < children.length; index++) {\n            const element: Element = children.item(index);\n\n            if (element.nodeName !== tag) {\n                continue;\n            }\n\n            const attributes: NamedNodeMap = element.attributes;\n            const fieldValues: any[] = this.getFieldValues(fieldNames, attributes, element);\n            if (Utils.isNullOrUndefined(objects)) {\n                objects = [];\n            }\n            switch (tag) {\n                case Metadata.TAG_REFERENCE:\n                    objects.push(new CsdlReference(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3]));\n                    break;\n                case Metadata.TAG_INCLUDE:\n                    objects.push(new CsdlInclude(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_INCLUDE_ANNOTATIONS:\n                    objects.push(new CsdlIncludeAnnotations(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2]));\n                    break;\n                case Metadata.TAG_TERM:\n                    objects.push(new CsdlTerm(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7],\n                        fieldValues[8],\n                        fieldValues[9]\n                    ));\n                    break;\n                case Metadata.TAG_ANNOTATIONS:\n                    objects.push(new CsdlAnnotations(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2]\n                    ));\n                    break;\n                case Metadata.TAG_ANNOTATION:\n                    objects.push(new CsdlAnnotation(\n                        fieldValues[0],\n                        fieldValues[1]\n                    ));\n                    break;\n                case Metadata.TAG_SCHEMA:\n                    objects.push(new CsdlSchema(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7],\n                        fieldValues[8],\n                        fieldValues[9],\n                        fieldValues[10],\n                        fieldValues[11]));\n                    break;\n                case Metadata.TAG_ENUM_TYPE:\n                    objects.push(new CsdlEnumType(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3]));\n                    break;\n                case Metadata.TAG_COMPLEX_TYPE:\n                    objects.push(new CsdlComplexType(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5]));\n                    break;\n                case Metadata.TAG_ENTITY_TYPE:\n                    objects.push(new CsdlEntityType(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7]));\n                    break;\n                case Metadata.TAG_FUNCTION:\n                    objects.push(new CsdlFunction(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5]));\n                    break;\n                case Metadata.TAG_MEMBER:\n                    objects.push(new CsdlEnumMember(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_PROPERTY:\n                    objects.push(new CsdlProperty(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7],\n                        fieldValues[8]));\n                    break;\n                case Metadata.TAG_PROPERTY_REF:\n                    objects.push(new CsdlPropertyRef(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_NAVIGATION_PROPERTY:\n                    objects.push(new CsdlNavigationProperty(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6]));\n                    break;\n                case Metadata.TAG_REFERENTIAL_CONSTRAINT:\n                    objects.push(new CsdlReferentialConstraint(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_PARAMETER:\n                    objects.push(new CsdlParameter(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6]));\n                    break;\n                case Metadata.TAG_ACTION:\n                    objects.push(new CsdlAction(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4]));\n                    break;\n                case Metadata.TAG_ENTITY_SET:\n                    objects.push(new CsdlEntitySet(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3]));\n                    break;\n                case Metadata.TAG_SINGLETON:\n                    objects.push(new CsdlSingleton(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2]));\n                    break;\n                case Metadata.TAG_FUNCTION_IMPORT:\n                    objects.push(new CsdlFunctionImport(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3]));\n                    break;\n                case Metadata.TAG_ACTION_IMPORT:\n                    objects.push(new CsdlActionImport(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2]));\n                    break;\n                case Metadata.TAG_NAVIGATION_PROPERTY_BINDING:\n                    objects.push(new CsdlNavigationPropertyBinding(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_TYPE_DEFINITION:\n                    objects.push(new CsdlTypeDefinition(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7]));\n                    break;\n                default: throw new Error('Unknwon tag:' + tag);\n            }\n        }\n\n        return objects;\n    }\n\n    protected getObject(parentElement: Element, tag: string, fieldNames: Field[]): any {\n        let object: any;\n\n        const children: HTMLCollection = parentElement.children;\n        let element: Element;\n        for (let index = 0; index < children.length; index++) {\n            if (children.item(index).nodeName === tag) {\n                if (Utils.isNotNullNorUndefined(element)) {\n                    throw new Error('Expected one ' + tag);\n                }\n                element = children.item(index);\n            }\n        }\n\n        if (Utils.isNotNullNorUndefined(element)) {\n            const attributes: NamedNodeMap = element.attributes;\n            const fieldValues: any[] = this.getFieldValues(fieldNames, attributes, element);\n            switch (tag) {\n                case Metadata.TAG_KEY:\n                    object = new CsdlKey(fieldValues[0]);\n                    break;\n                case Metadata.TAG_RETURN_TYPE:\n                    object = new CsdlReturnType(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5]);\n                    break;\n                case Metadata.TAG_ENTITY_CONTAINER:\n                    object = new CsdlEntityContainer(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5]);\n                    break;\n                case Metadata.TAG_ON_DELETE:\n                    object = new CsdlOnDelete(\n                        fieldValues[0]);\n                    break;\n                default: throw new Error('Unknwon tag:' + tag);\n            }\n        }\n\n        return object;\n    }\n\n    protected getFieldValues(fields: Field[], attributes: NamedNodeMap, element: Element): any[] {\n        const fieldValues: any[] = [];\n\n        for (const field of fields) {\n            if (field.fieldType === FieldType.TAG) {\n                fieldValues.push(this.getFieldValueByTag(field, element));\n            } else if (field.fieldType === FieldType.ATTRIBUTE) {\n                fieldValues.push(this.getFieldValueByAttribute(field, attributes));\n            } else {\n                throw new Error('Unknown field type: ' + field.fieldType);\n            }\n        }\n\n        return fieldValues;\n    }\n\n    protected getFieldValueByAttribute(field: Field, attributes: NamedNodeMap): any {\n        switch (field.name) {\n            case Metadata.ATTRIBUTE_VERSION:\n            case Metadata.ATTRIBUTE_URI:\n            case Metadata.ATTRIBUTE_NAMESPACE:\n            case Metadata.ATTRIBUTE_ALIAS:\n            case Metadata.ATTRIBUTE_TERM_NAMESPACE:\n            case Metadata.ATTRIBUTE_TERM:\n            case Metadata.ATTRIBUTE_QUALIFIER:\n            case Metadata.ATTRIBUTE_TARGET_NAMESPACE:\n            case Metadata.ATTRIBUTE_NAME:\n            case Metadata.ATTRIBUTE_TYPE:\n            case Metadata.ATTRIBUTE_SRID:\n            case Metadata.ATTRIBUTE_DEFAULT_VALUE:\n            case Metadata.ATTRIBUTE_PARTNER:\n            case Metadata.ATTRIBUTE_PROPERTY:\n            case Metadata.ATTRIBUTE_REFERENCED_PROPERTY:\n            case Metadata.ATTRIBUTE_BASE_TYPE:\n            case Metadata.ATTRIBUTE_ENTITY_SET_PATH:\n            case Metadata.ATTRIBUTE_ENTITY_TYPE:\n            case Metadata.ATTRIBUTE_PATH:\n            case Metadata.ATTRIBUTE_TARGET:\n            case Metadata.ATTRIBUTE_FUNCTION:\n            case Metadata.ATTRIBUTE_ACTION:\n            case Metadata.ATTRIBUTE_ENTITY_SET:\n            case Metadata.ATTRIBUTE_UNDERLYING_TYPE:\n            case Metadata.ATTRIBUTE_EXTENDS:\n            case Metadata.ATTRIBUTE_BASE_TERM:\n            case Metadata.ATTRIBUTE_APPLIES_TO:\n                return this.getAttributeValue(attributes, field.name);\n            case Metadata.ATTRIBUTE_NULLABLE:\n            case Metadata.ATTRIBUTE_UNICODE:\n            case Metadata.ATTRIBUTE_OPEN_TYPE:\n            case Metadata.ATTRIBUTE_HAS_STREAM:\n            case Metadata.ATTRIBUTE_IS_BOUND:\n            case Metadata.ATTRIBUTE_IS_COMPOSABLE:\n            case Metadata.ATTRIBUTE_CONTAINS_TARGET:\n            case Metadata.ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT:\n            case Metadata.ATTRIBUTE_ABSTRACT:\n            case Metadata.ATTRIBUTE_IS_FLAGS:\n                return this.propertyValueToBoolean(this.getAttributeValue(attributes, field.name));\n            case Metadata.ATTRIBUTE_VALUE:\n            case Metadata.ATTRIBUTE_MAX_LENGTH:\n            case Metadata.ATTRIBUTE_PRECISION:\n            case Metadata.ATTRIBUTE_SCALE:\n                return this.propertyValueToNumber(this.getAttributeValue(attributes, field.name));\n            default: throw new Error('Unknwon attribute:' + field.name);\n        }\n    }\n\n    protected getFieldValueByTag(field: Field, element: Element): any[] {\n        switch (field.name) {\n            case Metadata.TAG_INCLUDE:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_INCLUDE_ANNOTATIONS:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_TERM_NAMESPACE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_QUALIFIER, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TARGET_NAMESPACE, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_TERM:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_BASE_TERM, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_DEFAULT_VALUE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_APPLIES_TO, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ANNOTATIONS:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_TARGET, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_ANNOTATION, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_QUALIFIER, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ANNOTATION:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_TERM, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_QUALIFIER, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ENUM_TYPE:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_MEMBER, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_UNDERLYING_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_IS_FLAGS, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_COMPLEX_TYPE:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_PROPERTY, FieldType.TAG),\n                    new Field(Metadata.TAG_NAVIGATION_PROPERTY, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_BASE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_OPEN_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ABSTRACT, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ENTITY_TYPE:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_KEY, FieldType.TAG),\n                    new Field(Metadata.TAG_PROPERTY, FieldType.TAG),\n                    new Field(Metadata.TAG_NAVIGATION_PROPERTY, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_BASE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_OPEN_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_HAS_STREAM, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ABSTRACT, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_FUNCTION:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_RETURN_TYPE, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_IS_BOUND, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_SET_PATH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_IS_COMPOSABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_PARAMETER, FieldType.TAG)\n                ]);\n            case Metadata.TAG_MEMBER:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_VALUE, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_PROPERTY:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_UNICODE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_DEFAULT_VALUE, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_KEY:\n                return this.getObject(element, field.name, [\n                    new Field(Metadata.TAG_PROPERTY_REF, FieldType.TAG)\n                ]);\n            case Metadata.TAG_PROPERTY_REF:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_NAVIGATION_PROPERTY:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PARTNER, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_CONTAINS_TARGET, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_REFERENTIAL_CONSTRAINT, FieldType.TAG),\n                    new Field(Metadata.TAG_ON_DELETE, FieldType.TAG)\n                ]);\n            case Metadata.TAG_REFERENTIAL_CONSTRAINT:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_PROPERTY, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_REFERENCED_PROPERTY, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ON_DELETE:\n                return this.getObject(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_ACTION, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_PARAMETER:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_RETURN_TYPE:\n                return this.getObject(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ACTION:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_RETURN_TYPE, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_IS_BOUND, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_SET_PATH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_PARAMETER, FieldType.TAG)\n                ]);\n            case Metadata.TAG_ENTITY_CONTAINER:\n                return this.getObject(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_EXTENDS, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_ENTITY_SET, FieldType.TAG),\n                    new Field(Metadata.TAG_SINGLETON, FieldType.TAG),\n                    new Field(Metadata.TAG_FUNCTION_IMPORT, FieldType.TAG),\n                    new Field(Metadata.TAG_ACTION_IMPORT, FieldType.TAG)\n                ]);\n            case Metadata.TAG_ENTITY_SET:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_NAVIGATION_PROPERTY_BINDING, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_SINGLETON:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_NAVIGATION_PROPERTY_BINDING, FieldType.TAG)\n                ]);\n            case Metadata.TAG_FUNCTION_IMPORT:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_FUNCTION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_SET, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ACTION_IMPORT:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ACTION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_SET, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_NAVIGATION_PROPERTY_BINDING:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_PATH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TARGET, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_TYPE_DEFINITION:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_UNDERLYING_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_UNICODE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_ANNOTATION, FieldType.TAG)\n                ]);\n            default: throw new Error('Unknwon tag:' + field.name);\n        }\n    }\n\n    protected getAttributeValue(attributes: NamedNodeMap, attributeName: string): string {\n        const attribute: Attr = attributes.getNamedItem(attributeName);\n        if (Utils.isNotNullNorUndefined(attribute)) {\n            return attribute.nodeValue;\n        }\n        return undefined;\n    }\n\n    protected propertyValueToNumber(attributeValue: string): number {\n        return Utils.isNotNullNorUndefined(attributeValue) ? Number(attributeValue) : undefined;\n    }\n\n    protected propertyValueToBoolean(attributeValue: string): boolean {\n        return Utils.isNotNullNorUndefined(attributeValue) ? attributeValue === 'true' : undefined;\n    }\n}\n","import { HttpResponse } from '@angular/common/http';\n\nimport { Utils } from '../utils/utils';\n\nexport abstract class ODataResponseAbstract {\n    private httpResponse: HttpResponse<string>;\n\n    constructor(httpResponse: HttpResponse<string>) {\n        this.httpResponse = httpResponse;\n    }\n\n    getHttpResponse() {\n        return this.httpResponse;\n    }\n\n    isOk(): boolean {\n        return this.httpResponse.ok;\n    }\n\n    getBodyAsJson(): any {\n        return null;\n    }\n\n    getBodyAsText(): string {\n        return this.httpResponse.body;\n    }\n\n    toString(): string {\n        let res = `${this.httpResponse.status} ${this.httpResponse.statusText}\\n`;\n\n        const headers = this.httpResponse.headers;\n        for (const key of headers.keys()) {\n            res += key + ': ';\n            let valueString = '';\n            for (const value of headers.getAll(key)) {\n                if (valueString.length) {\n                    valueString += ' ';\n                }\n                valueString += value;\n            }\n            res += valueString + '\\n';\n        }\n\n        const json = this.getBodyAsJson();\n        if (Utils.isNotNullNorUndefined(json)) {\n            res += JSON.stringify(json, null, 4);\n        } else {\n            res += this.getBodyAsText();\n        }\n        return res;\n    }\n}\n","import { HttpResponse } from '@angular/common/http';\n\nimport { Utils } from '../utils/utils';\nimport { EntitySet } from './entity-collection';\nimport { Metadata } from './metadata';\nimport { ODataResponseAbstract } from './odata-response-abstract';\nimport { ODataResponseBatch } from './odata-response-batch';\n\nexport class ODataResponse extends ODataResponseAbstract {\n    private static readonly VALUE = 'value';\n    private static readonly ODATA_COUNT = '@odata.count';\n\n    constructor(httpResponse: HttpResponse<string>) {\n        super(httpResponse);\n    }\n\n    getBodyAsJson(): any {\n        const contentType: string = this.getHttpResponse().headers.get('Content-Type');\n        if (Utils.isNotNullNorUndefined(contentType) && contentType.includes('json')) {\n            try {\n                return JSON.parse(this.getBodyAsText());\n            } catch (error) {\n                return null;\n            }\n        }\n        return null;\n    }\n\n    toMetadata(): Metadata {\n        const xml: string = this.getBodyAsText();\n        return new Metadata(xml);\n    }\n\n    toEntitySet<T>(type?: (new () => T)): EntitySet<T> {\n        const json: any = this.getBodyAsJson();\n        if (Utils.isNotNullNorUndefined(json) && json.hasOwnProperty(ODataResponse.VALUE)) {\n            let count: number = null;\n            if (json.hasOwnProperty(ODataResponse.ODATA_COUNT)) {\n                count = json[ODataResponse.ODATA_COUNT];\n            }\n            return new EntitySet<T>(json[ODataResponse.VALUE], count, type);\n        }\n        return null;\n    }\n\n    toComplexCollection<T>(type?: (new () => T)): T[] {\n        const json: any = this.getBodyAsJson();\n\n        if (Utils.isNotNullNorUndefined(json) && json.hasOwnProperty(ODataResponse.VALUE)) {\n            const res: T[] = [];\n            for (const object of json[ODataResponse.VALUE]) {\n                res.push(this.toObject<T>(object, type));\n            }\n            return res;\n        }\n\n        return null;\n    }\n\n    toEntity<T>(type?: (new () => T)): T {\n        const json: any = this.getBodyAsJson();\n        return this.toObject<T>(json, type);\n    }\n\n    toComplexValue<T>(type?: (new () => T)): T {\n        const json: any = this.getBodyAsJson();\n        return this.toObject<T>(json, type);\n    }\n\n    toPropertyValue<T>(): T {\n        const json: any = this.getBodyAsJson();\n        if (Utils.isNotNullNorUndefined(json)) {\n            if (json.hasOwnProperty(ODataResponse.VALUE)) {\n                return <T>json[ODataResponse.VALUE];\n            }\n            return null;\n        } else {\n            return <T>JSON.parse(this.getBodyAsText());\n        }\n    }\n\n    toCount(): number {\n        return Number(this.getBodyAsText());\n    }\n\n    toODataResponseBatch(): ODataResponseBatch {\n        return new ODataResponseBatch(this.getHttpResponse());\n    }\n\n    protected toObject<T>(object: any, type: (new () => T)): T {\n        if (Utils.isNotNullNorUndefined(object)) {\n            if (Utils.isNullOrUndefined(type)) {\n                return Object.assign({}, object);\n            } else {\n                return Object.assign(new type(), object);\n            }\n        }\n        return null;\n    }\n}\n","import { HttpHeaders, HttpResponse } from '@angular/common/http';\n\nimport { Utils } from '../utils/utils';\nimport { ODataResponse } from './odata-response';\nimport { ODataResponseAbstract } from './odata-response-abstract';\n\nexport class ODataResponseBatch extends ODataResponseAbstract {\n    private static readonly CONTENT_TYPE = 'Content-Type';\n    private static readonly CONTENT_ID = 'Content-ID';\n    private static readonly HTTP11 = 'HTTP/1.1';\n    private static readonly BOUNDARY_PREFIX_SUFFIX = '--';\n    private static readonly NEWLINE = '\\r\\n';\n    private static readonly MULTIPART_MIXED = 'multipart/mixed';\n\n    private odataResponses: ODataResponse[];\n\n    constructor(httpResponse: HttpResponse<string>) {\n        super(httpResponse);\n        this.odataResponses = [];\n        this.parseResponses();\n    }\n\n    getODataResponses(): ODataResponse[] {\n        return this.odataResponses;\n    }\n\n    protected parseResponses(): void {\n        const contentType: string = this.getHttpResponse().headers.get(ODataResponseBatch.CONTENT_TYPE);\n        const boundaryDelimiterBatch: string = this.getBoundaryDelimiter(contentType);\n        const boundaryEndBatch: string = this.getBoundaryEnd(boundaryDelimiterBatch);\n\n        const batchBody: string = this.getBodyAsText();\n        const batchBodyLines: string[] = batchBody.split(ODataResponseBatch.NEWLINE);\n\n        let odataResponseCS: ODataResponse[];\n        let contentId: number;\n        let boundaryDelimiterCS;\n        let boundaryEndCS;\n        let batchPartStartIndex;\n        for (let index = 0; index < batchBodyLines.length; index++) {\n            const batchBodyLine: string = batchBodyLines[index];\n\n            if (batchBodyLine.startsWith(ODataResponseBatch.CONTENT_TYPE)) {\n                const contentTypeValue: string = this.getHeaderValue(batchBodyLine);\n                if (contentTypeValue === ODataResponseBatch.MULTIPART_MIXED) {\n                    odataResponseCS = [];\n                    contentId = undefined;\n                    boundaryDelimiterCS = this.getBoundaryDelimiter(batchBodyLine);\n                    boundaryEndCS = this.getBoundaryEnd(boundaryDelimiterCS);\n                    batchPartStartIndex = undefined;\n                }\n                continue;\n            } else if (Utils.isNotNullNorUndefined(odataResponseCS) && batchBodyLine.startsWith(ODataResponseBatch.CONTENT_ID)) {\n                contentId = Number(this.getHeaderValue(batchBodyLine));\n            } else if (batchBodyLine.startsWith(ODataResponseBatch.HTTP11)) {\n                batchPartStartIndex = index;\n            } else if (batchBodyLine === boundaryDelimiterBatch || batchBodyLine === boundaryDelimiterCS\n                || batchBodyLine === boundaryEndBatch || batchBodyLine === boundaryEndCS) {\n                if (!batchPartStartIndex) {\n                    continue;\n                }\n\n                const odataResponse: ODataResponse = this.createODataResponse(batchBodyLines, batchPartStartIndex, index - 1);\n                if (Utils.isNotNullNorUndefined(odataResponseCS)) {\n                    odataResponseCS[contentId] = odataResponse;\n                } else {\n                    this.odataResponses.push(odataResponse);\n                }\n\n                if (batchBodyLine === boundaryDelimiterBatch || batchBodyLine === boundaryDelimiterCS) {\n                    batchPartStartIndex = index + 1;\n                } else if (batchBodyLine === boundaryEndBatch || batchBodyLine === boundaryEndCS) {\n                    if (Utils.isNotNullNorUndefined(odataResponseCS)) {\n                        for (const response of odataResponseCS) {\n                            if (Utils.isNotNullNorUndefined(response)) {\n                                this.odataResponses.push(response);\n                            }\n                        }\n                    }\n                    odataResponseCS = undefined;\n                    boundaryDelimiterCS = undefined;\n                    boundaryEndCS = undefined;\n                    batchPartStartIndex = undefined;\n                }\n            }\n        }\n    }\n\n    protected getHeaderValue(header: string): string {\n        let res: string = header.split(';')[0].trim();\n        res = res.split(':')[1].trim();\n        return res;\n    }\n\n    protected getBoundaryDelimiter(contentType: string): string {\n        const contentTypeParts: string[] = contentType.split(';');\n        if (contentTypeParts.length === 2) {\n            const boundary: string = contentType.split(';')[1].trim();\n            const boundaryDelimiter: string = ODataResponseBatch.BOUNDARY_PREFIX_SUFFIX + boundary.split('=')[1];\n            return boundaryDelimiter;\n        } else {\n            return '';\n        }\n    }\n\n    protected getBoundaryEnd(boundaryDelimiter: string): string {\n        if (!boundaryDelimiter.length) {\n            return '';\n        }\n        const boundaryEnd: string = boundaryDelimiter + ODataResponseBatch.BOUNDARY_PREFIX_SUFFIX;\n        return boundaryEnd;\n    }\n\n    protected createODataResponse(batchBodyLines: string[], batchPartStartIndex: number, batchPartEndIndex: number): ODataResponse {\n        let index: number = batchPartStartIndex;\n        const statusLine: string = batchBodyLines[index];\n        const statusLineParts: string[] = batchBodyLines[index].split(' ');\n        const status: string = statusLineParts[1];\n        const statusTextIndex = statusLine.indexOf(status) + status.length + 1;\n        const statusText: string = statusLine.substring(statusTextIndex);\n\n        let httpHeaders: HttpHeaders = new HttpHeaders();\n        for (++index; index <= batchPartEndIndex; index++) {\n            const batchBodyLine: string = batchBodyLines[index];\n\n            if (batchBodyLine === '') {\n                break;\n            }\n\n            const batchBodyLineParts: string[] = batchBodyLine.split(': ');\n            httpHeaders = httpHeaders.append(batchBodyLineParts[0].trim(), batchBodyLineParts[1].trim());\n        }\n\n        let body = '';\n        for (; index <= batchPartEndIndex; index++) {\n            body += batchBodyLines[index];\n        }\n\n        return new ODataResponse(new HttpResponse({\n            body: body,\n            headers: httpHeaders,\n            status: Number(status),\n            statusText: statusText\n        }));\n    }\n}\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\n\nexport interface HttpOptionsI {\n    headers?: HttpHeaders;\n    params?: HttpParams;\n    reportProgress?: boolean;\n    withCredentials?: boolean;\n}\n\nexport class HttpOptions implements HttpOptionsI {\n    constructor(\n        public headers?: HttpHeaders,\n        public observe: 'response' = 'response',\n        public params?: HttpParams,\n        public reportProgress?: boolean,\n        public responseType: 'text' = 'text',\n        public withCredentials?: boolean\n    ) { }\n}\n","\nimport {map} from 'rxjs/operators';\n\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { ODataQuery } from '../odata-query/odata-query';\nimport { ODataQueryAbstract } from '../odata-query/odata-query-abstract';\nimport { ODataResponse } from '../odata-response/odata-response';\nimport { Utils } from '../utils/utils';\nimport { HttpOptions, HttpOptionsI } from './http-options';\n\n@Injectable()\nexport class ODataService {\n  private static readonly IF_MATCH_HEADER = 'If-Match';\n\n  constructor(private http: HttpClient) { }\n\n  get(odataQuery: ODataQuery, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    const options: HttpOptions = this.createHttpOptions(httpOptions);\n    return this.http.get(url, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  post(odataQuery: ODataQueryAbstract, body: any, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    const options: HttpOptions = this.createHttpOptions(httpOptions);\n    return this.http.post(url, body, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  patch(odataQuery: ODataQuery, body: any, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    let options: HttpOptions = this.createHttpOptions(httpOptions);\n    options = this.mergeETag(options, etag);\n    return this.http.patch(url, body, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  put(odataQuery: ODataQuery, body: any, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    let options: HttpOptions = this.createHttpOptions(httpOptions);\n    options = this.mergeETag(options, etag);\n    return this.http.put(url, body, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  delete(odataQuery: ODataQuery, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    let options: HttpOptions = this.createHttpOptions(httpOptions);\n    options = this.mergeETag(options, etag);\n    return this.http.delete(url, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  protected createHttpOptions(httpOptions: HttpOptionsI): HttpOptions {\n    if (httpOptions instanceof HttpOptions) {\n      return httpOptions;\n    }\n    return Object.assign(new HttpOptions(), httpOptions);\n  }\n\n  protected mergeETag(httpOptions: HttpOptions, etag: string): HttpOptions {\n    if (Utils.isNullOrUndefined(etag)) {\n      return httpOptions;\n    }\n    if (Utils.isNullOrUndefined(httpOptions)) {\n      httpOptions = new HttpOptions();\n    }\n    if (Utils.isNullOrUndefined(httpOptions.headers)) {\n      httpOptions.headers = new HttpHeaders();\n    }\n\n    httpOptions.headers[ODataService.IF_MATCH_HEADER] = etag;\n\n    return httpOptions;\n  }\n}\n","export abstract class Filter {\n    abstract toString(): string;\n    abstract isEmpty(): boolean;\n}\n","import { Utils } from '../../utils/utils';\n\nexport abstract class FilterHasProperty {\n    protected property: string;\n\n    constructor(property: string) {\n        this.setProperty(property);\n    }\n\n    setProperty(property: string): void {\n        Utils.requireNotNullNorUndefined(property, 'property');\n        this.property = property;\n    }\n\n    getProperty(): string {\n        return this.property;\n    }\n}\n","import { Utils } from '../../utils/utils';\nimport { QuotedString } from '../../odata-query/quoted-string';\nimport { OperatorComparison } from '../operator';\nimport { Filter } from './filter';\nimport { FilterHasProperty } from './filter-has-property';\n\nexport class FilterComparison extends FilterHasProperty implements Filter {\n    private operator: OperatorComparison;\n    private value: any;\n\n    constructor(property: string, operator: OperatorComparison, value: boolean | number | string | QuotedString) {\n        super(property);\n        Utils.requireNotNullNorUndefined(property, 'property');\n        Utils.requireNotNullNorUndefined(operator, 'operator');\n        Utils.requireNotUndefined(value, 'value');\n        this.operator = operator;\n        this.value = value;\n    }\n\n    toString(): string {\n        return `${this.property} ${OperatorComparison[this.operator].toLowerCase()} ${Utils.getValueURI(this.value, false)}`;\n    }\n\n    isEmpty(): boolean {\n        return (Utils.isNullOrUndefined(this.property) || !this.property.length)\n            && Utils.isNullOrUndefined(this.operator)\n            && Utils.isNullOrUndefined(this.value) || (this.value instanceof Filter && !this.value.isEmpty() || this.value instanceof Array && !this.value.length);\n    }\n}\n","import { Utils } from '../../utils/utils';\nimport { Filter } from './filter';\nimport { FilterHasProperty } from './filter-has-property';\nimport { QuotedString } from '../../odata-query/quoted-string';\n\nexport class FilterFunction extends FilterHasProperty implements Filter {\n    private functionName: string;\n    private value: boolean | number | string | QuotedString;\n\n    constructor(functionName: string, property: string, value?: boolean | number | string | QuotedString) {\n        super(property);\n        Utils.requireNotNullNorUndefined(functionName, 'functionName');\n        Utils.requireNotEmpty(functionName, 'functionName');\n        Utils.requireNotNullNorUndefined(property, 'property');\n        Utils.requireNotEmpty(property, 'property');\n        this.functionName = functionName;\n        this.property = property;\n        this.value = value;\n    }\n\n    toString(): string {\n        if (Utils.isNotNullNorUndefined(this.property) && Utils.isNotNullNorUndefined(this.value)) {\n            return `${this.functionName}(${this.property},${Utils.getValueURI(this.value, false)})`;\n        } else if (Utils.isNotNullNorUndefined(this.property)) {\n            return `${this.functionName}(${this.property})`;\n        } else if (Utils.isNotNullNorUndefined(this.value)) {\n            return `${this.functionName}(${Utils.getValueURI(this.value, false)})`;\n        } else {\n            return `${this.functionName}()`;\n        }\n    }\n\n    isEmpty(): boolean {\n        if (Utils.isNullOrUndefined(this.property)\n            && Utils.isNullOrUndefined(this.value)) {\n            return true;\n        }\n        if (Utils.isNullOrUndefined(this.property)\n            && Utils.isNotNullNorUndefined(this.value) && Utils.isEmpty(this.value)) {\n            return true;\n        }\n        if (Utils.isNullOrUndefined(this.value)\n            && Utils.isNotNullNorUndefined(this.property) && !this.property.length) {\n            return true;\n        }\n        return false;\n    }\n}\n\nexport class FilterFunctionString extends FilterFunction {\n    constructor(functionName: string, property?: string, value?: number | string | FilterFunctionString) {\n        super(functionName, property, typeof (value) === 'string'\n            ? new QuotedString(value)\n            : value instanceof FilterFunctionString ? value.toString() : value);\n    }\n}\n\nexport class FilterContains extends FilterFunctionString {\n    constructor(property: string, value: string | FilterFunctionString) {\n        super('contains', property, value);\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n}\n\nexport class FilterEndswith extends FilterFunctionString {\n    constructor(property: string, value: string | FilterFunctionString) {\n        super('endswith', property, value);\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n}\n\nexport class FilterStartswith extends FilterFunctionString {\n    constructor(property: string, value: string | FilterFunctionString) {\n        super('startswith', property, value);\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n}\n\nexport class FilterLength extends FilterFunctionString {\n    constructor(property: string) {\n        super('length', property);\n    }\n}\n\nexport class FilterIndexof extends FilterFunctionString {\n    constructor(property: string, value: string | FilterFunctionString) {\n        super('indexof', property, value);\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n}\n\nexport class FilterSubstring extends FilterFunctionString {\n    constructor(property: string, value: number) {\n        super('substring', property, value);\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n}\n\nexport class FilterTolower extends FilterFunctionString {\n    constructor(property: string) {\n        super('tolower', property);\n    }\n}\n\nexport class FilterToupper extends FilterFunctionString {\n    constructor(property: string) {\n        super('toupper', property);\n    }\n}\n\nexport class FilterTrim extends FilterFunctionString {\n    constructor(property: string) {\n        super('trim', property);\n    }\n}\n\nexport class FilterConcat extends FilterFunctionString {\n    constructor(property: string, value: string | FilterFunctionString) {\n        super('concat', property, value);\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n}\n","import { Filter } from './filter';\n\nexport abstract class FilterHasFilter {\n    protected filter: Filter | Filter[];\n\n    constructor(filter: Filter | Filter[]) {\n        this.filter = filter;\n    }\n\n    getFilter(): Filter | Filter[] {\n        return this.filter;\n    }\n}\n","import { Utils } from '../../utils/utils';\nimport { Filter } from './filter';\nimport { FilterHasFilter } from './filter-has-filter';\nimport { FilterHasProperty } from './filter-has-property';\n\nexport enum LambdaOperator {\n    ANY, ALL\n}\n\nexport enum LambdaCollection {\n    PROPERTY_COLLECTION, ENTITY_SET\n}\n\nexport class FilterLambda extends FilterHasFilter implements Filter {\n    private lambdaCollection: LambdaCollection;\n    private propertyOrEntitySet: string;\n    private lambdaOperator: LambdaOperator;\n\n    constructor(lambdaCollection: LambdaCollection, propertyOrEntitySet: string, lambdaOperator: LambdaOperator, filter: Filter) {\n        super(filter);\n        Utils.requireNotNullNorUndefined(lambdaCollection, 'lambdaCollection');\n        Utils.requireNotNullNorUndefined(propertyOrEntitySet, 'propertyOrEntitySet');\n        Utils.requireNotNullNorUndefined(lambdaOperator, 'lambdaOperator');\n        Utils.requireNotNullNorUndefined(filter, 'filter');\n        if (lambdaCollection === LambdaCollection.PROPERTY_COLLECTION) {\n            this.checkProperty(propertyOrEntitySet, filter);\n        }\n        this.lambdaCollection = lambdaCollection;\n        this.propertyOrEntitySet = propertyOrEntitySet;\n        this.lambdaOperator = lambdaOperator;\n    }\n\n    toString(): string {\n        switch (this.lambdaCollection) {\n            case LambdaCollection.PROPERTY_COLLECTION:\n                this.replaceProperty(this.filter);\n                return `${this.propertyOrEntitySet}/${LambdaOperator[this.lambdaOperator].toLowerCase()}(x:${this.filter.toString()})`;\n            case LambdaCollection.ENTITY_SET:\n                return `${this.propertyOrEntitySet}/${LambdaOperator[this.lambdaOperator].toLowerCase()}(x:x/${this.filter.toString()})`;\n            default:\n                throw new Error('unknown lambdaCollection: ' + this.lambdaCollection);\n        }\n    }\n\n    isEmpty(): boolean {\n        if (Utils.isNullOrUndefined(this.lambdaCollection)\n            && Utils.isNullOrUndefined(this.propertyOrEntitySet)\n            && Utils.isNullOrUndefined(this.lambdaOperator)\n            && Utils.isNullOrUndefined(this.filter)) {\n            return true;\n        }\n        if (Utils.isNullOrUndefined(this.propertyOrEntitySet)\n            && Utils.isNotNullNorUndefined(this.filter) && Utils.isEmpty(this.filter)) {\n            return true;\n        }\n        if (Utils.isNullOrUndefined(this.filter)\n            && Utils.isNotNullNorUndefined(this.propertyOrEntitySet) && !this.propertyOrEntitySet.length) {\n            return true;\n        }\n        if (Utils.isNotNullNorUndefined(this.propertyOrEntitySet) && !this.propertyOrEntitySet.length\n            && Utils.isNotNullNorUndefined(this.filter) && Utils.isEmpty(this.filter)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    protected checkProperty(propertyOrEntitySet: string, filter: Filter | Filter[]) {\n        if (Utils.isNullOrUndefined(filter)) {\n            return;\n        }\n        if (filter instanceof FilterHasProperty) {\n            if (propertyOrEntitySet !== filter.getProperty()) {\n                throw new Error('lambda property to filter must match inner filters property');\n            }\n        }\n        if (filter instanceof FilterHasFilter) {\n            const filterChild: Filter | Filter[] = filter.getFilter();\n            if (filterChild instanceof Filter) {\n                this.replaceProperty(filterChild);\n            } else {\n                for (const f of filterChild) {\n                    this.replaceProperty(f);\n                }\n            }\n        }\n    }\n\n    protected replaceProperty(filter: Filter | Filter[]) {\n        if (Utils.isNullOrUndefined(filter)) {\n            return;\n        }\n        if (filter instanceof FilterHasProperty) {\n            filter.setProperty('x');\n        }\n        if (filter instanceof FilterHasFilter) {\n            const filterChild: Filter | Filter[] = filter.getFilter();\n            if (filterChild instanceof Filter) {\n                this.replaceProperty(filterChild);\n            } else {\n                for (const f of filterChild) {\n                    this.replaceProperty(f);\n                }\n            }\n        }\n    }\n}\n","import { Utils } from '../../utils/utils';\nimport { OperatorLogical } from '../operator';\nimport { Filter } from './filter';\nimport { FilterHasFilter } from './filter-has-filter';\n\nexport class FilterLogical extends FilterHasFilter implements Filter {\n    private operator: OperatorLogical;\n\n    constructor(filters: Filter[], operator: OperatorLogical) {\n        super(filters);\n        Utils.requireNotNullNorUndefined(filters, 'filters');\n        Utils.requireNotEmpty(filters, 'filters');\n        Utils.requireNotNullNorUndefined(operator, 'operator');\n        this.operator = operator;\n    }\n\n    toString(): string {\n        if (this.filter instanceof Array) {\n            return Utils.toString(this.filter, this.operator);\n        }\n        return this.filter.toString();\n    }\n\n    isEmpty(): boolean {\n        if (Utils.isNullOrUndefined(this.filter)) {\n            return true;\n        }\n        for (const filter of <Filter[]>this.filter) {\n            if (filter.isEmpty()) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","export abstract class Search {\n    abstract toString(): string;\n    abstract isEmpty(): boolean;\n}\n","import { Utils } from '../../utils/utils';\nimport { OperatorLogical } from '../operator';\nimport { Search } from './search';\n\nexport class SearchLogical extends Search {\n    constructor(private values: Search[], private operator: OperatorLogical) {\n        super();\n        Utils.requireNotNullNorUndefined(values, 'values');\n        Utils.requireNotNullNorUndefined(operator, 'operator');\n        Utils.requireNotEmpty(values, 'values');\n\n        if (operator === OperatorLogical.NOT && values.length !== 1) {\n            throw new Error('operator ' + OperatorLogical[operator] + ' requires a single value');\n        }\n    }\n\n    toString(): string {\n        return Utils.toString(this.values, this.operator, true);\n    }\n\n    isEmpty(): boolean {\n        if (Utils.isNullOrUndefined(this.values)) {\n            return true;\n        }\n        for (const value of this.values) {\n            if (value.isEmpty()) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","import { Utils } from '../../utils/utils';\nimport { Search } from './search';\n\nexport class SearchSimple extends Search {\n    constructor(protected value: string) {\n        super();\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n\n    toString(): string {\n        return this.value;\n    }\n\n    isEmpty(): boolean {\n        return Utils.isNullOrUndefined(this.value) || !this.value.length;\n    }\n}\n","import { SearchSimple } from './search-simple';\n\nexport class SearchPhrase extends SearchSimple {\n    toString(): string {\n        return `\"${this.value}\"`;\n    }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { ODataService } from './odata-service/odata.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [ODataService]\n})\nexport class ODataModule { }\n"],"names":["map"],"mappings":";;;;;;;;;;;;IACI,KAAE,EAAE,KAAE,EAAE,KAAE,EAAE,KAAE,EAAE,KAAE,EAAE,KAAE,EAAE,MAAG;;sCAA3B,EAAE;sCAAE,EAAE;sCAAE,EAAE;sCAAE,EAAE;sCAAE,EAAE;sCAAE,EAAE;sCAAE,GAAG;;;IAI3B,MAAG,EAAE,KAAE,EAAE,MAAG;;gCAAZ,GAAG;gCAAE,EAAE;gCAAE,GAAG;;;IAIZ,MAAG,EAAE,MAAG,EAAE,MAAG,EAAE,MAAG,EAAE,MAAG;;sCAAvB,GAAG;sCAAE,GAAG;sCAAE,GAAG;sCAAE,GAAG;sCAAE,GAAG;;;;;;ACT3B;;;;IACI,YAAoB,KAAa;QAAb,UAAK,GAAL,KAAK,CAAQ;KAAK;;;;IACtC,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;CACJ;;;;;;ACLD;;;;;IAKI,OAAO,MAAM,CAAC,KAAU;QACpB,OAAO,KAAK,KAAK,IAAI,CAAC;KACzB;;;;;IAED,OAAO,WAAW,CAAC,KAAU;QACzB,OAAO,KAAK,KAAK,SAAS,CAAC;KAC9B;;;;;IAED,OAAO,iBAAiB,CAAC,KAAU;QAC/B,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC1D;;;;;IAED,OAAO,qBAAqB,CAAC,KAAU;QACnC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC5D;;;;;IAED,OAAO,OAAO,CAAC,KAAU;QACrB,IAAI,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC;eAC3B,QAAQ,KAAK,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM;eAC5C,KAAK,YAAY,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM;eACvC,QAAQ,KAAK,CAAC,OAAO,CAAC,KAAK,UAAU,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE;YAC7D,OAAO,IAAI,CAAC;SACf;QACD,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,EAAE;YACjC,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE;gBACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBACnB,OAAO,KAAK,CAAC;iBAChB;aACJ;YACD,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;KAChB;;;;;;IAED,OAAO,WAAW,CAAC,UAAe,EAAE,SAAiB;QACjD,IAAI,UAAU,KAAK,IAAI,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,SAAS,GAAG,eAAe,CAAC,CAAC;SAChD;KACJ;;;;;;IAED,OAAO,gBAAgB,CAAC,UAAe,EAAE,SAAiB;QACtD,IAAI,UAAU,KAAK,SAAS,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,SAAS,GAAG,oBAAoB,CAAC,CAAC;SACrD;KACJ;;;;;;IAED,OAAO,cAAc,CAAC,UAAe,EAAE,SAAiB;QACpD,IAAI,UAAU,KAAK,IAAI,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,SAAS,GAAG,iBAAiB,CAAC,CAAC;SAClD;KACJ;;;;;;IAED,OAAO,mBAAmB,CAAC,UAAe,EAAE,SAAiB;QACzD,IAAI,UAAU,KAAK,SAAS,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,SAAS,GAAG,sBAAsB,CAAC,CAAC;SACvD;KACJ;;;;;;IAED,OAAO,0BAA0B,CAAC,UAAe,EAAE,SAAiB;QAChE,KAAK,CAAC,cAAc,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAC5C,KAAK,CAAC,mBAAmB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;KACpD;;;;;;IAED,OAAO,sBAAsB,CAAC,UAAe,EAAE,SAAiB;QAC5D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE;YAC7D,MAAM,IAAI,KAAK,CAAC,SAAS,GAAG,4BAA4B,CAAC,CAAC;SAC7D;KACJ;;;;;;IAED,OAAO,eAAe,CAAC,UAAe,EAAE,SAAiB;QACrD,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,SAAS,GAAG,kBAAkB,CAAC,CAAC;SACnD;KACJ;;;;;;IAED,OAAO,kBAAkB,CAAC,UAAkB,EAAE,SAAiB;QAC3D,IAAI,UAAU,GAAG,CAAC,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,SAAS,GAAG,qBAAqB,CAAC,CAAC;SACtD;KACJ;;;;;;IAED,OAAO,aAAa,CAAC,IAAY,EAAE,OAAe;QAC9C,KAAK,CAAC,0BAA0B,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC/C,KAAK,CAAC,0BAA0B,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACrB,IAAI,IAAI,GAAG,CAAC;SACf;QACD,OAAO,IAAI,GAAG,OAAO,CAAC;KACzB;;;;;IAED,OAAO,qBAAqB,CAAC,KAAa;QACtC,KAAK,CAAC,0BAA0B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACrB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,OAAO,EAAE,CAAC;aACb;YACD,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SAC/C;QACD,OAAO,KAAK,CAAC;KAChB;;;;;;IAED,OAAO,WAAW,CAAC,KAA+C,EAAE,SAAkB;QAClF,KAAK,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAC1C,KAAK,CAAC,0BAA0B,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;;QAEzD,IAAI,GAAG,GAAQ,KAAK,CAAC;QAErB,IAAI,QAAQ,GAAG,CAAC,KAAK,QAAQ,EAAE;;YAE3B,IAAI,KAAK,CAAC,qBAAqB,CAAC,SAAS,CAAC,IAAI,SAAS,EAAE;gBACrD,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;aACjC;SACJ;aAAM,IAAI,GAAG,YAAY,YAAY,EAAE;;YAEpC,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;YAG3C,IAAI,KAAK,CAAC,qBAAqB,CAAC,SAAS,CAAC,IAAI,SAAS,EAAE;gBACrD,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;aACjC;;YAGD,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;SAC3B;;QAGD,OAAO,GAAG,CAAC;KACd;;;;;;;IAED,OAAO,QAAQ,CAAC,KAAY,EAAE,QAA0B,EAAE,oBAA6B,KAAK;;QACxF,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACjD,OAAO,GAAG,CAAC;SACd;QAED,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACtB,IAAI,GAAG,CAAC,MAAM,EAAE;gBACZ,IAAI,KAAK,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAAE;;oBACvC,MAAM,cAAc,GAAW,KAAK,CAAC,iBAAiB,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;oBACpF,GAAG,IAAI,IAAI,cAAc,GAAG,CAAC;iBAChC;qBAAM;oBACH,GAAG,IAAI,GAAG,CAAC;iBACd;aACJ;YACD,IAAI,KAAK,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,QAAQ,KAAK,eAAe,CAAC,GAAG,EAAE;;gBAC3E,MAAM,cAAc,GAAW,KAAK,CAAC,iBAAiB,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;gBACpF,GAAG,IAAI,GAAG,cAAc,GAAG,CAAC;aAC/B;YAED,GAAG,IAAI,IAAI,CAAC;SACf;QAED,IAAI,KAAK,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAAE;YACvC,OAAO,IAAI,GAAG,GAAG,CAAC;SACrB;QAED,OAAO,GAAG,CAAC;KACd;;;;;;IAES,OAAO,iBAAiB,CAAC,QAAyB,EAAE,iBAA0B;;QACpF,IAAI,cAAc,GAAW,eAAe,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;QACrE,IAAI,KAAK,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,IAAI,iBAAiB,EAAE;YACrE,cAAc,GAAG,cAAc,CAAC,WAAW,EAAE,CAAC;SACjD;QACD,OAAO,cAAc,CAAC;KACzB;CACJ;;;;;;AC3KD;;;AAGA;;;;;IAKE,YAAY,YAA0B,EAAE,WAAmB;QACzD,KAAK,CAAC,0BAA0B,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QAC/D,KAAK,CAAC,0BAA0B,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QAC7D,KAAK,CAAC,eAAe,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;CAGF;;;;;;AClBD;;IAYE,MAAG,EAAE,OAAI,EAAE,MAAG,EAAE,QAAK,EAAE,SAAM;;cAA7B,GAAG;cAAE,IAAI;cAAE,GAAG;cAAE,KAAK;cAAE,MAAM;AAG/B;;;;;;;IACE,YACS,QACA,YACA,MACA;QAHA,WAAM,GAAN,MAAM;QACN,eAAU,GAAV,UAAU;QACV,SAAI,GAAJ,IAAI;QACJ,gBAAW,GAAX,WAAW;KAAoB;CACzC;qBAE4B,SAAQ,kBAAkB;;;;;IA+BrD,YAAY,YAA0B,EAAE,WAAmB;QACzD,KAAK,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QACjC,KAAK,CAAC,0BAA0B,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QAC/D,KAAK,CAAC,0BAA0B,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QAC7D,KAAK,CAAC,eAAe,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,WAAW,EAAE,eAAe,CAAC,MAAM,CAAC,CAAC;QAC5E,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QACnE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;KACtB;;;;;;IAED,GAAG,CAAC,UAAsB,EAAE,WAA0B;QACpD,KAAK,CAAC,0BAA0B,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;QACrF,OAAO,IAAI,CAAC;KACb;;;;;;;IAED,IAAI,CAAC,UAAsB,EAAE,IAAS,EAAE,WAA0B;QAChE,KAAK,CAAC,0BAA0B,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;QACjF,OAAO,IAAI,CAAC;KACb;;;;;;;IAED,GAAG,CAAC,UAAsB,EAAE,IAAS,EAAE,WAA0B;QAC/D,KAAK,CAAC,0BAA0B,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;QAChF,OAAO,IAAI,CAAC;KACb;;;;;;;IAED,KAAK,CAAC,UAAsB,EAAE,IAAS,EAAE,WAA0B;QACjE,KAAK,CAAC,0BAA0B,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;QAClF,OAAO,IAAI,CAAC;KACb;;;;;;IAED,MAAM,CAAC,UAAsB,EAAE,WAA0B;QACvD,KAAK,CAAC,0BAA0B,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;QACxF,OAAO,IAAI,CAAC;KACb;;;;;IAED,OAAO,CAAC,WAA0B;;QAEhC,IAAI,KAAK,CAAC,iBAAiB,CAAC,WAAW,CAAC,EAAE;YACxC,WAAW,GAAG,EAAE,CAAC;SAClB;QACD,IAAI,KAAK,CAAC,iBAAiB,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;YAChD,WAAW,CAAC,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;SACzC;QACD,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,aAAa,EAAE,eAAe,CAAC,WAAW,CAAC,CAAC;QAC1G,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,YAAY,EAAE,eAAe,CAAC,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3I,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,eAAe,CAAC,eAAe,CAAC,CAAC;;QAGvG,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,WAAW,CAAC,CAAC;KAClE;;;;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;IAED,OAAO;;QACL,IAAI,GAAG,GAAG,EAAE,CAAC;QAEb,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;;YACnC,MAAM,MAAM,GAAW,OAAO,CAAC,MAAM,CAAC;;YACtC,MAAM,UAAU,GAAe,OAAO,CAAC,UAAU,CAAC;;YAClD,MAAM,WAAW,GAAiB,OAAO,CAAC,WAAW,CAAC;;YACtD,MAAM,IAAI,GAAQ,OAAO,CAAC,IAAI,CAAC;;YAG/B,IAAI,MAAM,KAAK,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;gBAChF,GAAG,IAAI,eAAe,CAAC,sBAAsB,GAAG,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,sBAAsB,GAAG,eAAe,CAAC,OAAO,CAAC;gBAC1I,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAC/B;;YAGD,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;gBACnD,GAAG,IAAI,eAAe,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC;aAC9F;;YAGD,IAAI,MAAM,KAAK,MAAM,CAAC,GAAG,EAAE;gBACzB,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;oBACnD,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAC3E,GAAG,IAAI,eAAe,CAAC,YAAY,GAAG,IAAI,GAAG,eAAe,CAAC,wBAAwB,GAAG,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,OAAO,CAAC;oBACzI,GAAG,IAAI,eAAe,CAAC,OAAO,CAAC;iBAChC;gBACD,GAAG,IAAI,eAAe,CAAC,sBAAsB,GAAG,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,OAAO,CAAC;aAClG;YAED,GAAG,IAAI,eAAe,CAAC,YAAY,GAAG,IAAI,GAAG,eAAe,CAAC,gBAAgB,GAAG,eAAe,CAAC,OAAO,CAAC;YACxG,GAAG,IAAI,eAAe,CAAC,yBAAyB,GAAG,IAAI,GAAG,eAAe,CAAC,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC;YAE3G,IAAI,MAAM,KAAK,MAAM,CAAC,GAAG,EAAE;gBACzB,GAAG,IAAI,eAAe,CAAC,UAAU,GAAG,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,eAAe,CAAC,OAAO,CAAC;aACzF;YAED,GAAG,IAAI,eAAe,CAAC,OAAO,CAAC;YAC/B,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,eAAe,CAAC,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC;YAElG,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YAE5C,GAAG,IAAI,eAAe,CAAC,OAAO,CAAC;YAC/B,IAAI,MAAM,KAAK,MAAM,CAAC,GAAG,IAAI,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE;gBACrD,GAAG,IAAI,eAAe,CAAC,OAAO,CAAC;aAChC;iBAAM;gBACL,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,OAAO,CAAC;aACvD;SACF;QAED,IAAI,GAAG,CAAC,MAAM,EAAE;YACd,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;gBACvD,GAAG,IAAI,eAAe,CAAC,sBAAsB,GAAG,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,sBAAsB,GAAG,eAAe,CAAC,OAAO,CAAC;gBAC1I,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAC/B;YACD,GAAG,IAAI,eAAe,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC,sBAAsB,CAAC;SAC7G;QAED,OAAO,GAAG,CAAC;KACZ;;;;;;IAES,UAAU,CAAC,MAAc,EAAE,WAAyB;;QAC5D,IAAI,GAAG,GAAG,EAAE,CAAC;QAEb,IAAI,MAAM,KAAK,MAAM,CAAC,IAAI,IAAI,MAAM,KAAK,MAAM,CAAC,KAAK,IAAI,MAAM,KAAK,MAAM,CAAC,GAAG,EAAE;YAC9E,GAAG,IAAI,eAAe,CAAC,YAAY,GAAG,IAAI,GAAG,eAAe,CAAC,gBAAgB,GAAG,eAAe,CAAC,OAAO,CAAC;SACzG;QAED,IAAI,KAAK,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;YACxF,OAAO,GAAG,CAAC;SACZ;QAED,KAAK,MAAM,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;YAC5C,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,eAAe,CAAC,OAAO,CAAC;SAC/E;QAED,OAAO,GAAG,CAAC;KACZ;;;;IAED,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;KACpB;;yCA7KgD,IAAI;+BACd,QAAQ;mCACJ,YAAY;0BACrB,MAAM;yBAGP,QAAQ;yBAGR,UAAU;gCACH,eAAe;+BAChB,cAAc;yBACpB,QAAQ;4CACW,2BAA2B;6BAC1C,YAAY;8BAGX,KAAK;kCACD,iBAAiB;2CACR,2BAA2B;mCACnC,kBAAkB;yBAC5B,QAAQ;mCACE,kBAAkB;;;;;;AC9C/D;;;;IAMI,YAAY,MAAc;QACtB,KAAK,CAAC,0BAA0B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACnD,KAAK,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;;;;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;;;IAED,OAAO;QACH,OAAO,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;KACtE;CACJ;;;;;;ACnBD;;;;IAWI,YAAY,SAAiB;QACzB,KAAK,CAAC,0BAA0B,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QACzD,KAAK,CAAC,eAAe,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;KAC1D;;;;;IAID,MAAM,CAAC,MAAyB;QAC5B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;KACf;;;;;IAED,MAAM,CAAC,MAAuB;QAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;KACf;;;;;IAED,MAAM,CAAC,MAAkC;QACrC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;KACf;;;;;IAED,OAAO,CAAC,OAA2B;QAC/B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC;KACf;;;;;IAED,MAAM,CAAC,MAAuB;QAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;KACf;;;;;IAED,IAAI,CAAC,IAAY;QACb,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;KACf;;;;;IAED,GAAG,CAAC,GAAW;QACX,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;KACf;;;;;;IAED,YAAY,CAAC,GAAW,EAAE,KAAa;QACnC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC;KACf;;;;IAED,QAAQ;;QACJ,IAAI,GAAG,GAAW,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YACnC,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;SACxC;QACD,OAAO,GAAG,CAAC;KACd;;;;IAED,OAAO;QACH,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACxC;;mBA/D2B,GAAG;;;;;;ACPnC;;IAGI,MAAG,EAAE,OAAI;;YAAT,GAAG;YAAE,IAAI;AAGb;;;;;IAII,YAAY,QAAgB,EAAE,KAAa;QACvC,KAAK,CAAC,0BAA0B,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;IAED,QAAQ;;QACJ,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACtC,GAAG,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;SAChD;QACD,OAAO,GAAG,CAAC;KACd;CACJ;;;;;;ACvBD;;;;IAoBE,YAAY,SAAiB;QAC3B,KAAK,CAAC,0BAA0B,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QACzD,KAAK,CAAC,eAAe,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACrB;;;;;IAED,MAAM,CAAC,MAAyB;QAC9B,IAAI,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,QAAQ,MAAM,CAAC,KAAK,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;SACjE;QACD,OAAO,IAAI,CAAC;KACb;;;;;IAED,MAAM,CAAC,MAAuB;QAC5B,IAAI,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,QAAQ,MAAM,CAAC,KAAK,QAAQ,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;SACjF;QACD,OAAO,IAAI,CAAC;KACb;;;;;IAED,MAAM,CAAC,MAAkC;QACvC,IAAI,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,QAAQ,MAAM,CAAC,KAAK,QAAQ,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,YAAY,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;SACnH;QACD,OAAO,IAAI,CAAC;KACb;;;;;IAED,OAAO,CAAC,OAA2B;QACjC,IAAI,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC9D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,QAAQ,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC;SAClF;QACD,OAAO,IAAI,CAAC;KACb;;;;;IAED,MAAM,CAAC,MAAuB;QAC5B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,OAAO,IAAI,CAAC;KACb;;;;;IAED,IAAI,CAAC,IAAY;QACf,KAAK,CAAC,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,OAAO,IAAI,CAAC;KACb;;;;;IAED,GAAG,CAAC,GAAW;QACb,KAAK,CAAC,kBAAkB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,OAAO,IAAI,CAAC;KACb;;;;;IAED,KAAK,CAAC,KAAc;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,OAAO,IAAI,CAAC;KACb;;;;;IAED,MAAM,CAAC,MAAc;QACnB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,OAAO,IAAI,CAAC;KACb;;;;;;IAED,YAAY,CAAC,GAAW,EAAE,KAAa;QACrC,KAAK,CAAC,0BAA0B,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC7C,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;YAChD,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,EAAkB,CAAC;SACjD;QACD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC;KACb;;;;IAED,QAAQ;;QAEN,IAAI,YAAY,GAAG,EAAE,CAAC;;QAGtB,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC1E,YAAY,IAAI,UAAU,CAAC;YAC3B,IAAI,QAAQ,IAAI,CAAC,OAAO,CAAC,KAAK,QAAQ,EAAE;gBACtC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC;aAC9B;iBAAM;gBACL,YAAY,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC9C;SACF;;QAGD,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC1E,IAAI,YAAY,CAAC,MAAM,EAAE;gBACvB,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC;aACjC;YACD,YAAY,IAAI,UAAU,GAAG,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC1E;;QAGD,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC1E,IAAI,YAAY,CAAC,MAAM,EAAE;gBACvB,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC;aACjC;YACD,YAAY,IAAI,UAAU,CAAC;YAC3B,IAAI,QAAQ,IAAI,CAAC,OAAO,CAAC,KAAK,QAAQ,EAAE;gBACtC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC;aAC9B;iBAAM;gBACL,YAAY,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC9C;SACF;;QAGD,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC5E,IAAI,YAAY,CAAC,MAAM,EAAE;gBACvB,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC;aACjC;YACD,YAAY,IAAI,WAAW,CAAC;YAC5B,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE;gBACvC,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC;aAC/B;iBAAM;gBACL,YAAY,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC/C;SACF;;QAGD,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC1E,IAAI,YAAY,CAAC,MAAM,EAAE;gBACvB,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC;aACjC;YACD,YAAY,IAAI,UAAU,GAAG,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC1E;;QAGD,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACtE,IAAI,YAAY,CAAC,MAAM,EAAE;gBACvB,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC;aACjC;YACD,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;SACvC;;QAGD,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACpE,IAAI,YAAY,CAAC,MAAM,EAAE;gBACvB,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC;aACjC;YACD,YAAY,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;SACrC;;QAGD,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACxE,IAAI,YAAY,CAAC,MAAM,EAAE;gBACvB,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC;aACjC;YACD,YAAY,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;SACzC;;QAGD,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,EAAE;YACpF,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,KAAa,EAAE,GAAW,EAAEA,MAAwB;gBAC/E,IAAI,KAAK,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;uBACtD,KAAK,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBAChE,IAAI,YAAY,CAAC,MAAM,EAAE;wBACvB,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC;qBACjC;oBACD,YAAY,IAAI,GAAG,GAAG,GAAG,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;iBACvD;aACF,CAAC,CAAC;SACJ;;QAGD,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC1E,IAAI,YAAY,CAAC,MAAM,EAAE;gBACvB,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC;aACjC;YACD,YAAY,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;SAC3C;QAED,OAAO,YAAY,CAAC;KACrB;;;;IAED,OAAO;QACL,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;YACtB,IAAI,GAAG,KAAK,UAAU,IAAI,GAAG,KAAK,YAAY,EAAE;gBAC9C,SAAS;aACV;YACD,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;gBACzD,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,IAAI,CAAC;KACb;CACF;;;;;;ACvND,gBAMwB,SAAQ,kBAAkB;;;;;IA6BhD,YAAY,YAA0B,EAAE,WAAmB;QACzD,KAAK,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QACjC,KAAK,CAAC,0BAA0B,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QAC/D,KAAK,CAAC,0BAA0B,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QAC7D,KAAK,CAAC,eAAe,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACzB;;;;IAID,QAAQ;QACN,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QACxF,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;SAC1E;QACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC;QAC/E,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC;KACb;;;;;IAED,SAAS,CAAC,SAAiB;QACzB,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;QAC5F,KAAK,CAAC,0BAA0B,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QACzD,KAAK,CAAC,eAAe,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QACpE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC;KACb;;;;;IAED,SAAS,CAAC,SAAsB;QAC9B,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,mBAAmB,EAAE;YACrG,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;SACtF;QACD,KAAK,CAAC,0BAA0B,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QACzD,KAAK,CAAC,eAAe,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC9C,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,CAAC;QACzF,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC;KACb;;;;;IAED,SAAS,CAAC,SAAiB;QACzB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;SAC3E;QACD,KAAK,CAAC,0BAA0B,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QACzD,KAAK,CAAC,eAAe,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QACpE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC;KACb;;;;;IAED,QAAQ,CAAC,QAAgB;QACvB,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,mBAAmB,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,UAAU,EAAE;YACnJ,MAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;SAChG;QACD,KAAK,CAAC,0BAA0B,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACvD,KAAK,CAAC,eAAe,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QACnE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC;KACb;;;;;IAED,QAAQ,CAAC,QAAgB;QACvB,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QACxF,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,SAAS,EAAE;YAC3F,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;SAC5E;QACD,KAAK,CAAC,0BAA0B,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACvD,KAAK,CAAC,eAAe,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QACnE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC;KACb;;;;;IAED,kBAAkB,CAAC,kBAA0B;QAC3C,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,SAAS,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,SAAS,EAAE;YACxI,MAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;SAChG;QACD,KAAK,CAAC,0BAA0B,CAAC,kBAAkB,EAAE,oBAAoB,CAAC,CAAC;QAC3E,KAAK,CAAC,eAAe,CAAC,kBAAkB,EAAE,oBAAoB,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC;QAC7E,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC;KACb;;;;IAED,GAAG;QACD,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC;QAC9E,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,mBAAmB,EAAE;YACvD,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;SACnE;QACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1E,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;KACb;;;;IAED,KAAK;QACH,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QAClF,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,QAAQ,EAAE;YAC5C,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;SAC3D;QACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;QAC5E,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC;KACb;;;;IAED,YAAY;QACV,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QAClF,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,mBAAmB,EAAE;YACrG,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;SAClF;QACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;QAC5E,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC;KACb;;;;;IAED,YAAY,CAAC,YAAoB;QAC/B,KAAK,CAAC,0BAA0B,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QAC/D,KAAK,CAAC,eAAe,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;QACvE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC;KACb;;;;;IAED,UAAU,CAAC,UAAkB;QAC3B,KAAK,CAAC,0BAA0B,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAC3D,KAAK,CAAC,eAAe,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;QACrE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;KACb;;;;IAED,KAAK;QACH,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACjE;;;;;IAID,MAAM,CAAC,MAAyB;QAC9B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;KACb;;;;;IAED,MAAM,CAAC,MAAuB;QAC5B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;KACb;;;;;IAED,MAAM,CAAC,MAAkC;QACvC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;KACb;;;;;IAED,OAAO,CAAC,OAA2B;QACjC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC;KACb;;;;;IAED,MAAM,CAAC,MAAuB;QAC5B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;KACb;;;;;IAED,IAAI,CAAC,IAAY;QACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;KACb;;;;;IAED,GAAG,CAAC,GAAW;QACb,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;KACb;;;;;IAED,WAAW,CAAC,KAAc;QACxB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC;KACb;;;;;;IAED,YAAY,CAAC,GAAW,EAAE,KAAa;QACrC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC;KACb;;;;;IAED,MAAM,CAAC,MAAc;QACnB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;KACb;;;;;IAID,GAAG,CAAC,WAA0B;QAC5B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;KACjD;;;;;;IAED,IAAI,CAAC,IAAS,EAAE,WAA0B;QACxC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;KACxD;;;;;;;IAED,KAAK,CAAC,IAAS,EAAE,IAAa,EAAE,WAA0B;QACxD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;KAC/D;;;;;;;IAED,GAAG,CAAC,IAAS,EAAE,IAAa,EAAE,WAA0B;QACtD,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;KAC7D;;;;;;IAED,MAAM,CAAC,IAAa,EAAE,WAA0B;QAC9C,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;KAC1D;;;;IAED,QAAQ;;QACN,IAAI,GAAG,GAAW,IAAI,CAAC,WAAW,CAAC;QACnC,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE;YAClF,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;SAC3C;QACD,OAAO,GAAG,CAAC;KACZ;;;;;IAES,UAAU,CAAC,OAAe;QAClC,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;;QACzC,MAAM,GAAG,GAAW,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAa,EAAE,KAAa,EAAE,QAAkB;YACtF,OAAO,KAAK,KAAK,OAAO,CAAC;SAC1B,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;KACZ;;;;;IAES,UAAU,CAAC,OAAe;QAClC,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACtE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SAC5D;KACF;;;uBArQ2B,GAAG;sBAGI,UAAU;wBACR,WAAW;wBACX,WAAW;uBACZ,WAAW;uBACX,UAAU;sBACX,UAAU;iCACC,oBAAoB;iBACpC,KAAK;mBACH,OAAO;mBACP,OAAO;2BACC,cAAc;yBAChB,YAAY;uBAGd,WAAW;kBAChB,MAAM;oBACJ,QAAQ;oBACR,QAAQ;;;;;;ACpC3C;;;;IACI,YAAmB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;KAAK;CAC5D;qBAE4B,SAAQ,aAAa;;;;;;IAC9C,YACW,QACP,cAAgC,EACzB;QAEP,KAAK,CAAC,cAAc,CAAC,CAAC;QAJf,WAAM,GAAN,MAAM;QAEN,cAAS,GAAT,SAAS;KAGnB;CACJ;;;;;;IAGG,YACW,MACA;QADA,SAAI,GAAJ,IAAI;QACJ,cAAS,GAAT,SAAS;KACf;CACR;;;;;;;;;;;;;;IAGG,YACW,MACA,MACA,UACA,cACA,WACA,UACA,WACA,WACA,OACA;QATA,SAAI,GAAJ,IAAI;QACJ,SAAI,GAAJ,IAAI;QACJ,aAAQ,GAAR,QAAQ;QACR,iBAAY,GAAZ,YAAY;QACZ,cAAS,GAAT,SAAS;QACT,aAAQ,GAAR,QAAQ;QACR,cAAS,GAAT,SAAS;QACT,cAAS,GAAT,SAAS;QACT,UAAK,GAAL,KAAK;QACL,SAAI,GAAJ,IAAI;KACV;CACR;;;;;;AC9BD;;;;;;;;;IACI,YACW,MACA,QACA,YACA,YACA,iBACA;QALA,SAAI,GAAJ,IAAI;QACJ,WAAM,GAAN,MAAM;QACN,eAAU,GAAV,UAAU;QACV,eAAU,GAAV,UAAU;QACV,oBAAe,GAAf,eAAe;QACf,kBAAa,GAAb,aAAa;KACnB;CACR;;;;;;ACXD;;;;;;;IACI,YACW,MACA,YACA,2BACA;QAHA,SAAI,GAAJ,IAAI;QACJ,eAAU,GAAV,UAAU;QACV,8BAAyB,GAAzB,yBAAyB;QACzB,6BAAwB,GAAxB,wBAAwB;KAGlC;CACJ;;;;;;ACXD;;;;;;;IACI,YACW,MACA,SACA,gBACA;QAHA,SAAI,GAAJ,IAAI;QACJ,YAAO,GAAP,OAAO;QACP,mBAAc,GAAd,cAAc;QACd,YAAO,GAAP,OAAO;KACb;CACR;;;;;;IAGG,YACW,MACA;QADA,SAAI,GAAJ,IAAI;QACJ,UAAK,GAAL,KAAK;KACX;CACR;;;;;;ACdD;;;;;;;;;IACI,YACW,MACA,YACA,SACA,eACA,cACA;QALA,SAAI,GAAJ,IAAI;QACJ,eAAU,GAAV,UAAU;QACV,YAAO,GAAP,OAAO;QACP,kBAAa,GAAb,aAAa;QACb,iBAAY,GAAZ,YAAY;QACZ,eAAU,GAAV,UAAU;KAChB;CACR;;;;;;;;;IAGG,YACW,MACA,YACA,SACA,eACA;QAJA,SAAI,GAAJ,IAAI;QACJ,eAAU,GAAV,UAAU;QACV,YAAO,GAAP,OAAO;QACP,kBAAa,GAAb,aAAa;QACb,eAAU,GAAV,UAAU;KAChB;CACR;;;;;;;;IAGG,YACW,MACA,cACA,WACA;QAHA,SAAI,GAAJ,IAAI;QACJ,iBAAY,GAAZ,YAAY;QACZ,cAAS,GAAT,SAAS;QACT,6BAAwB,GAAxB,wBAAwB;KAC9B;CACR;;;;;;;IAGG,YACW,MACA,QACA;QAFA,SAAI,GAAJ,IAAI;QACJ,WAAM,GAAN,MAAM;QACN,cAAS,GAAT,SAAS;KACf;CACR;;;;;;;;;;;IAGG,YACW,MACA,MACA,UACA,WACA,WACA,OACA;QANA,SAAI,GAAJ,IAAI;QACJ,SAAI,GAAJ,IAAI;QACJ,aAAQ,GAAR,QAAQ;QACR,cAAS,GAAT,SAAS;QACT,cAAS,GAAT,SAAS;QACT,UAAK,GAAL,KAAK;QACL,SAAI,GAAJ,IAAI;KACV;CACR;;;;;;;;;;IAGG,YACW,MACA,UACA,WACA,WACA,OACA;QALA,SAAI,GAAJ,IAAI;QACJ,aAAQ,GAAR,QAAQ;QACR,cAAS,GAAT,SAAS;QACT,cAAS,GAAT,SAAS;QACT,UAAK,GAAL,KAAK;QACL,SAAI,GAAJ,IAAI;KACV;CACR;;;;;;AC3DD;;;;;IACI,YACW,MACA;QADA,SAAI,GAAJ,IAAI;QACJ,WAAM,GAAN,MAAM;KACZ;CACR;;;;;;ACLD,mBAE2B,SAAQ,aAAa;;;;;;;IAC5C,YACW,KACA,UACA,oBACP,cAAiC;QAEjC,KAAK,CAAC,cAAc,CAAC,CAAC;QALf,QAAG,GAAH,GAAG;QACH,aAAQ,GAAR,QAAQ;QACR,uBAAkB,GAAlB,kBAAkB;KAI5B;CACJ;;;;;;IAGG,YACW,WACA;QADA,cAAS,GAAT,SAAS;QACT,UAAK,GAAL,KAAK;KACX;CACR;;;;;;;IAGG,YACW,eACA,WACA;QAFA,kBAAa,GAAb,aAAa;QACb,cAAS,GAAT,SAAS;QACT,oBAAe,GAAf,eAAe;KACrB;CACR;;;;;;AC1BD,gBAOwB,SAAQ,aAAa;;;;;;;;;;;;;;;IACzC,YACW,WACA,OACA,WACA,cACA,aACA,WACA,SACA,iBACA,iBACA,OACA,iBACP,cAAiC;QAEjC,KAAK,CAAC,cAAc,CAAC,CAAC;QAbf,cAAS,GAAT,SAAS;QACT,UAAK,GAAL,KAAK;QACL,cAAS,GAAT,SAAS;QACT,iBAAY,GAAZ,YAAY;QACZ,gBAAW,GAAX,WAAW;QACX,cAAS,GAAT,SAAS;QACT,YAAO,GAAP,OAAO;QACP,oBAAe,GAAf,eAAe;QACf,oBAAe,GAAf,eAAe;QACf,UAAK,GAAL,KAAK;QACL,oBAAe,GAAf,eAAe;KAIzB;CACJ;;;;;;ACtBD;;;;;;IACI,YACW,MACA,MACA;QAFA,SAAI,GAAJ,IAAI;QACJ,SAAI,GAAJ,IAAI;QACJ,+BAA0B,GAA1B,0BAA0B;KAChC;CACR;;;;;;;;;ACRD;;;;;;IACI,YACW,MACA,MACA;QAFA,SAAI,GAAJ,IAAI;QACJ,SAAI,GAAJ,IAAI;QACJ,aAAQ,GAAR,QAAQ;KACd;CACR;kBAEyB,SAAQ,sBAAsB;;;;;;;;;;;;IACpD,YACI,IAAY,EACZ,IAAY,EACZ,QAAkB,EACX,WACA,WACA,OACA,SACA,MACA;QAEP,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QAPrB,cAAS,GAAT,SAAS;QACT,cAAS,GAAT,SAAS;QACT,UAAK,GAAL,KAAK;QACL,YAAO,GAAP,OAAO;QACP,SAAI,GAAJ,IAAI;QACJ,iBAAY,GAAZ,YAAY;KAGtB;CACJ;4BAEmC,SAAQ,sBAAsB;;;;;;;;;;IAC9D,YACI,IAAY,EACZ,IAAY,EACZ,QAAkB,EACX,SACA,gBACA,wBACA;QAEP,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QALrB,YAAO,GAAP,OAAO;QACP,mBAAc,GAAd,cAAc;QACd,2BAAsB,GAAtB,sBAAsB;QACtB,aAAQ,GAAR,QAAQ;KAGlB;CACJ;;;;;;IAGG,YACW,UACA;QADA,aAAQ,GAAR,QAAQ;QACR,uBAAkB,GAAlB,kBAAkB;KACxB;CACR;;;;;IAGG,YACW;QAAA,WAAM,GAAN,MAAM;KACZ;CACR;;;;;;AC/CD;;;;;;;;;IACI,YACW,MACA,YACA,sBACA,UACA,UACA;QALA,SAAI,GAAJ,IAAI;QACJ,eAAU,GAAV,UAAU;QACV,yBAAoB,GAApB,oBAAoB;QACpB,aAAQ,GAAR,QAAQ;QACR,aAAQ,GAAR,QAAQ;QACR,aAAQ,GAAR,QAAQ;KACd;CACR;qBAE4B,SAAQ,kBAAkB;;;;;;;;;IACnD,YACI,IAAY,EACZ,UAA2B,EAC3B,oBAA+C,EAC/C,QAAiB,EACjB,QAAkB,EAClB,QAAkB;QAElB,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,oBAAoB,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;KAC/E;CACJ;AAED,oBAA4B,SAAQ,kBAAkB;;;;;;;;;;;IAClD,YACI,IAAY,EACL,KACP,UAA2B,EAC3B,oBAA+C,EAC/C,QAAiB,EACjB,QAAkB,EAClB,QAAkB,EACX;QAEP,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,oBAAoB,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QARrE,QAAG,GAAH,GAAG;QAMH,cAAS,GAAT,SAAS;KAGnB;CACJ;;;;;IAGG,YACW;QAAA,iBAAY,GAAZ,YAAY;KAClB;CACR;;;;;;IAGG,YACW,MACA;QADA,SAAI,GAAJ,IAAI;QACJ,UAAK,GAAL,KAAK;KACX;CACR;;;;;;ACpDD,wBAEgC,SAAQ,aAAa;;;;;;;;;;;IACjD,YACW,MACA,iBACA,WACA,WACA,OACA,SACA,MACP,cAAiC;QACjC,KAAK,CAAC,cAAc,CAAC,CAAC;QARf,SAAI,GAAJ,IAAI;QACJ,oBAAe,GAAf,eAAe;QACf,cAAS,GAAT,SAAS;QACT,cAAS,GAAT,SAAS;QACT,UAAK,GAAL,KAAK;QACL,YAAO,GAAP,OAAO;QACP,SAAI,GAAJ,IAAI;KAGd;CACJ;;;;;;ACdD;;;AACA;;;;;;IAII,YAAY,QAAa,EAAE,KAAa,EAAE,IAAmB;QACzD,KAAK,CAAC,0BAA0B,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,QAAQ,CAAC,OAAO,CAAC,MAAM;YACnB,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;gBAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;aACjD;iBAAM;gBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;aACzD;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;IAED,WAAW;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;CACJ;;;;;;ACzBD;;IAeI,YAAS,EAAE,MAAG;;oBAAd,SAAS;oBAAE,GAAG;AAElB;;;;;IACI,YAAmB,IAAY,EAAS,SAAoB;QAAzC,SAAI,GAAJ,IAAI,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAW;KAAK;CACpE;;;;;IAkFG,YAAY,GAAW;QACnB,IAAI;;YACA,MAAM,MAAM,GAAc,IAAI,SAAS,EAAE,CAAC;;YAC1C,MAAM,QAAQ,GAAa,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;YAEnE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAE5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,wBAAwB,CACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,iBAAiB,EAAE,SAAS,CAAC,SAAS,CAAC,EAC1D,QAAQ,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YAEzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC,aAAa,EAAE;gBAChF,IAAI,KAAK,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,CAAC,SAAS,CAAC;gBACtD,IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,SAAS,CAAC,GAAG,CAAC;gBAC9C,IAAI,KAAK,CAAC,QAAQ,CAAC,uBAAuB,EAAE,SAAS,CAAC,GAAG,CAAC;gBAC1D,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,GAAG,CAAC;aACpD,CAAC,CAAC;;YAEH,MAAM,YAAY,GAAY,QAAQ,CAAC,eAAe,CAAC,oBAAoB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3G,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,QAAQ,CAAC,UAAU,EAAE;gBAC9D,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;gBAC5D,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,SAAS,CAAC;gBACxD,IAAI,KAAK,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,CAAC,GAAG,CAAC;gBAChD,IAAI,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,SAAS,CAAC,GAAG,CAAC;gBACnD,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,GAAG,CAAC;gBAClD,IAAI,KAAK,CAAC,QAAQ,CAAC,YAAY,EAAE,SAAS,CAAC,GAAG,CAAC;gBAC/C,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,SAAS,CAAC,GAAG,CAAC;gBAC7C,IAAI,KAAK,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,GAAG,CAAC;gBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,GAAG,CAAC;gBACtD,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,GAAG,CAAC;gBAC3C,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,GAAG,CAAC;gBAClD,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,GAAG,CAAC;aACpD,CAAC,CAAC;SACN;QAAC,OAAO,KAAK,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,4BAA4B,GAAG,KAAK,CAAC,CAAC;SACzD;KACJ;;;;;IAES,YAAY,CAAC,QAAkB;;QAErC,MAAM,UAAU,GAAiB,QAAQ,CAAC,eAAe,CAAC,UAAU,CAAC;QACrE,IAAI,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE;YACrC,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;SACrE;;QACD,MAAM,IAAI,GAAS,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;SACrE;;QACD,MAAM,YAAY,GAAW,IAAI,CAAC,SAAS,CAAC;QAC5C,IAAI,YAAY,KAAK,KAAK,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,iBAAiB,GAAG,YAAY,GAAG,oBAAoB,CAAC,CAAC;SAC5E;KACJ;;;;;;;IAES,UAAU,CAAC,aAAsB,EAAE,GAAW,EAAE,UAAmB;;QACzE,IAAI,OAAO,CAAQ;;QAEnB,MAAM,QAAQ,GAAmB,aAAa,CAAC,QAAQ,CAAC;QACxD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;;YAClD,MAAM,OAAO,GAAY,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAE9C,IAAI,OAAO,CAAC,QAAQ,KAAK,GAAG,EAAE;gBAC1B,SAAS;aACZ;;YAED,MAAM,UAAU,GAAiB,OAAO,CAAC,UAAU,CAAC;;YACpD,MAAM,WAAW,GAAU,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;YAChF,IAAI,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE;gBAClC,OAAO,GAAG,EAAE,CAAC;aAChB;YACD,QAAQ,GAAG;gBACP,KAAK,QAAQ,CAAC,aAAa;oBACvB,OAAO,CAAC,IAAI,CAAC,IAAI,aAAa,CAC1B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,WAAW;oBACrB,OAAO,CAAC,IAAI,CAAC,IAAI,WAAW,CACxB,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,uBAAuB;oBACjC,OAAO,CAAC,IAAI,CAAC,IAAI,sBAAsB,CACnC,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,QAAQ;oBAClB,OAAO,CAAC,IAAI,CAAC,IAAI,QAAQ,CACrB,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CACjB,CAAC,CAAC;oBACH,MAAM;gBACV,KAAK,QAAQ,CAAC,eAAe;oBACzB,OAAO,CAAC,IAAI,CAAC,IAAI,eAAe,CAC5B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CACjB,CAAC,CAAC;oBACH,MAAM;gBACV,KAAK,QAAQ,CAAC,cAAc;oBACxB,OAAO,CAAC,IAAI,CAAC,IAAI,cAAc,CAC3B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CACjB,CAAC,CAAC;oBACH,MAAM;gBACV,KAAK,QAAQ,CAAC,UAAU;oBACpB,OAAO,CAAC,IAAI,CAAC,IAAI,UAAU,CACvB,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,EAAE,CAAC,EACf,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACtB,MAAM;gBACV,KAAK,QAAQ,CAAC,aAAa;oBACvB,OAAO,CAAC,IAAI,CAAC,IAAI,YAAY,CACzB,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,gBAAgB;oBAC1B,OAAO,CAAC,IAAI,CAAC,IAAI,eAAe,CAC5B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,eAAe;oBACzB,OAAO,CAAC,IAAI,CAAC,IAAI,cAAc,CAC3B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,YAAY;oBACtB,OAAO,CAAC,IAAI,CAAC,IAAI,YAAY,CACzB,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,UAAU;oBACpB,OAAO,CAAC,IAAI,CAAC,IAAI,cAAc,CAC3B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,YAAY;oBACtB,OAAO,CAAC,IAAI,CAAC,IAAI,YAAY,CACzB,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,gBAAgB;oBAC1B,OAAO,CAAC,IAAI,CAAC,IAAI,eAAe,CAC5B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,uBAAuB;oBACjC,OAAO,CAAC,IAAI,CAAC,IAAI,sBAAsB,CACnC,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,0BAA0B;oBACpC,OAAO,CAAC,IAAI,CAAC,IAAI,yBAAyB,CACtC,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,aAAa;oBACvB,OAAO,CAAC,IAAI,CAAC,IAAI,aAAa,CAC1B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,UAAU;oBACpB,OAAO,CAAC,IAAI,CAAC,IAAI,UAAU,CACvB,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,cAAc;oBACxB,OAAO,CAAC,IAAI,CAAC,IAAI,aAAa,CAC1B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,aAAa;oBACvB,OAAO,CAAC,IAAI,CAAC,IAAI,aAAa,CAC1B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,mBAAmB;oBAC7B,OAAO,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAC/B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,iBAAiB;oBAC3B,OAAO,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAC7B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,+BAA+B;oBACzC,OAAO,CAAC,IAAI,CAAC,IAAI,6BAA6B,CAC1C,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,QAAQ,CAAC,mBAAmB;oBAC7B,OAAO,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAC/B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;gBACV,SAAS,MAAM,IAAI,KAAK,CAAC,cAAc,GAAG,GAAG,CAAC,CAAC;aAClD;SACJ;QAED,OAAO,OAAO,CAAC;KAClB;;;;;;;IAES,SAAS,CAAC,aAAsB,EAAE,GAAW,EAAE,UAAmB;;QACxE,IAAI,MAAM,CAAM;;QAEhB,MAAM,QAAQ,GAAmB,aAAa,CAAC,QAAQ,CAAC;;QACxD,IAAI,OAAO,CAAU;QACrB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAClD,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE;gBACvC,IAAI,KAAK,CAAC,qBAAqB,CAAC,OAAO,CAAC,EAAE;oBACtC,MAAM,IAAI,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;iBAC1C;gBACD,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAClC;SACJ;QAED,IAAI,KAAK,CAAC,qBAAqB,CAAC,OAAO,CAAC,EAAE;;YACtC,MAAM,UAAU,GAAiB,OAAO,CAAC,UAAU,CAAC;;YACpD,MAAM,WAAW,GAAU,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;YAChF,QAAQ,GAAG;gBACP,KAAK,QAAQ,CAAC,OAAO;oBACjB,MAAM,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrC,MAAM;gBACV,KAAK,QAAQ,CAAC,eAAe;oBACzB,MAAM,GAAG,IAAI,cAAc,CACvB,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpB,MAAM;gBACV,KAAK,QAAQ,CAAC,oBAAoB;oBAC9B,MAAM,GAAG,IAAI,mBAAmB,CAC5B,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpB,MAAM;gBACV,KAAK,QAAQ,CAAC,aAAa;oBACvB,MAAM,GAAG,IAAI,YAAY,CACrB,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpB,MAAM;gBACV,SAAS,MAAM,IAAI,KAAK,CAAC,cAAc,GAAG,GAAG,CAAC,CAAC;aAClD;SACJ;QAED,OAAO,MAAM,CAAC;KACjB;;;;;;;IAES,cAAc,CAAC,MAAe,EAAE,UAAwB,EAAE,OAAgB;;QAChF,MAAM,WAAW,GAAU,EAAE,CAAC;QAE9B,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YACxB,IAAI,KAAK,CAAC,SAAS,KAAK,SAAS,CAAC,GAAG,EAAE;gBACnC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;aAC7D;iBAAM,IAAI,KAAK,CAAC,SAAS,KAAK,SAAS,CAAC,SAAS,EAAE;gBAChD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;aACtE;iBAAM;gBACH,MAAM,IAAI,KAAK,CAAC,sBAAsB,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;aAC7D;SACJ;QAED,OAAO,WAAW,CAAC;KACtB;;;;;;IAES,wBAAwB,CAAC,KAAY,EAAE,UAAwB;QACrE,QAAQ,KAAK,CAAC,IAAI;YACd,KAAK,QAAQ,CAAC,iBAAiB,CAAC;YAChC,KAAK,QAAQ,CAAC,aAAa,CAAC;YAC5B,KAAK,QAAQ,CAAC,mBAAmB,CAAC;YAClC,KAAK,QAAQ,CAAC,eAAe,CAAC;YAC9B,KAAK,QAAQ,CAAC,wBAAwB,CAAC;YACvC,KAAK,QAAQ,CAAC,cAAc,CAAC;YAC7B,KAAK,QAAQ,CAAC,mBAAmB,CAAC;YAClC,KAAK,QAAQ,CAAC,0BAA0B,CAAC;YACzC,KAAK,QAAQ,CAAC,cAAc,CAAC;YAC7B,KAAK,QAAQ,CAAC,cAAc,CAAC;YAC7B,KAAK,QAAQ,CAAC,cAAc,CAAC;YAC7B,KAAK,QAAQ,CAAC,uBAAuB,CAAC;YACtC,KAAK,QAAQ,CAAC,iBAAiB,CAAC;YAChC,KAAK,QAAQ,CAAC,kBAAkB,CAAC;YACjC,KAAK,QAAQ,CAAC,6BAA6B,CAAC;YAC5C,KAAK,QAAQ,CAAC,mBAAmB,CAAC;YAClC,KAAK,QAAQ,CAAC,yBAAyB,CAAC;YACxC,KAAK,QAAQ,CAAC,qBAAqB,CAAC;YACpC,KAAK,QAAQ,CAAC,cAAc,CAAC;YAC7B,KAAK,QAAQ,CAAC,gBAAgB,CAAC;YAC/B,KAAK,QAAQ,CAAC,kBAAkB,CAAC;YACjC,KAAK,QAAQ,CAAC,gBAAgB,CAAC;YAC/B,KAAK,QAAQ,CAAC,oBAAoB,CAAC;YACnC,KAAK,QAAQ,CAAC,yBAAyB,CAAC;YACxC,KAAK,QAAQ,CAAC,iBAAiB,CAAC;YAChC,KAAK,QAAQ,CAAC,mBAAmB,CAAC;YAClC,KAAK,QAAQ,CAAC,oBAAoB;gBAC9B,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;YAC1D,KAAK,QAAQ,CAAC,kBAAkB,CAAC;YACjC,KAAK,QAAQ,CAAC,iBAAiB,CAAC;YAChC,KAAK,QAAQ,CAAC,mBAAmB,CAAC;YAClC,KAAK,QAAQ,CAAC,oBAAoB,CAAC;YACnC,KAAK,QAAQ,CAAC,kBAAkB,CAAC;YACjC,KAAK,QAAQ,CAAC,uBAAuB,CAAC;YACtC,KAAK,QAAQ,CAAC,yBAAyB,CAAC;YACxC,KAAK,QAAQ,CAAC,qCAAqC,CAAC;YACpD,KAAK,QAAQ,CAAC,kBAAkB,CAAC;YACjC,KAAK,QAAQ,CAAC,kBAAkB;gBAC5B,OAAO,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YACvF,KAAK,QAAQ,CAAC,eAAe,CAAC;YAC9B,KAAK,QAAQ,CAAC,oBAAoB,CAAC;YACnC,KAAK,QAAQ,CAAC,mBAAmB,CAAC;YAClC,KAAK,QAAQ,CAAC,eAAe;gBACzB,OAAO,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YACtF,SAAS,MAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;SAC/D;KACJ;;;;;;IAES,kBAAkB,CAAC,KAAY,EAAE,OAAgB;QACvD,QAAQ,KAAK,CAAC,IAAI;YACd,KAAK,QAAQ,CAAC,WAAW;gBACrB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC5D,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,SAAS,CAAC;iBAC3D,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,uBAAuB;gBACjC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,wBAAwB,EAAE,SAAS,CAAC,SAAS,CAAC;oBACjE,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC5D,IAAI,KAAK,CAAC,QAAQ,CAAC,0BAA0B,EAAE,SAAS,CAAC,SAAS,CAAC;iBACtE,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,QAAQ;gBAClB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC5D,IAAI,KAAK,CAAC,QAAQ,CAAC,uBAAuB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAChE,IAAI,KAAK,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC7D,IAAI,KAAK,CAAC,QAAQ,CAAC,kBAAkB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC3D,IAAI,KAAK,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC7D,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC5D,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,SAAS,CAAC;oBACxD,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;iBAC1D,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,eAAe;gBACzB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,SAAS,CAAC,SAAS,CAAC;oBACzD,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,GAAG,CAAC;oBACjD,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;iBAC/D,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,cAAc;gBACxB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;iBAC/D,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,aAAa;gBACvB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,SAAS,CAAC,GAAG,CAAC;oBAC7C,IAAI,KAAK,CAAC,QAAQ,CAAC,yBAAyB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAClE,IAAI,KAAK,CAAC,QAAQ,CAAC,kBAAkB,EAAE,SAAS,CAAC,SAAS,CAAC;iBAC9D,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,gBAAgB;gBAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,YAAY,EAAE,SAAS,CAAC,GAAG,CAAC;oBAC/C,IAAI,KAAK,CAAC,QAAQ,CAAC,uBAAuB,EAAE,SAAS,CAAC,GAAG,CAAC;oBAC1D,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC5D,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC5D,IAAI,KAAK,CAAC,QAAQ,CAAC,kBAAkB,EAAE,SAAS,CAAC,SAAS,CAAC;iBAC9D,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,eAAe;gBACzB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,CAAC;oBAC1C,IAAI,KAAK,CAAC,QAAQ,CAAC,YAAY,EAAE,SAAS,CAAC,GAAG,CAAC;oBAC/C,IAAI,KAAK,CAAC,QAAQ,CAAC,uBAAuB,EAAE,SAAS,CAAC,GAAG,CAAC;oBAC1D,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC5D,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC5D,IAAI,KAAK,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC7D,IAAI,KAAK,CAAC,QAAQ,CAAC,kBAAkB,EAAE,SAAS,CAAC,SAAS,CAAC;iBAC9D,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,YAAY;gBACtB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,GAAG,CAAC;oBAClD,IAAI,KAAK,CAAC,QAAQ,CAAC,kBAAkB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC3D,IAAI,KAAK,CAAC,QAAQ,CAAC,yBAAyB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAClE,IAAI,KAAK,CAAC,QAAQ,CAAC,uBAAuB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAChE,IAAI,KAAK,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,CAAC,GAAG,CAAC;iBACnD,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,UAAU;gBACpB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,SAAS,CAAC;iBAC3D,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,YAAY;gBACtB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,kBAAkB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC3D,IAAI,KAAK,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC7D,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC5D,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,SAAS,CAAC;oBACxD,IAAI,KAAK,CAAC,QAAQ,CAAC,iBAAiB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC1D,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,uBAAuB,EAAE,SAAS,CAAC,SAAS,CAAC;iBACnE,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,OAAO;gBACjB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACvC,IAAI,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,SAAS,CAAC,GAAG,CAAC;iBACtD,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,gBAAgB;gBAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,SAAS,CAAC;iBAC3D,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,uBAAuB;gBACjC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,kBAAkB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC3D,IAAI,KAAK,CAAC,QAAQ,CAAC,iBAAiB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC1D,IAAI,KAAK,CAAC,QAAQ,CAAC,yBAAyB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAClE,IAAI,KAAK,CAAC,QAAQ,CAAC,0BAA0B,EAAE,SAAS,CAAC,GAAG,CAAC;oBAC7D,IAAI,KAAK,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,CAAC,GAAG,CAAC;iBACnD,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,0BAA0B;gBACpC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,kBAAkB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC3D,IAAI,KAAK,CAAC,QAAQ,CAAC,6BAA6B,EAAE,SAAS,CAAC,SAAS,CAAC;iBACzE,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,aAAa;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACvC,IAAI,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,SAAS,CAAC,SAAS,CAAC;iBAC5D,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,aAAa;gBACvB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,kBAAkB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC3D,IAAI,KAAK,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC7D,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC5D,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,SAAS,CAAC;oBACxD,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;iBAC1D,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,eAAe;gBACzB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACvC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,kBAAkB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC3D,IAAI,KAAK,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC7D,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC5D,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,SAAS,CAAC;oBACxD,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;iBAC1D,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,UAAU;gBACpB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,GAAG,CAAC;oBAClD,IAAI,KAAK,CAAC,QAAQ,CAAC,kBAAkB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC3D,IAAI,KAAK,CAAC,QAAQ,CAAC,yBAAyB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAClE,IAAI,KAAK,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,CAAC,GAAG,CAAC;iBACnD,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,oBAAoB;gBAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACvC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,iBAAiB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC1D,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,GAAG,CAAC;oBACjD,IAAI,KAAK,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,CAAC,GAAG,CAAC;oBAChD,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,GAAG,CAAC;oBACtD,IAAI,KAAK,CAAC,QAAQ,CAAC,iBAAiB,EAAE,SAAS,CAAC,GAAG,CAAC;iBACvD,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,cAAc;gBACxB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,qBAAqB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC9D,IAAI,KAAK,CAAC,QAAQ,CAAC,+BAA+B,EAAE,SAAS,CAAC,GAAG,CAAC;oBAClE,IAAI,KAAK,CAAC,QAAQ,CAAC,qCAAqC,EAAE,SAAS,CAAC,SAAS,CAAC;iBACjF,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,aAAa;gBACvB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,+BAA+B,EAAE,SAAS,CAAC,GAAG,CAAC;iBACrE,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,mBAAmB;gBAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,kBAAkB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC3D,IAAI,KAAK,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC7D,IAAI,KAAK,CAAC,QAAQ,CAAC,qCAAqC,EAAE,SAAS,CAAC,SAAS,CAAC;iBACjF,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,iBAAiB;gBAC3B,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,SAAS,CAAC,SAAS,CAAC;oBACzD,IAAI,KAAK,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,SAAS,CAAC;iBAChE,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,+BAA+B;gBACzC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,SAAS,CAAC,SAAS,CAAC;iBAC5D,CAAC,CAAC;YACP,KAAK,QAAQ,CAAC,mBAAmB;gBAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE;oBACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,yBAAyB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAClE,IAAI,KAAK,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC7D,IAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC5D,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,SAAS,CAAC;oBACxD,IAAI,KAAK,CAAC,QAAQ,CAAC,iBAAiB,EAAE,SAAS,CAAC,SAAS,CAAC;oBAC1D,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,SAAS,CAAC;oBACvD,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,GAAG,CAAC;iBACpD,CAAC,CAAC;YACP,SAAS,MAAM,IAAI,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;SACzD;KACJ;;;;;;IAES,iBAAiB,CAAC,UAAwB,EAAE,aAAqB;;QACvE,MAAM,SAAS,GAAS,UAAU,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QAC/D,IAAI,KAAK,CAAC,qBAAqB,CAAC,SAAS,CAAC,EAAE;YACxC,OAAO,SAAS,CAAC,SAAS,CAAC;SAC9B;QACD,OAAO,SAAS,CAAC;KACpB;;;;;IAES,qBAAqB,CAAC,cAAsB;QAClD,OAAO,KAAK,CAAC,qBAAqB,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,cAAc,CAAC,GAAG,SAAS,CAAC;KAC3F;;;;;IAES,sBAAsB,CAAC,cAAsB;QACnD,OAAO,KAAK,CAAC,qBAAqB,CAAC,cAAc,CAAC,GAAG,cAAc,KAAK,MAAM,GAAG,SAAS,CAAC;KAC9F;;oBAvqBkC,WAAW;6BACF,mBAAmB;yBACvB,gBAAgB;uBAClB,cAAc;mCACF,yBAAyB;oBACxC,MAAM;2BACC,aAAa;0BACd,YAAY;sBAChB,QAAQ;yBACL,UAAU;sBACb,QAAQ;4BACF,aAAa;2BACd,YAAY;wBACf,UAAU;mBACf,KAAK;4BACI,aAAa;mCACN,oBAAoB;sCACjB,uBAAuB;yBACpC,UAAU;wBACX,UAAU;2BACP,YAAY;yBACd,WAAW;sBACd,QAAQ;gCACE,iBAAiB;0BACvB,WAAW;yBACZ,WAAW;+BACL,gBAAgB;6BAClB,cAAc;2CACA,2BAA2B;+BACvC,gBAAgB;6BAGlB,SAAS;yBACb,KAAK;2BACH,OAAO;+BACH,WAAW;oCACN,eAAe;+BACpB,WAAW;sCACJ,iBAAiB;0BAC7B,MAAM;0BACN,MAAM;2BACL,OAAO;+BACH,UAAU;+BACV,UAAU;0BACf,MAAM;8BACF,UAAU;gCACR,WAAW;+BACZ,WAAW;2BACf,OAAO;6BACL,SAAS;0BACZ,MAAM;mCACG,cAAc;6BACpB,SAAS;8BACR,UAAU;yCACC,oBAAoB;gCAC7B,WAAW;qCACN,gBAAgB;8BACvB,SAAS;qCACF,eAAe;mCACjB,cAAc;iCAChB,YAAY;0BACnB,MAAM;4BACJ,QAAQ;8BACN,UAAU;4BACZ,QAAQ;gCACJ,WAAW;iDACM,0BAA0B;8BAC7C,UAAU;qCACH,gBAAgB;8BACvB,SAAS;6BACV,SAAS;+BACP,UAAU;gCACT,WAAW;;;;;;AC7F9D;;;AAEA;;;;IAGI,YAAY,YAAkC;QAC1C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACpC;;;;IAED,eAAe;QACX,OAAO,IAAI,CAAC,YAAY,CAAC;KAC5B;;;;IAED,IAAI;QACA,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;KAC/B;;;;IAED,aAAa;QACT,OAAO,IAAI,CAAC;KACf;;;;IAED,aAAa;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;KACjC;;;;IAED,QAAQ;;QACJ,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,IAAI,CAAC;;QAE1E,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QAC1C,KAAK,MAAM,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE,EAAE;YAC9B,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC;;YAClB,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;gBACrC,IAAI,WAAW,CAAC,MAAM,EAAE;oBACpB,WAAW,IAAI,GAAG,CAAC;iBACtB;gBACD,WAAW,IAAI,KAAK,CAAC;aACxB;YACD,GAAG,IAAI,WAAW,GAAG,IAAI,CAAC;SAC7B;;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAClC,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE;YACnC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;SACxC;aAAM;YACH,GAAG,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;SAC/B;QACD,OAAO,GAAG,CAAC;KACd;CACJ;;;;;;ACjDD,mBAM2B,SAAQ,qBAAqB;;;;IAIpD,YAAY,YAAkC;QAC1C,KAAK,CAAC,YAAY,CAAC,CAAC;KACvB;;;;IAED,aAAa;;QACT,MAAM,WAAW,GAAW,IAAI,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC/E,IAAI,KAAK,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC1E,IAAI;gBACA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;aAC3C;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,IAAI,CAAC;KACf;;;;IAED,UAAU;;QACN,MAAM,GAAG,GAAW,IAAI,CAAC,aAAa,EAAE,CAAC;QACzC,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;KAC5B;;;;;;IAED,WAAW,CAAI,IAAoB;;QAC/B,MAAM,IAAI,GAAQ,IAAI,CAAC,aAAa,EAAE,CAAC;QACvC,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;;YAC/E,IAAI,KAAK,GAAW,IAAI,CAAC;YACzB,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE;gBAChD,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;aAC3C;YACD,OAAO,IAAI,SAAS,CAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SACnE;QACD,OAAO,IAAI,CAAC;KACf;;;;;;IAED,mBAAmB,CAAI,IAAoB;;QACvC,MAAM,IAAI,GAAQ,IAAI,CAAC,aAAa,EAAE,CAAC;QAEvC,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;;YAC/E,MAAM,GAAG,GAAQ,EAAE,CAAC;YACpB,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBAC5C,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAI,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;aAC5C;YACD,OAAO,GAAG,CAAC;SACd;QAED,OAAO,IAAI,CAAC;KACf;;;;;;IAED,QAAQ,CAAI,IAAoB;;QAC5B,MAAM,IAAI,GAAQ,IAAI,CAAC,aAAa,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,QAAQ,CAAI,IAAI,EAAE,IAAI,CAAC,CAAC;KACvC;;;;;;IAED,cAAc,CAAI,IAAoB;;QAClC,MAAM,IAAI,GAAQ,IAAI,CAAC,aAAa,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,QAAQ,CAAI,IAAI,EAAE,IAAI,CAAC,CAAC;KACvC;;;;;IAED,eAAe;;QACX,MAAM,IAAI,GAAQ,IAAI,CAAC,aAAa,EAAE,CAAC;QACvC,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE;YACnC,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBAC1C,yBAAU,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAC;aACvC;YACD,OAAO,IAAI,CAAC;SACf;aAAM;YACH,yBAAU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAC;SAC9C;KACJ;;;;IAED,OAAO;QACH,OAAO,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACvC;;;;IAED,oBAAoB;QAChB,OAAO,IAAI,kBAAkB,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;KACzD;;;;;;;IAES,QAAQ,CAAI,MAAW,EAAE,IAAmB;QAClD,IAAI,KAAK,CAAC,qBAAqB,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;gBAC/B,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;aACpC;iBAAM;gBACH,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;aAC5C;SACJ;QACD,OAAO,IAAI,CAAC;KACf;;sBAzF+B,OAAO;4BACD,cAAc;;;;;;ACVxD,wBAMgC,SAAQ,qBAAqB;;;;IAUzD,YAAY,YAAkC;QAC1C,KAAK,CAAC,YAAY,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;;;;IAED,iBAAiB;QACb,OAAO,IAAI,CAAC,cAAc,CAAC;KAC9B;;;;IAES,cAAc;;QACpB,MAAM,WAAW,GAAW,IAAI,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;;QAChG,MAAM,sBAAsB,GAAW,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;;QAC9E,MAAM,gBAAgB,GAAW,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;;QAE7E,MAAM,SAAS,GAAW,IAAI,CAAC,aAAa,EAAE,CAAC;;QAC/C,MAAM,cAAc,GAAa,SAAS,CAAC,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;;QAE7E,IAAI,eAAe,CAAkB;;QACrC,IAAI,SAAS,CAAS;;QACtB,IAAI,mBAAmB,CAAC;;QACxB,IAAI,aAAa,CAAC;;QAClB,IAAI,mBAAmB,CAAC;QACxB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;;YACxD,MAAM,aAAa,GAAW,cAAc,CAAC,KAAK,CAAC,CAAC;YAEpD,IAAI,aAAa,CAAC,UAAU,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAAE;;gBAC3D,MAAM,gBAAgB,GAAW,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;gBACpE,IAAI,gBAAgB,KAAK,kBAAkB,CAAC,eAAe,EAAE;oBACzD,eAAe,GAAG,EAAE,CAAC;oBACrB,SAAS,GAAG,SAAS,CAAC;oBACtB,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;oBAC/D,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;oBACzD,mBAAmB,GAAG,SAAS,CAAC;iBACnC;gBACD,SAAS;aACZ;iBAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,eAAe,CAAC,IAAI,aAAa,CAAC,UAAU,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE;gBAChH,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;aAC1D;iBAAM,IAAI,aAAa,CAAC,UAAU,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE;gBAC5D,mBAAmB,GAAG,KAAK,CAAC;aAC/B;iBAAM,IAAI,aAAa,KAAK,sBAAsB,IAAI,aAAa,KAAK,mBAAmB;mBACrF,aAAa,KAAK,gBAAgB,IAAI,aAAa,KAAK,aAAa,EAAE;gBAC1E,IAAI,CAAC,mBAAmB,EAAE;oBACtB,SAAS;iBACZ;;gBAED,MAAM,aAAa,GAAkB,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,mBAAmB,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC9G,IAAI,KAAK,CAAC,qBAAqB,CAAC,eAAe,CAAC,EAAE;oBAC9C,eAAe,CAAC,SAAS,CAAC,GAAG,aAAa,CAAC;iBAC9C;qBAAM;oBACH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;iBAC3C;gBAED,IAAI,aAAa,KAAK,sBAAsB,IAAI,aAAa,KAAK,mBAAmB,EAAE;oBACnF,mBAAmB,GAAG,KAAK,GAAG,CAAC,CAAC;iBACnC;qBAAM,IAAI,aAAa,KAAK,gBAAgB,IAAI,aAAa,KAAK,aAAa,EAAE;oBAC9E,IAAI,KAAK,CAAC,qBAAqB,CAAC,eAAe,CAAC,EAAE;wBAC9C,KAAK,MAAM,QAAQ,IAAI,eAAe,EAAE;4BACpC,IAAI,KAAK,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAAE;gCACvC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;6BACtC;yBACJ;qBACJ;oBACD,eAAe,GAAG,SAAS,CAAC;oBAC5B,mBAAmB,GAAG,SAAS,CAAC;oBAChC,aAAa,GAAG,SAAS,CAAC;oBAC1B,mBAAmB,GAAG,SAAS,CAAC;iBACnC;aACJ;SACJ;KACJ;;;;;IAES,cAAc,CAAC,MAAc;;QACnC,IAAI,GAAG,GAAW,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAC9C,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAC/B,OAAO,GAAG,CAAC;KACd;;;;;IAES,oBAAoB,CAAC,WAAmB;;QAC9C,MAAM,gBAAgB,GAAa,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1D,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;;YAC/B,MAAM,QAAQ,GAAW,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;;YAC1D,MAAM,iBAAiB,GAAW,kBAAkB,CAAC,sBAAsB,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACrG,OAAO,iBAAiB,CAAC;SAC5B;aAAM;YACH,OAAO,EAAE,CAAC;SACb;KACJ;;;;;IAES,cAAc,CAAC,iBAAyB;QAC9C,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;YAC3B,OAAO,EAAE,CAAC;SACb;;QACD,MAAM,WAAW,GAAW,iBAAiB,GAAG,kBAAkB,CAAC,sBAAsB,CAAC;QAC1F,OAAO,WAAW,CAAC;KACtB;;;;;;;IAES,mBAAmB,CAAC,cAAwB,EAAE,mBAA2B,EAAE,iBAAyB;;QAC1G,IAAI,KAAK,GAAW,mBAAmB,CAAC;;QACxC,MAAM,UAAU,GAAW,cAAc,CAAC,KAAK,CAAC,CAAC;;QACjD,MAAM,eAAe,GAAa,cAAc,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;QACnE,MAAM,MAAM,GAAW,eAAe,CAAC,CAAC,CAAC,CAAC;;QAC1C,MAAM,eAAe,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;;QACvE,MAAM,UAAU,GAAW,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;;QAEjE,IAAI,WAAW,GAAgB,IAAI,WAAW,EAAE,CAAC;QACjD,KAAK,EAAE,KAAK,EAAE,KAAK,IAAI,iBAAiB,EAAE,KAAK,EAAE,EAAE;;YAC/C,MAAM,aAAa,GAAW,cAAc,CAAC,KAAK,CAAC,CAAC;YAEpD,IAAI,aAAa,KAAK,EAAE,EAAE;gBACtB,MAAM;aACT;;YAED,MAAM,kBAAkB,GAAa,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC/D,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;SAChG;;QAED,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,OAAO,KAAK,IAAI,iBAAiB,EAAE,KAAK,EAAE,EAAE;YACxC,IAAI,IAAI,cAAc,CAAC,KAAK,CAAC,CAAC;SACjC;QAED,OAAO,IAAI,aAAa,CAAC,IAAI,YAAY,CAAC;YACtC,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,WAAW;YACpB,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC;YACtB,UAAU,EAAE,UAAU;SACzB,CAAC,CAAC,CAAC;KACP;;kCAzIsC,cAAc;gCAChB,YAAY;4BAChB,UAAU;4CACM,IAAI;6BACnB,MAAM;qCACE,iBAAiB;;;;;;;;;;;;;;;ICF3D,YACW,SACA,UAAsB,UAAU,EAChC,QACA,gBACA,eAAuB,MAAM,EAC7B;QALA,YAAO,GAAP,OAAO;QACP,YAAO,GAAP,OAAO;QACP,WAAM,GAAN,MAAM;QACN,mBAAc,GAAd,cAAc;QACd,iBAAY,GAAZ,YAAY;QACZ,oBAAe,GAAf,eAAe;KACrB;CACR;;;;;;ACjBD;;;;IAiBE,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;KAAK;;;;;;IAEzC,GAAG,CAAC,UAAsB,EAAE,WAA0B;;QACpD,MAAM,GAAG,GAAW,UAAU,CAAC,QAAQ,EAAE,CAAC;;QAC1C,MAAM,OAAO,GAAgB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QACjE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,CACrC,GAAG,CAAC,QAAQ,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KACjD;;;;;;;IAED,IAAI,CAAC,UAA8B,EAAE,IAAS,EAAE,WAA0B;;QACxE,MAAM,GAAG,GAAW,UAAU,CAAC,QAAQ,EAAE,CAAC;;QAC1C,MAAM,OAAO,GAAgB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QACjE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAC5C,GAAG,CAAC,QAAQ,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KACjD;;;;;;;;IAED,KAAK,CAAC,UAAsB,EAAE,IAAS,EAAE,IAAa,EAAE,WAA0B;;QAChF,MAAM,GAAG,GAAW,UAAU,CAAC,QAAQ,EAAE,CAAC;;QAC1C,IAAI,OAAO,GAAgB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QAC/D,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAC7C,GAAG,CAAC,QAAQ,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KACjD;;;;;;;;IAED,GAAG,CAAC,UAAsB,EAAE,IAAS,EAAE,IAAa,EAAE,WAA0B;;QAC9E,MAAM,GAAG,GAAW,UAAU,CAAC,QAAQ,EAAE,CAAC;;QAC1C,IAAI,OAAO,GAAgB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QAC/D,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAC3C,GAAG,CAAC,QAAQ,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KACjD;;;;;;;IAED,MAAM,CAAC,UAAsB,EAAE,IAAa,EAAE,WAA0B;;QACtE,MAAM,GAAG,GAAW,UAAU,CAAC,QAAQ,EAAE,CAAC;;QAC1C,IAAI,OAAO,GAAgB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QAC/D,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,CACxC,GAAG,CAAC,QAAQ,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KACjD;;;;;IAES,iBAAiB,CAAC,WAAyB;QACnD,IAAI,WAAW,YAAY,WAAW,EAAE;YACtC,OAAO,WAAW,CAAC;SACpB;QACD,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,WAAW,EAAE,EAAE,WAAW,CAAC,CAAC;KACtD;;;;;;IAES,SAAS,CAAC,WAAwB,EAAE,IAAY;QACxD,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;YACjC,OAAO,WAAW,CAAC;SACpB;QACD,IAAI,KAAK,CAAC,iBAAiB,CAAC,WAAW,CAAC,EAAE;YACxC,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;SACjC;QACD,IAAI,KAAK,CAAC,iBAAiB,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;YAChD,WAAW,CAAC,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;SACzC;QAED,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC;QAEzD,OAAO,WAAW,CAAC;KACpB;;+BA/DyC,UAAU;;YAFrD,UAAU;;;;YAVF,UAAU;;;;;;;;;;ACJnB;CAGC;;;;;;ACHD;;;AAEA;;;;IAGI,YAAY,QAAgB;QACxB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KAC9B;;;;;IAED,WAAW,CAAC,QAAgB;QACxB,KAAK,CAAC,0BAA0B,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;;;;IAED,WAAW;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;CACJ;;;;;;ACjBD,sBAM8B,SAAQ,iBAAiB;;;;;;IAInD,YAAY,QAAgB,EAAE,QAA4B,EAAE,KAA+C;QACvG,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChB,KAAK,CAAC,0BAA0B,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACvD,KAAK,CAAC,0BAA0B,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACvD,KAAK,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;IAED,QAAQ;QACJ,OAAO,GAAG,IAAI,CAAC,QAAQ,IAAI,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC;KACxH;;;;IAED,OAAO;QACH,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM;eAChE,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC;eACtC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,YAAY,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,KAAK,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAC9J;CACJ;;;;;;AC5BD,oBAK4B,SAAQ,iBAAiB;;;;;;IAIjD,YAAY,YAAoB,EAAE,QAAgB,EAAE,KAAgD;QAChG,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChB,KAAK,CAAC,0BAA0B,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QAC/D,KAAK,CAAC,eAAe,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QACpD,KAAK,CAAC,0BAA0B,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACvD,KAAK,CAAC,eAAe,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;IAED,QAAQ;QACJ,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACvF,OAAO,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC;SAC3F;aAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACnD,OAAO,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC;SACnD;aAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAChD,OAAO,GAAG,IAAI,CAAC,YAAY,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC;SAC1E;aAAM;YACH,OAAO,GAAG,IAAI,CAAC,YAAY,IAAI,CAAC;SACnC;KACJ;;;;IAED,OAAO;QACH,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC;eACnC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACxC,OAAO,IAAI,CAAC;SACf;QACD,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC;eACnC,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACzE,OAAO,IAAI,CAAC;SACf;QACD,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC;eAChC,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACxE,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;KAChB;CACJ;0BAEiC,SAAQ,cAAc;;;;;;IACpD,YAAY,YAAoB,EAAE,QAAiB,EAAE,KAA8C;QAC/F,KAAK,CAAC,YAAY,EAAE,QAAQ,EAAE,QAAQ,KAAK,CAAC,KAAK,QAAQ;cACnD,IAAI,YAAY,CAAC,KAAK,CAAC;cACvB,KAAK,YAAY,oBAAoB,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,KAAK,CAAC,CAAC;KAC3E;CACJ;AAED,oBAA4B,SAAQ,oBAAoB;;;;;IACpD,YAAY,QAAgB,EAAE,KAAoC;QAC9D,KAAK,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QACnC,KAAK,CAAC,0BAA0B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACzC;CACJ;AAED,oBAA4B,SAAQ,oBAAoB;;;;;IACpD,YAAY,QAAgB,EAAE,KAAoC;QAC9D,KAAK,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QACnC,KAAK,CAAC,0BAA0B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACzC;CACJ;AAED,sBAA8B,SAAQ,oBAAoB;;;;;IACtD,YAAY,QAAgB,EAAE,KAAoC;QAC9D,KAAK,CAAC,YAAY,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QACrC,KAAK,CAAC,0BAA0B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACzC;CACJ;AAED,kBAA0B,SAAQ,oBAAoB;;;;IAClD,YAAY,QAAgB;QACxB,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;KAC7B;CACJ;AAED,mBAA2B,SAAQ,oBAAoB;;;;;IACnD,YAAY,QAAgB,EAAE,KAAoC;QAC9D,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QAClC,KAAK,CAAC,0BAA0B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACzC;CACJ;AAED,qBAA6B,SAAQ,oBAAoB;;;;;IACrD,YAAY,QAAgB,EAAE,KAAa;QACvC,KAAK,CAAC,WAAW,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QACpC,KAAK,CAAC,0BAA0B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACzC;CACJ;AAED,mBAA2B,SAAQ,oBAAoB;;;;IACnD,YAAY,QAAgB;QACxB,KAAK,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;KAC9B;CACJ;AAED,mBAA2B,SAAQ,oBAAoB;;;;IACnD,YAAY,QAAgB;QACxB,KAAK,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;KAC9B;CACJ;AAED,gBAAwB,SAAQ,oBAAoB;;;;IAChD,YAAY,QAAgB;QACxB,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;KAC3B;CACJ;AAED,kBAA0B,SAAQ,oBAAoB;;;;;IAClD,YAAY,QAAgB,EAAE,KAAoC;QAC9D,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QACjC,KAAK,CAAC,0BAA0B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACzC;CACJ;;;;;;;;;AC7HD;;;;IAGI,YAAY,MAAyB;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;;;;IAED,SAAS;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;CACJ;;;;;;ACZD;;IAMI,MAAG,EAAE,MAAG;;8BAAR,GAAG;8BAAE,GAAG;;;IAIR,sBAAmB,EAAE,aAAU;;kCAA/B,mBAAmB;kCAAE,UAAU;AAGnC,kBAA0B,SAAQ,eAAe;;;;;;;IAK7C,YAAY,gBAAkC,EAAE,mBAA2B,EAAE,cAA8B,EAAE,MAAc;QACvH,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,KAAK,CAAC,0BAA0B,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;QACvE,KAAK,CAAC,0BAA0B,CAAC,mBAAmB,EAAE,qBAAqB,CAAC,CAAC;QAC7E,KAAK,CAAC,0BAA0B,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QACnE,KAAK,CAAC,0BAA0B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACnD,IAAI,gBAAgB,KAAK,gBAAgB,CAAC,mBAAmB,EAAE;YAC3D,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;SACnD;QACD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAC/C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;KACxC;;;;IAED,QAAQ;QACJ,QAAQ,IAAI,CAAC,gBAAgB;YACzB,KAAK,gBAAgB,CAAC,mBAAmB;gBACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAClC,OAAO,GAAG,IAAI,CAAC,mBAAmB,IAAI,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC;YAC3H,KAAK,gBAAgB,CAAC,UAAU;gBAC5B,OAAO,GAAG,IAAI,CAAC,mBAAmB,IAAI,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC;YAC7H;gBACI,MAAM,IAAI,KAAK,CAAC,4BAA4B,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC7E;KACJ;;;;IAED,OAAO;QACH,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC;eAC3C,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC;eACjD,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC;eAC5C,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,IAAI,CAAC;SACf;QACD,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC;eAC9C,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC3E,OAAO,IAAI,CAAC;SACf;QACD,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC;eACjC,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE;YAC9F,OAAO,IAAI,CAAC;SACf;QACD,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM;eACtF,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC3E,OAAO,IAAI,CAAC;SACf;QAED,OAAO,KAAK,CAAC;KAChB;;;;;;IAES,aAAa,CAAC,mBAA2B,EAAE,MAAyB;QAC1E,IAAI,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE;YACjC,OAAO;SACV;QACD,IAAI,MAAM,YAAY,iBAAiB,EAAE;YACrC,IAAI,mBAAmB,KAAK,MAAM,CAAC,WAAW,EAAE,EAAE;gBAC9C,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;aAClF;SACJ;QACD,IAAI,MAAM,YAAY,eAAe,EAAE;;YACnC,MAAM,WAAW,GAAsB,MAAM,CAAC,SAAS,EAAE,CAAC;YAC1D,IAAI,WAAW,YAAY,MAAM,EAAE;gBAC/B,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;aACrC;iBAAM;gBACH,KAAK,MAAM,CAAC,IAAI,WAAW,EAAE;oBACzB,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;iBAC3B;aACJ;SACJ;KACJ;;;;;IAES,eAAe,CAAC,MAAyB;QAC/C,IAAI,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE;YACjC,OAAO;SACV;QACD,IAAI,MAAM,YAAY,iBAAiB,EAAE;YACrC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;SAC3B;QACD,IAAI,MAAM,YAAY,eAAe,EAAE;;YACnC,MAAM,WAAW,GAAsB,MAAM,CAAC,SAAS,EAAE,CAAC;YAC1D,IAAI,WAAW,YAAY,MAAM,EAAE;gBAC/B,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;aACrC;iBAAM;gBACH,KAAK,MAAM,CAAC,IAAI,WAAW,EAAE;oBACzB,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;iBAC3B;aACJ;SACJ;KACJ;CACJ;;;;;;AC1GD,mBAK2B,SAAQ,eAAe;;;;;IAG9C,YAAY,OAAiB,EAAE,QAAyB;QACpD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,0BAA0B,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACrD,KAAK,CAAC,eAAe,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC1C,KAAK,CAAC,0BAA0B,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;;;;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,MAAM,YAAY,KAAK,EAAE;YAC9B,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACrD;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;KACjC;;;;IAED,OAAO;QACH,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACtC,OAAO,IAAI,CAAC;SACf;QACD,KAAK,MAAM,MAAM,sBAAc,IAAI,CAAC,MAAM,GAAE;YACxC,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;gBAClB,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;KAChB;CACJ;;;;;;;;;AClCD;CAGC;;;;;;ACHD,mBAI2B,SAAQ,MAAM;;;;;IACrC,YAAoB,MAAgB,EAAU,QAAyB;QACnE,KAAK,EAAE,CAAC;QADQ,WAAM,GAAN,MAAM,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAEnE,KAAK,CAAC,0BAA0B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACnD,KAAK,CAAC,0BAA0B,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACvD,KAAK,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAExC,IAAI,QAAQ,KAAK,eAAe,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACzD,MAAM,IAAI,KAAK,CAAC,WAAW,GAAG,eAAe,CAAC,QAAQ,CAAC,GAAG,0BAA0B,CAAC,CAAC;SACzF;KACJ;;;;IAED,QAAQ;QACJ,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KAC3D;;;;IAED,OAAO;QACH,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACtC,OAAO,IAAI,CAAC;SACf;QACD,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;YAC7B,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE;gBACjB,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;KAChB;CACJ;;;;;;AC/BD,kBAG0B,SAAQ,MAAM;;;;IACpC,YAAsB,KAAa;QAC/B,KAAK,EAAE,CAAC;QADU,UAAK,GAAL,KAAK,CAAQ;QAE/B,KAAK,CAAC,0BAA0B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACzC;;;;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;;;IAED,OAAO;QACH,OAAO,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;KACpE;CACJ;;;;;;ACjBD,kBAE0B,SAAQ,YAAY;;;;IAC1C,QAAQ;QACJ,OAAO,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;KAC5B;CACJ;;;;;;ACND;;;YAKC,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,gBAAgB;iBACjB;gBACD,SAAS,EAAE,CAAC,YAAY,CAAC;aAC1B;;;;;;;;;;;;;;;"}
