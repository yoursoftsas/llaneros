/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Utils } from '../utils/utils';
/**
 * @abstract
 */
var /**
 * @abstract
 */
ODataResponseAbstract = /** @class */ (function () {
    function ODataResponseAbstract(httpResponse) {
        this.httpResponse = httpResponse;
    }
    /**
     * @return {?}
     */
    ODataResponseAbstract.prototype.getHttpResponse = /**
     * @return {?}
     */
    function () {
        return this.httpResponse;
    };
    /**
     * @return {?}
     */
    ODataResponseAbstract.prototype.isOk = /**
     * @return {?}
     */
    function () {
        return this.httpResponse.ok;
    };
    /**
     * @return {?}
     */
    ODataResponseAbstract.prototype.getBodyAsJson = /**
     * @return {?}
     */
    function () {
        return null;
    };
    /**
     * @return {?}
     */
    ODataResponseAbstract.prototype.getBodyAsText = /**
     * @return {?}
     */
    function () {
        return this.httpResponse.body;
    };
    /**
     * @return {?}
     */
    ODataResponseAbstract.prototype.toString = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var res = this.httpResponse.status + " " + this.httpResponse.statusText + "\n";
        /** @type {?} */
        var headers = this.httpResponse.headers;
        try {
            for (var _a = tslib_1.__values(headers.keys()), _b = _a.next(); !_b.done; _b = _a.next()) {
                var key = _b.value;
                res += key + ': ';
                /** @type {?} */
                var valueString = '';
                try {
                    for (var _c = tslib_1.__values(headers.getAll(key)), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var value = _d.value;
                        if (valueString.length) {
                            valueString += ' ';
                        }
                        valueString += value;
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_e = _c.return)) _e.call(_c);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                res += valueString + '\n';
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_b && !_b.done && (_f = _a.return)) _f.call(_a);
            }
            finally { if (e_2) throw e_2.error; }
        }
        /** @type {?} */
        var json = this.getBodyAsJson();
        if (Utils.isNotNullNorUndefined(json)) {
            res += JSON.stringify(json, null, 4);
        }
        else {
            res += this.getBodyAsText();
        }
        return res;
        var e_2, _f, e_1, _e;
    };
    return ODataResponseAbstract;
}());
/**
 * @abstract
 */
export { ODataResponseAbstract };
if (false) {
    /** @type {?} */
    ODataResponseAbstract.prototype.httpResponse;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2RhdGEtcmVzcG9uc2UtYWJzdHJhY3QuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vZGF0YS12NC1uZy8iLCJzb3VyY2VzIjpbImxpYi9vZGF0YS1yZXNwb25zZS9vZGF0YS1yZXNwb25zZS1hYnN0cmFjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQUV2Qzs7O0FBQUE7SUFHSSwrQkFBWSxZQUFrQztRQUMxQyxJQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztLQUNwQzs7OztJQUVELCtDQUFlOzs7SUFBZjtRQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO0tBQzVCOzs7O0lBRUQsb0NBQUk7OztJQUFKO1FBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDO0tBQy9COzs7O0lBRUQsNkNBQWE7OztJQUFiO1FBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQztLQUNmOzs7O0lBRUQsNkNBQWE7OztJQUFiO1FBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDO0tBQ2pDOzs7O0lBRUQsd0NBQVE7OztJQUFSOztRQUNJLElBQUksR0FBRyxHQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxTQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxPQUFJLENBQUM7O1FBRTFFLElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDOztZQUMxQyxHQUFHLENBQUMsQ0FBYyxJQUFBLEtBQUEsaUJBQUEsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFBLGdCQUFBO2dCQUEzQixJQUFNLEdBQUcsV0FBQTtnQkFDVixHQUFHLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQzs7Z0JBQ2xCLElBQUksV0FBVyxHQUFHLEVBQUUsQ0FBQzs7b0JBQ3JCLEdBQUcsQ0FBQyxDQUFnQixJQUFBLEtBQUEsaUJBQUEsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQSxnQkFBQTt3QkFBbEMsSUFBTSxLQUFLLFdBQUE7d0JBQ1osRUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7NEJBQ3JCLFdBQVcsSUFBSSxHQUFHLENBQUM7eUJBQ3RCO3dCQUNELFdBQVcsSUFBSSxLQUFLLENBQUM7cUJBQ3hCOzs7Ozs7Ozs7Z0JBQ0QsR0FBRyxJQUFJLFdBQVcsR0FBRyxJQUFJLENBQUM7YUFDN0I7Ozs7Ozs7Ozs7UUFFRCxJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDbEMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQyxHQUFHLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ3hDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixHQUFHLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1NBQy9CO1FBQ0QsTUFBTSxDQUFDLEdBQUcsQ0FBQzs7S0FDZDtnQ0FsREw7SUFtREMsQ0FBQTs7OztBQS9DRCxpQ0ErQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5cbmltcG9ydCB7IFV0aWxzIH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgT0RhdGFSZXNwb25zZUFic3RyYWN0IHtcbiAgICBwcml2YXRlIGh0dHBSZXNwb25zZTogSHR0cFJlc3BvbnNlPHN0cmluZz47XG5cbiAgICBjb25zdHJ1Y3RvcihodHRwUmVzcG9uc2U6IEh0dHBSZXNwb25zZTxzdHJpbmc+KSB7XG4gICAgICAgIHRoaXMuaHR0cFJlc3BvbnNlID0gaHR0cFJlc3BvbnNlO1xuICAgIH1cblxuICAgIGdldEh0dHBSZXNwb25zZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cFJlc3BvbnNlO1xuICAgIH1cblxuICAgIGlzT2soKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmh0dHBSZXNwb25zZS5vaztcbiAgICB9XG5cbiAgICBnZXRCb2R5QXNKc29uKCk6IGFueSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGdldEJvZHlBc1RleHQoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cFJlc3BvbnNlLmJvZHk7XG4gICAgfVxuXG4gICAgdG9TdHJpbmcoKTogc3RyaW5nIHtcbiAgICAgICAgbGV0IHJlcyA9IGAke3RoaXMuaHR0cFJlc3BvbnNlLnN0YXR1c30gJHt0aGlzLmh0dHBSZXNwb25zZS5zdGF0dXNUZXh0fVxcbmA7XG5cbiAgICAgICAgY29uc3QgaGVhZGVycyA9IHRoaXMuaHR0cFJlc3BvbnNlLmhlYWRlcnM7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIGhlYWRlcnMua2V5cygpKSB7XG4gICAgICAgICAgICByZXMgKz0ga2V5ICsgJzogJztcbiAgICAgICAgICAgIGxldCB2YWx1ZVN0cmluZyA9ICcnO1xuICAgICAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiBoZWFkZXJzLmdldEFsbChrZXkpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlU3RyaW5nLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZVN0cmluZyArPSAnICc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhbHVlU3RyaW5nICs9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVzICs9IHZhbHVlU3RyaW5nICsgJ1xcbic7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBqc29uID0gdGhpcy5nZXRCb2R5QXNKc29uKCk7XG4gICAgICAgIGlmIChVdGlscy5pc05vdE51bGxOb3JVbmRlZmluZWQoanNvbikpIHtcbiAgICAgICAgICAgIHJlcyArPSBKU09OLnN0cmluZ2lmeShqc29uLCBudWxsLCA0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlcyArPSB0aGlzLmdldEJvZHlBc1RleHQoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbn1cbiJdfQ==