/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
var CsdlStructuredType = /** @class */ (function () {
    function CsdlStructuredType(name, properties, navigationProperties, baseType, openType, abstract) {
        this.name = name;
        this.properties = properties;
        this.navigationProperties = navigationProperties;
        this.baseType = baseType;
        this.openType = openType;
        this.abstract = abstract;
    }
    return CsdlStructuredType;
}());
export { CsdlStructuredType };
if (false) {
    /** @type {?} */
    CsdlStructuredType.prototype.name;
    /** @type {?} */
    CsdlStructuredType.prototype.properties;
    /** @type {?} */
    CsdlStructuredType.prototype.navigationProperties;
    /** @type {?} */
    CsdlStructuredType.prototype.baseType;
    /** @type {?} */
    CsdlStructuredType.prototype.openType;
    /** @type {?} */
    CsdlStructuredType.prototype.abstract;
}
var CsdlComplexType = /** @class */ (function (_super) {
    tslib_1.__extends(CsdlComplexType, _super);
    function CsdlComplexType(name, properties, navigationProperties, baseType, openType, abstract) {
        return _super.call(this, name, properties, navigationProperties, baseType, openType, abstract) || this;
    }
    return CsdlComplexType;
}(CsdlStructuredType));
export { CsdlComplexType };
var CsdlEntityType = /** @class */ (function (_super) {
    tslib_1.__extends(CsdlEntityType, _super);
    function CsdlEntityType(name, key, properties, navigationProperties, baseType, openType, abstract, hasStream) {
        var _this = _super.call(this, name, properties, navigationProperties, baseType, openType, abstract) || this;
        _this.key = key;
        _this.hasStream = hasStream;
        return _this;
    }
    return CsdlEntityType;
}(CsdlStructuredType));
export { CsdlEntityType };
if (false) {
    /** @type {?} */
    CsdlEntityType.prototype.key;
    /** @type {?} */
    CsdlEntityType.prototype.hasStream;
}
var CsdlKey = /** @class */ (function () {
    function CsdlKey(propertyRefs) {
        this.propertyRefs = propertyRefs;
    }
    return CsdlKey;
}());
export { CsdlKey };
if (false) {
    /** @type {?} */
    CsdlKey.prototype.propertyRefs;
}
var CsdlPropertyRef = /** @class */ (function () {
    function CsdlPropertyRef(name, alias) {
        this.name = name;
        this.alias = alias;
    }
    return CsdlPropertyRef;
}());
export { CsdlPropertyRef };
if (false) {
    /** @type {?} */
    CsdlPropertyRef.prototype.name;
    /** @type {?} */
    CsdlPropertyRef.prototype.alias;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NkbC1zdHJ1Y3R1cmVkLXR5cGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vZGF0YS12NC1uZy8iLCJzb3VyY2VzIjpbImxpYi9vZGF0YS1yZXNwb25zZS9jc2RsL2NzZGwtc3RydWN0dXJlZC10eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBRUEsSUFBQTtJQUNJLDRCQUNXLE1BQ0EsWUFDQSxzQkFDQSxVQUNBLFVBQ0E7UUFMQSxTQUFJLEdBQUosSUFBSTtRQUNKLGVBQVUsR0FBVixVQUFVO1FBQ1YseUJBQW9CLEdBQXBCLG9CQUFvQjtRQUNwQixhQUFRLEdBQVIsUUFBUTtRQUNSLGFBQVEsR0FBUixRQUFRO1FBQ1IsYUFBUSxHQUFSLFFBQVE7S0FDZDs2QkFWVDtJQVdDLENBQUE7QUFURCw4QkFTQzs7Ozs7Ozs7Ozs7Ozs7O0FBRUQsSUFBQTtJQUFxQywyQ0FBa0I7SUFDbkQseUJBQ0ksSUFBWSxFQUNaLFVBQTJCLEVBQzNCLG9CQUErQyxFQUMvQyxRQUFpQixFQUNqQixRQUFrQixFQUNsQixRQUFrQjtlQUVsQixrQkFBTSxJQUFJLEVBQUUsVUFBVSxFQUFFLG9CQUFvQixFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxDQUFDO0tBQzlFOzBCQXZCTDtFQWFxQyxrQkFBa0IsRUFXdEQsQ0FBQTtBQVhELDJCQVdDO0FBRUQsSUFBQTtJQUFvQywwQ0FBa0I7SUFDbEQsd0JBQ0ksSUFBWSxFQUNMLEtBQ1AsVUFBMkIsRUFDM0Isb0JBQStDLEVBQy9DLFFBQWlCLEVBQ2pCLFFBQWtCLEVBQ2xCLFFBQWtCLEVBQ1g7UUFSWCxZQVVJLGtCQUFNLElBQUksRUFBRSxVQUFVLEVBQUUsb0JBQW9CLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLENBQUMsU0FDOUU7UUFUVSxTQUFHLEdBQUgsR0FBRztRQU1ILGVBQVMsR0FBVCxTQUFTOztLQUduQjt5QkF0Q0w7RUEwQm9DLGtCQUFrQixFQWFyRCxDQUFBO0FBYkQsMEJBYUM7Ozs7Ozs7QUFFRCxJQUFBO0lBQ0ksaUJBQ1c7UUFBQSxpQkFBWSxHQUFaLFlBQVk7S0FDbEI7a0JBNUNUO0lBNkNDLENBQUE7QUFKRCxtQkFJQzs7Ozs7QUFFRCxJQUFBO0lBQ0kseUJBQ1csTUFDQTtRQURBLFNBQUksR0FBSixJQUFJO1FBQ0osVUFBSyxHQUFMLEtBQUs7S0FDWDswQkFuRFQ7SUFvREMsQ0FBQTtBQUxELDJCQUtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3NkbFByb3BlcnR5LCBDc2RsTmF2aWdhdGlvblByb3BlcnR5IH0gZnJvbSAnLi9jc2RsLXN0cnVjdHVyYWwtcHJvcGVydHknO1xuXG5leHBvcnQgY2xhc3MgQ3NkbFN0cnVjdHVyZWRUeXBlIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHVibGljIG5hbWU6IHN0cmluZyxcbiAgICAgICAgcHVibGljIHByb3BlcnRpZXM/OiBDc2RsUHJvcGVydHlbXSxcbiAgICAgICAgcHVibGljIG5hdmlnYXRpb25Qcm9wZXJ0aWVzPzogQ3NkbE5hdmlnYXRpb25Qcm9wZXJ0eVtdLFxuICAgICAgICBwdWJsaWMgYmFzZVR5cGU/OiBzdHJpbmcsXG4gICAgICAgIHB1YmxpYyBvcGVuVHlwZT86IGJvb2xlYW4sXG4gICAgICAgIHB1YmxpYyBhYnN0cmFjdD86IGJvb2xlYW5cbiAgICApIHsgfVxufVxuXG5leHBvcnQgY2xhc3MgQ3NkbENvbXBsZXhUeXBlIGV4dGVuZHMgQ3NkbFN0cnVjdHVyZWRUeXBlIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgbmFtZTogc3RyaW5nLFxuICAgICAgICBwcm9wZXJ0aWVzPzogQ3NkbFByb3BlcnR5W10sXG4gICAgICAgIG5hdmlnYXRpb25Qcm9wZXJ0aWVzPzogQ3NkbE5hdmlnYXRpb25Qcm9wZXJ0eVtdLFxuICAgICAgICBiYXNlVHlwZT86IHN0cmluZyxcbiAgICAgICAgb3BlblR5cGU/OiBib29sZWFuLFxuICAgICAgICBhYnN0cmFjdD86IGJvb2xlYW5cbiAgICApIHtcbiAgICAgICAgc3VwZXIobmFtZSwgcHJvcGVydGllcywgbmF2aWdhdGlvblByb3BlcnRpZXMsIGJhc2VUeXBlLCBvcGVuVHlwZSwgYWJzdHJhY3QpO1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIENzZGxFbnRpdHlUeXBlIGV4dGVuZHMgQ3NkbFN0cnVjdHVyZWRUeXBlIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgbmFtZTogc3RyaW5nLFxuICAgICAgICBwdWJsaWMga2V5PzogQ3NkbEtleSxcbiAgICAgICAgcHJvcGVydGllcz86IENzZGxQcm9wZXJ0eVtdLFxuICAgICAgICBuYXZpZ2F0aW9uUHJvcGVydGllcz86IENzZGxOYXZpZ2F0aW9uUHJvcGVydHlbXSxcbiAgICAgICAgYmFzZVR5cGU/OiBzdHJpbmcsXG4gICAgICAgIG9wZW5UeXBlPzogYm9vbGVhbixcbiAgICAgICAgYWJzdHJhY3Q/OiBib29sZWFuLFxuICAgICAgICBwdWJsaWMgaGFzU3RyZWFtPzogYm9vbGVhblxuICAgICkge1xuICAgICAgICBzdXBlcihuYW1lLCBwcm9wZXJ0aWVzLCBuYXZpZ2F0aW9uUHJvcGVydGllcywgYmFzZVR5cGUsIG9wZW5UeXBlLCBhYnN0cmFjdCk7XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ3NkbEtleSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyBwcm9wZXJ0eVJlZnM6IENzZGxQcm9wZXJ0eVJlZltdLFxuICAgICkgeyB9XG59XG5cbmV4cG9ydCBjbGFzcyBDc2RsUHJvcGVydHlSZWYge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwdWJsaWMgbmFtZTogc3RyaW5nLFxuICAgICAgICBwdWJsaWMgYWxpYXM/OiBzdHJpbmdcbiAgICApIHsgfVxufVxuIl19