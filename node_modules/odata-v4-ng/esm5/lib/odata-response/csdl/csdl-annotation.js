/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
var CsdlAnnotable = /** @class */ (function () {
    function CsdlAnnotable(annotationList) {
        this.annotationList = annotationList;
    }
    return CsdlAnnotable;
}());
export { CsdlAnnotable };
if (false) {
    /** @type {?} */
    CsdlAnnotable.prototype.annotationList;
}
var CsdlAnnotations = /** @class */ (function (_super) {
    tslib_1.__extends(CsdlAnnotations, _super);
    function CsdlAnnotations(target, annotationList, qualifier) {
        var _this = _super.call(this, annotationList) || this;
        _this.target = target;
        _this.qualifier = qualifier;
        return _this;
    }
    return CsdlAnnotations;
}(CsdlAnnotable));
export { CsdlAnnotations };
if (false) {
    /** @type {?} */
    CsdlAnnotations.prototype.target;
    /** @type {?} */
    CsdlAnnotations.prototype.qualifier;
}
var CsdlAnnotation = /** @class */ (function () {
    function CsdlAnnotation(term, qualifier) {
        this.term = term;
        this.qualifier = qualifier;
    }
    return CsdlAnnotation;
}());
export { CsdlAnnotation };
if (false) {
    /** @type {?} */
    CsdlAnnotation.prototype.term;
    /** @type {?} */
    CsdlAnnotation.prototype.qualifier;
}
var CsdlTerm = /** @class */ (function () {
    function CsdlTerm(name, type, baseTerm, defaultValue, appliesTo, nullable, maxLength, precision, scale, srid) {
        this.name = name;
        this.type = type;
        this.baseTerm = baseTerm;
        this.defaultValue = defaultValue;
        this.appliesTo = appliesTo;
        this.nullable = nullable;
        this.maxLength = maxLength;
        this.precision = precision;
        this.scale = scale;
        this.srid = srid;
    }
    return CsdlTerm;
}());
export { CsdlTerm };
if (false) {
    /** @type {?} */
    CsdlTerm.prototype.name;
    /** @type {?} */
    CsdlTerm.prototype.type;
    /** @type {?} */
    CsdlTerm.prototype.baseTerm;
    /** @type {?} */
    CsdlTerm.prototype.defaultValue;
    /** @type {?} */
    CsdlTerm.prototype.appliesTo;
    /** @type {?} */
    CsdlTerm.prototype.nullable;
    /** @type {?} */
    CsdlTerm.prototype.maxLength;
    /** @type {?} */
    CsdlTerm.prototype.precision;
    /** @type {?} */
    CsdlTerm.prototype.scale;
    /** @type {?} */
    CsdlTerm.prototype.srid;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NkbC1hbm5vdGF0aW9uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vb2RhdGEtdjQtbmcvIiwic291cmNlcyI6WyJsaWIvb2RhdGEtcmVzcG9uc2UvY3NkbC9jc2RsLWFubm90YXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFBO0lBQ0ksdUJBQW1CLGNBQWlDO1FBQWpDLG1CQUFjLEdBQWQsY0FBYyxDQUFtQjtLQUFLO3dCQUQ3RDtJQUVDLENBQUE7QUFGRCx5QkFFQzs7Ozs7QUFFRCxJQUFBO0lBQXFDLDJDQUFhO0lBQzlDLHlCQUNXLFFBQ1AsY0FBZ0MsRUFDekI7UUFIWCxZQUtJLGtCQUFNLGNBQWMsQ0FBQyxTQUN4QjtRQUxVLFlBQU0sR0FBTixNQUFNO1FBRU4sZUFBUyxHQUFULFNBQVM7O0tBR25COzBCQVhMO0VBSXFDLGFBQWEsRUFRakQsQ0FBQTtBQVJELDJCQVFDOzs7Ozs7O0FBRUQsSUFBQTtJQUNJLHdCQUNXLE1BQ0E7UUFEQSxTQUFJLEdBQUosSUFBSTtRQUNKLGNBQVMsR0FBVCxTQUFTO0tBQ2Y7eUJBbEJUO0lBbUJDLENBQUE7QUFMRCwwQkFLQzs7Ozs7OztBQUVELElBQUE7SUFDSSxrQkFDVyxNQUNBLE1BQ0EsVUFDQSxjQUNBLFdBQ0EsVUFDQSxXQUNBLFdBQ0EsT0FDQTtRQVRBLFNBQUksR0FBSixJQUFJO1FBQ0osU0FBSSxHQUFKLElBQUk7UUFDSixhQUFRLEdBQVIsUUFBUTtRQUNSLGlCQUFZLEdBQVosWUFBWTtRQUNaLGNBQVMsR0FBVCxTQUFTO1FBQ1QsYUFBUSxHQUFSLFFBQVE7UUFDUixjQUFTLEdBQVQsU0FBUztRQUNULGNBQVMsR0FBVCxTQUFTO1FBQ1QsVUFBSyxHQUFMLEtBQUs7UUFDTCxTQUFJLEdBQUosSUFBSTtLQUNWO21CQWpDVDtJQWtDQyxDQUFBO0FBYkQsb0JBYUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQ3NkbEFubm90YWJsZSB7XG4gICAgY29uc3RydWN0b3IocHVibGljIGFubm90YXRpb25MaXN0PzogQ3NkbEFubm90YXRpb25bXSkgeyB9XG59XG5cbmV4cG9ydCBjbGFzcyBDc2RsQW5ub3RhdGlvbnMgZXh0ZW5kcyBDc2RsQW5ub3RhYmxlIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHVibGljIHRhcmdldDogc3RyaW5nLFxuICAgICAgICBhbm5vdGF0aW9uTGlzdDogQ3NkbEFubm90YXRpb25bXSxcbiAgICAgICAgcHVibGljIHF1YWxpZmllcj86IHN0cmluZ1xuICAgICkge1xuICAgICAgICBzdXBlcihhbm5vdGF0aW9uTGlzdCk7XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ3NkbEFubm90YXRpb24ge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwdWJsaWMgdGVybTogc3RyaW5nLFxuICAgICAgICBwdWJsaWMgcXVhbGlmaWVyPzogc3RyaW5nXG4gICAgKSB7IH1cbn1cblxuZXhwb3J0IGNsYXNzIENzZGxUZXJtIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHVibGljIG5hbWU6IHN0cmluZyxcbiAgICAgICAgcHVibGljIHR5cGU6IHN0cmluZyxcbiAgICAgICAgcHVibGljIGJhc2VUZXJtPzogc3RyaW5nLFxuICAgICAgICBwdWJsaWMgZGVmYXVsdFZhbHVlPzogc3RyaW5nLFxuICAgICAgICBwdWJsaWMgYXBwbGllc1RvPzogc3RyaW5nLFxuICAgICAgICBwdWJsaWMgbnVsbGFibGU/OiBib29sZWFuLFxuICAgICAgICBwdWJsaWMgbWF4TGVuZ3RoPzogbnVtYmVyLFxuICAgICAgICBwdWJsaWMgcHJlY2lzaW9uPzogbnVtYmVyLFxuICAgICAgICBwdWJsaWMgc2NhbGU/OiBudW1iZXIsXG4gICAgICAgIHB1YmxpYyBzcmlkPzogc3RyaW5nXG4gICAgKSB7IH1cbn1cbiJdfQ==