{"version":3,"file":"odata-v4-ng.umd.js.map","sources":[null,"ng://odata-v4-ng/lib/query-options/operator.ts","ng://odata-v4-ng/lib/odata-query/quoted-string.ts","ng://odata-v4-ng/lib/utils/utils.ts","ng://odata-v4-ng/lib/odata-query/odata-query-abstract.ts","ng://odata-v4-ng/lib/odata-query/odata-query-batch.ts","ng://odata-v4-ng/lib/query-options/filter/filter-string.ts","ng://odata-v4-ng/lib/query-options/expand.ts","ng://odata-v4-ng/lib/query-options/orderby.ts","ng://odata-v4-ng/lib/query-options/query-options.ts","ng://odata-v4-ng/lib/odata-query/odata-query.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-annotation.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-entity-container.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-entity-set.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-enum-type.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-function-action.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-navigation-property-binding.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-reference.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-schema.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-singleton.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-structural-property.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-structured-type.ts","ng://odata-v4-ng/lib/odata-response/csdl/csdl-type-definition.ts","ng://odata-v4-ng/lib/odata-response/entity-collection.ts","ng://odata-v4-ng/lib/odata-response/metadata.ts","ng://odata-v4-ng/lib/odata-response/odata-response-abstract.ts","ng://odata-v4-ng/lib/odata-response/odata-response.ts","ng://odata-v4-ng/lib/odata-response/odata-response-batch.ts","ng://odata-v4-ng/lib/odata-service/http-options.ts","ng://odata-v4-ng/lib/odata-service/odata.service.ts","ng://odata-v4-ng/lib/query-options/filter/filter.ts","ng://odata-v4-ng/lib/query-options/filter/filter-has-property.ts","ng://odata-v4-ng/lib/query-options/filter/filter-comparison.ts","ng://odata-v4-ng/lib/query-options/filter/filter-function.ts","ng://odata-v4-ng/lib/query-options/filter/filter-has-filter.ts","ng://odata-v4-ng/lib/query-options/filter/filter-lambda.ts","ng://odata-v4-ng/lib/query-options/filter/filter-logical.ts","ng://odata-v4-ng/lib/query-options/search/search.ts","ng://odata-v4-ng/lib/query-options/search/search-logical.ts","ng://odata-v4-ng/lib/query-options/search/search-simple.ts","ng://odata-v4-ng/lib/query-options/search/search-phrase.ts","ng://odata-v4-ng/lib/odata.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum OperatorComparison {\n    EQ, NE, GT, GE, LT, LE, HAS\n}\n\nexport enum OperatorLogical {\n    AND, OR, NOT\n}\n\nexport enum OperatorArithmetic {\n    ADD, SUB, MUL, DIV, MOD\n}\n","export class QuotedString {\n    constructor(private value: string) { }\n    toString(): string {\n        return this.value;\n    }\n}\n","import { OperatorLogical } from '../query-options/operator';\n\nimport { QuotedString } from '../odata-query/quoted-string';\n\nexport class Utils {\n    static isNull(value: any): boolean {\n        return value === null;\n    }\n\n    static isUndefined(value: any): boolean {\n        return value === undefined;\n    }\n\n    static isNullOrUndefined(value: any): boolean {\n        return Utils.isNull(value) || Utils.isUndefined(value);\n    }\n\n    static isNotNullNorUndefined(value: any): boolean {\n        return !Utils.isNull(value) && !Utils.isUndefined(value);\n    }\n\n    static isEmpty(value: any): boolean {\n        if (Utils.isNullOrUndefined(value)\n            || typeof (value) === 'string' && !value.length\n            || value instanceof Array && !value.length\n            || typeof (value.isEmpty) === 'function' && value.isEmpty()) {\n            return true;\n        }\n        if (value instanceof Array && value) {\n            for (const v of value) {\n                if (!Utils.isEmpty(v)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    static requireNull(fieldValue: any, fieldName: string) {\n        if (fieldValue !== null) {\n            throw new Error(fieldName + ' must be null');\n        }\n    }\n\n    static requireUndefined(fieldValue: any, fieldName: string) {\n        if (fieldValue !== undefined) {\n            throw new Error(fieldName + ' must be undefined');\n        }\n    }\n\n    static requireNotNull(fieldValue: any, fieldName: string) {\n        if (fieldValue === null) {\n            throw new Error(fieldName + ' cannot be null');\n        }\n    }\n\n    static requireNotUndefined(fieldValue: any, fieldName: string) {\n        if (fieldValue === undefined) {\n            throw new Error(fieldName + ' cannot be undefined');\n        }\n    }\n\n    static requireNotNullNorUndefined(fieldValue: any, fieldName: string) {\n        Utils.requireNotNull(fieldValue, fieldName);\n        Utils.requireNotUndefined(fieldValue, fieldName);\n    }\n\n    static requireNullOrUndefined(fieldValue: any, fieldName: string) {\n        if (!Utils.isNull(fieldValue) && !Utils.isUndefined(fieldValue)) {\n            throw new Error(fieldName + ' must be null or undefined');\n        }\n    }\n\n    static requireNotEmpty(fieldValue: any, fieldName: string) {\n        if (Utils.isEmpty(fieldValue)) {\n            throw new Error(fieldName + ' cannot be empty');\n        }\n    }\n\n    static requireNotNegative(fieldValue: number, fieldName: string) {\n        if (fieldValue < 0) {\n            throw new Error(fieldName + ' cannot be negative');\n        }\n    }\n\n    static appendSegment(path: string, segment: string): string {\n        Utils.requireNotNullNorUndefined(path, 'path');\n        Utils.requireNotNullNorUndefined(segment, 'segment');\n        if (!path.endsWith('/')) {\n            path += '/';\n        }\n        return path + segment;\n    }\n\n    static removeEndingSeparator(value: string): string {\n        Utils.requireNotNullNorUndefined(value, 'value');\n        if (value.endsWith('/')) {\n            if (value.length === 1) {\n                return '';\n            }\n            return value.substring(0, value.length - 1);\n        }\n        return value;\n    }\n\n    static getValueURI(value: boolean | number | string | QuotedString, encodeURI: boolean): any {\n        Utils.requireNotUndefined(value, 'value');\n        Utils.requireNotNullNorUndefined(encodeURI, 'encodeURI');\n\n        let res: any = value;\n\n        if (typeof (res) === 'string') {\n            // encode uri component\n            if (Utils.isNotNullNorUndefined(encodeURI) && encodeURI) {\n                res = encodeURIComponent(res);\n            }\n        } else if (res instanceof QuotedString) {\n            // escape single quote\n            res = res.toString().replace(/'/g, '\\'\\'');\n\n            // encode uri component\n            if (Utils.isNotNullNorUndefined(encodeURI) && encodeURI) {\n                res = encodeURIComponent(res);\n            }\n\n            // add start/ending quotes\n            res = '\\'' + res + '\\'';\n        }\n\n        // boolean, number\n        return res;\n    }\n\n    static toString(items: any[], operator?: OperatorLogical, operatorUppercase: boolean = false): string {\n        let res = '';\n        if (Utils.isNullOrUndefined(items) || !items.length) {\n            return res;\n        }\n\n        for (const item of items) {\n            if (res.length) {\n                if (Utils.isNotNullNorUndefined(operator)) {\n                    const operatorString: string = Utils.getOperatorString(operator, operatorUppercase);\n                    res += ` ${operatorString} `;\n                } else {\n                    res += ',';\n                }\n            }\n            if (Utils.isNotNullNorUndefined(operator) && operator === OperatorLogical.NOT) {\n                const operatorString: string = Utils.getOperatorString(operator, operatorUppercase);\n                res += `${operatorString} `;\n            }\n\n            res += item;\n        }\n\n        if (Utils.isNotNullNorUndefined(operator)) {\n            return `(${res})`;\n        }\n\n        return res;\n    }\n\n    protected static getOperatorString(operator: OperatorLogical, operatorUppercase: boolean): string {\n        let operatorString: string = OperatorLogical[operator].toLowerCase();\n        if (Utils.isNotNullNorUndefined(operatorUppercase) && operatorUppercase) {\n            operatorString = operatorString.toUpperCase();\n        }\n        return operatorString;\n    }\n}\n","import { Utils } from '../utils/utils';\nimport { ODataService } from '../odata-service/odata.service';\n\nexport abstract class ODataQueryAbstract {\n  protected odataService: ODataService;\n  protected serviceRoot: string;\n  protected queryString: string;\n\n  constructor(odataService: ODataService, serviceRoot: string) {\n    Utils.requireNotNullNorUndefined(odataService, 'odataService');\n    Utils.requireNotNullNorUndefined(serviceRoot, 'serviceRoot');\n    Utils.requireNotEmpty(serviceRoot, 'serviceRoot');\n    this.odataService = odataService;\n    this.serviceRoot = serviceRoot;\n    this.queryString = serviceRoot;\n  }\n\n  abstract toString();\n}\n","import { HttpHeaders } from '@angular/common/http';\nimport { UUID } from 'angular2-uuid';\nimport { Observable } from 'rxjs';\nimport { ODataResponse } from '../odata-response/odata-response';\nimport { HttpOptionsI } from '../odata-service/http-options';\nimport { ODataService } from '../odata-service/odata.service';\nimport { Utils } from '../utils/utils';\nimport { ODataQuery } from './odata-query';\nimport { ODataQueryAbstract } from './odata-query-abstract';\n\n\nexport enum Method {\n  GET, POST, PUT, PATCH, DELETE\n}\n\nexport class BatchRequest {\n  constructor(\n    public method: Method,\n    public odataQuery: ODataQuery,\n    public body?: any,\n    public httpOptions?: HttpOptionsI) { }\n}\n\nexport class ODataQueryBatch extends ODataQueryAbstract {\n  private static readonly BOUNDARY_PREFIX_SUFFIX = '--';\n  private static readonly BATCH_PREFIX = 'batch_';\n  private static readonly CHANGESET_PREFIX = 'changeset_';\n  private static readonly NEWLINE = '\\r\\n';\n\n  // CONSTANT SEGMENTS\n  private static readonly $BATCH = '$batch';\n\n  // HEADERS\n  private static readonly HTTP11 = 'HTTP/1.1';\n  private static readonly ODATA_VERSION = 'OData-Version';\n  private static readonly CONTENT_TYPE = 'Content-Type';\n  private static readonly ACCEPT = 'Accept';\n  private static readonly CONTENT_TRANSFER_ENCODING = 'Content-Transfer-Encoding';\n  private static readonly CONTENT_ID = 'Content-ID';\n\n  // HEADER VALUES\n  private static readonly VERSION_4_0 = '4.0';\n  private static readonly MULTIPART_MIXED = 'multipart/mixed';\n  private static readonly MULTIPART_MIXED_BOUNDARY = 'multipart/mixed;boundary=';\n  private static readonly APPLICATION_HTTP = 'application/http';\n  private static readonly BINARY = 'binary';\n  private static readonly APPLICATION_JSON = 'application/json';\n\n  // VARIABLES\n  private requests: BatchRequest[];\n  private batchBoundary: string;\n  private changesetBoundary: string;\n  private changesetID: number;\n\n  constructor(odataService: ODataService, serviceRoot: string) {\n    super(odataService, serviceRoot);\n    Utils.requireNotNullNorUndefined(odataService, 'odataService');\n    Utils.requireNotNullNorUndefined(serviceRoot, 'serviceRoot');\n    Utils.requireNotEmpty(serviceRoot, 'serviceRoot');\n    this.queryString = Utils.appendSegment(serviceRoot, ODataQueryBatch.$BATCH);\n    this.requests = [];\n    this.batchBoundary = ODataQueryBatch.BATCH_PREFIX + this.getUUID();\n    this.changesetBoundary = null;\n    this.changesetID = 1;\n  }\n\n  get(odataQuery: ODataQuery, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.GET, odataQuery, undefined, httpOptions));\n    return this;\n  }\n\n  post(odataQuery: ODataQuery, body: any, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.POST, odataQuery, body, httpOptions));\n    return this;\n  }\n\n  put(odataQuery: ODataQuery, body: any, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.PUT, odataQuery, body, httpOptions));\n    return this;\n  }\n\n  patch(odataQuery: ODataQuery, body: any, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.PATCH, odataQuery, body, httpOptions));\n    return this;\n  }\n\n  delete(odataQuery: ODataQuery, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.DELETE, odataQuery, undefined, httpOptions));\n    return this;\n  }\n\n  execute(httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    // set headers\n    if (Utils.isNullOrUndefined(httpOptions)) {\n      httpOptions = {};\n    }\n    if (Utils.isNullOrUndefined(httpOptions.headers)) {\n      httpOptions.headers = new HttpHeaders();\n    }\n    httpOptions.headers = httpOptions.headers.set(ODataQueryBatch.ODATA_VERSION, ODataQueryBatch.VERSION_4_0);\n    httpOptions.headers = httpOptions.headers.set(ODataQueryBatch.CONTENT_TYPE, ODataQueryBatch.MULTIPART_MIXED_BOUNDARY + this.batchBoundary);\n    httpOptions.headers = httpOptions.headers.set(ODataQueryBatch.ACCEPT, ODataQueryBatch.MULTIPART_MIXED);\n\n    // send request\n    return this.odataService.post(this, this.getBody(), httpOptions);\n  }\n\n  toString(): string {\n    return this.queryString;\n  }\n\n  getBody(): string {\n    let res = '';\n\n    for (const request of this.requests) {\n      const method: Method = request.method;\n      const odataQuery: ODataQuery = request.odataQuery;\n      const httpOptions: HttpOptionsI = request.httpOptions;\n      const body: any = request.body;\n\n      // if method is GET and there is a changeset boundary open then close it\n      if (method === Method.GET && Utils.isNotNullNorUndefined(this.changesetBoundary)) {\n        res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + ODataQueryBatch.NEWLINE;\n        this.changesetBoundary = null;\n      }\n\n      // if there is no changeset boundary open then open a batch boundary\n      if (Utils.isNullOrUndefined(this.changesetBoundary)) {\n        res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.batchBoundary + ODataQueryBatch.NEWLINE;\n      }\n\n      // if method is not GET and there is no changeset boundary open then open a changeset boundary\n      if (method !== Method.GET) {\n        if (Utils.isNullOrUndefined(this.changesetBoundary)) {\n          this.changesetBoundary = ODataQueryBatch.CHANGESET_PREFIX + this.getUUID();\n          res += ODataQueryBatch.CONTENT_TYPE + ': ' + ODataQueryBatch.MULTIPART_MIXED_BOUNDARY + this.changesetBoundary + ODataQueryBatch.NEWLINE;\n          res += ODataQueryBatch.NEWLINE;\n        }\n        res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + ODataQueryBatch.NEWLINE;\n      }\n\n      res += ODataQueryBatch.CONTENT_TYPE + ': ' + ODataQueryBatch.APPLICATION_HTTP + ODataQueryBatch.NEWLINE;\n      res += ODataQueryBatch.CONTENT_TRANSFER_ENCODING + ': ' + ODataQueryBatch.BINARY + ODataQueryBatch.NEWLINE;\n\n      if (method !== Method.GET) {\n        res += ODataQueryBatch.CONTENT_ID + ': ' + this.changesetID++ + ODataQueryBatch.NEWLINE;\n      }\n\n      res += ODataQueryBatch.NEWLINE;\n      res += Method[method] + ' ' + odataQuery + ' ' + ODataQueryBatch.HTTP11 + ODataQueryBatch.NEWLINE;\n\n      res += this.getHeaders(method, httpOptions);\n\n      res += ODataQueryBatch.NEWLINE;\n      if (method === Method.GET || method === Method.DELETE) {\n        res += ODataQueryBatch.NEWLINE;\n      } else {\n        res += JSON.stringify(body) + ODataQueryBatch.NEWLINE;\n      }\n    }\n\n    if (res.length) {\n      if (Utils.isNotNullNorUndefined(this.changesetBoundary)) {\n        res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + ODataQueryBatch.NEWLINE;\n        this.changesetBoundary = null;\n      }\n      res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.batchBoundary + ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX;\n    }\n\n    return res;\n  }\n\n  protected getHeaders(method: Method, httpOptions: HttpOptionsI): string {\n    let res = '';\n\n    if (method === Method.POST || method === Method.PATCH || method === Method.PUT) {\n      res += ODataQueryBatch.CONTENT_TYPE + ': ' + ODataQueryBatch.APPLICATION_JSON + ODataQueryBatch.NEWLINE;\n    }\n\n    if (Utils.isNullOrUndefined(httpOptions) || Utils.isNullOrUndefined(httpOptions.headers)) {\n      return res;\n    }\n\n    for (const key of httpOptions.headers.keys()) {\n      res += key + ': ' + httpOptions.headers.getAll(key) + ODataQueryBatch.NEWLINE;\n    }\n\n    return res;\n  }\n\n  getUUID(): string {\n    return UUID.UUID();\n  }\n}\n","import { Utils } from '../../utils/utils';\nimport { Filter } from './filter';\n\nexport class FilterString implements Filter {\n    private filter: string;\n\n    constructor(filter: string) {\n        Utils.requireNotNullNorUndefined(filter, 'filter');\n        Utils.requireNotEmpty(filter, 'filter');\n        this.filter = filter;\n    }\n\n    toString(): string {\n        return this.filter;\n    }\n\n    isEmpty(): boolean {\n        return Utils.isNullOrUndefined(this.filter) || !this.filter.length;\n    }\n}\n","import { QueryOptions } from './query-options';\nimport { Utils } from '../utils/utils';\nimport { Filter } from './filter/filter';\nimport { Orderby } from './orderby';\nimport { Search } from './search/search';\n\nexport class Expand {\n    static readonly SEPARATOR = ';';\n    private entitySet: string;\n    private queryOptions: QueryOptions;\n\n    constructor(entitySet: string) {\n        Utils.requireNotNullNorUndefined(entitySet, 'entitySet');\n        Utils.requireNotEmpty(entitySet, 'entitySet');\n        this.entitySet = entitySet;\n        this.queryOptions = new QueryOptions(Expand.SEPARATOR);\n    }\n\n    // QUERY OPTIONS\n\n    select(select: string | string[]): Expand {\n        this.queryOptions.select(select);\n        return this;\n    }\n\n    filter(filter: string | Filter): Expand {\n        this.queryOptions.filter(filter);\n        return this;\n    }\n\n    expand(expand: string | Expand | Expand[]): Expand {\n        this.queryOptions.expand(expand);\n        return this;\n    }\n\n    orderby(orderby: string | Orderby[]): Expand {\n        this.queryOptions.orderby(orderby);\n        return this;\n    }\n\n    search(search: string | Search): Expand {\n        this.queryOptions.search(search);\n        return this;\n    }\n\n    skip(skip: number): Expand {\n        this.queryOptions.skip(skip);\n        return this;\n    }\n\n    top(top: number): Expand {\n        this.queryOptions.top(top);\n        return this;\n    }\n\n    customOption(key: string, value: string) {\n        this.queryOptions.customOption(key, value);\n        return this;\n    }\n\n    toString(): string {\n        let res: string = this.entitySet;\n        if (!Utils.isEmpty(this.queryOptions)) {\n            res += '(' + this.queryOptions + ')';\n        }\n        return res;\n    }\n\n    isEmpty(): boolean {\n        return Utils.isEmpty(this.entitySet);\n    }\n}\n","import { Utils } from '../utils/utils';\n\nexport enum Order {\n    ASC, DESC\n}\n\nexport class Orderby {\n    private property: string;\n    private order: Order;\n\n    constructor(property: string, order?: Order) {\n        Utils.requireNotNullNorUndefined(property, 'property');\n        this.property = property;\n        this.order = order;\n    }\n\n    toString() {\n        let res = this.property;\n        if (!Utils.isNullOrUndefined(this.order)) {\n            res += ' ' + Order[this.order].toLowerCase();\n        }\n        return res;\n    }\n}\n","import { FilterString } from './filter/filter-string';\nimport { Filter } from './filter/filter';\nimport { Expand } from './expand';\nimport { Utils } from '../utils/utils';\nimport { Orderby } from './orderby';\nimport { Search } from './search/search';\n\nexport class QueryOptions {\n  private _separator: string;\n  private _select: string[];\n  private _filter: Filter;\n  private _expand: Expand[];\n  private _orderby: Orderby[];\n  private _search: string | Search;\n  private _skip: number;\n  private _top: number;\n  private _count: boolean;\n  private _customOptions: Map<string, string>;\n  private _format: string;\n\n  constructor(separator: string) {\n    Utils.requireNotNullNorUndefined(separator, 'separator');\n    Utils.requireNotEmpty(separator, 'separator');\n    this._separator = separator;\n    this._select = null;\n    this._filter = null;\n    this._expand = null;\n    this._orderby = null;\n    this._search = null;\n    this._skip = null;\n    this._top = null;\n    this._count = null;\n    this._customOptions = null;\n    this._format = null;\n  }\n\n  select(select: string | string[]): QueryOptions {\n    if (Utils.isNullOrUndefined(select) || Utils.isEmpty(select)) {\n      this._select = null;\n    } else {\n      this._select = typeof (select) === 'string' ? [select] : select;\n    }\n    return this;\n  }\n\n  filter(filter: string | Filter): QueryOptions {\n    if (Utils.isNullOrUndefined(filter) || Utils.isEmpty(filter)) {\n      this._filter = null;\n    } else {\n      this._filter = typeof (filter) === 'string' ? new FilterString(filter) : filter;\n    }\n    return this;\n  }\n\n  expand(expand: string | Expand | Expand[]): QueryOptions {\n    if (Utils.isNullOrUndefined(expand) || Utils.isEmpty(expand)) {\n      this._expand = null;\n    } else {\n      this._expand = typeof (expand) === 'string' ? [new Expand(expand)] : expand instanceof Expand ? [expand] : expand;\n    }\n    return this;\n  }\n\n  orderby(orderby: string | Orderby[]): QueryOptions {\n    if (Utils.isNullOrUndefined(orderby) || Utils.isEmpty(orderby)) {\n      this._orderby = null;\n    } else {\n      this._orderby = typeof (orderby) === 'string' ? [new Orderby(orderby)] : orderby;\n    }\n    return this;\n  }\n\n  search(search: string | Search): QueryOptions {\n    this._search = search;\n    return this;\n  }\n\n  skip(skip: number): QueryOptions {\n    Utils.requireNotNegative(skip, 'skip');\n    this._skip = skip;\n    return this;\n  }\n\n  top(top: number): QueryOptions {\n    Utils.requireNotNegative(top, 'top');\n    this._top = top;\n    return this;\n  }\n\n  count(count: boolean): QueryOptions {\n    this._count = count;\n    return this;\n  }\n\n  format(format: string): QueryOptions {\n    this._format = format;\n    return this;\n  }\n\n  customOption(key: string, value: string) {\n    Utils.requireNotNullNorUndefined(key, 'key');\n    if (Utils.isNullOrUndefined(this._customOptions)) {\n      this._customOptions = new Map<string, string>();\n    }\n    this._customOptions.set(key, value);\n    return this;\n  }\n\n  toString(): string {\n    // query options\n    let queryOptions = '';\n\n    // add select\n    if (!Utils.isNullOrUndefined(this._select) && !Utils.isEmpty(this._select)) {\n      queryOptions += '$select=';\n      if (typeof (this._select) === 'string') {\n        queryOptions += this._select;\n      } else {\n        queryOptions += Utils.toString(this._select);\n      }\n    }\n\n    // add filter\n    if (!Utils.isNullOrUndefined(this._filter) && !Utils.isEmpty(this._filter)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$filter=' + encodeURIComponent(this._filter.toString());\n    }\n\n    // add expand\n    if (!Utils.isNullOrUndefined(this._expand) && !Utils.isEmpty(this._expand)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$expand=';\n      if (typeof (this._expand) === 'string') {\n        queryOptions += this._expand;\n      } else {\n        queryOptions += Utils.toString(this._expand);\n      }\n    }\n\n    // add orderby\n    if (!Utils.isNullOrUndefined(this._orderby) && !Utils.isEmpty(this._orderby)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$orderby=';\n      if (typeof (this._orderby) === 'string') {\n        queryOptions += this._orderby;\n      } else {\n        queryOptions += Utils.toString(this._orderby);\n      }\n    }\n\n    // add search\n    if (!Utils.isNullOrUndefined(this._search) && !Utils.isEmpty(this._search)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$search=' + encodeURIComponent(this._search.toString());\n    }\n\n    // add skip\n    if (!Utils.isNullOrUndefined(this._skip) && !Utils.isEmpty(this._skip)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$skip=' + this._skip;\n    }\n\n    // add top\n    if (!Utils.isNullOrUndefined(this._top) && !Utils.isEmpty(this._top)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$top=' + this._top;\n    }\n\n    // add count\n    if (!Utils.isNullOrUndefined(this._count) && !Utils.isEmpty(this._count)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$count=' + this._count;\n    }\n\n    // add custom query options\n    if (Utils.isNotNullNorUndefined(this._customOptions) && this._customOptions.size > 0) {\n      this._customOptions.forEach((value: string, key: string, map: Map<string, string>) => {\n        if (Utils.isNotNullNorUndefined(key) && !Utils.isEmpty(key)\n          && Utils.isNotNullNorUndefined(value) && !Utils.isEmpty(value)) {\n          if (queryOptions.length) {\n            queryOptions += this._separator;\n          }\n          queryOptions += key + '=' + encodeURIComponent(value);\n        }\n      });\n    }\n\n    // add format\n    if (!Utils.isNullOrUndefined(this._format) && !Utils.isEmpty(this._format)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$format=' + this._format;\n    }\n\n    return queryOptions;\n  }\n\n  isEmpty(): boolean {\n    for (const key in this) {\n      if (key === '_purpose' || key === '_separator') {\n        continue;\n      }\n      if (this.hasOwnProperty(key) && !Utils.isEmpty(this[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Observable } from 'rxjs';\n\nimport { ODataResponse } from '../odata-response/odata-response';\nimport { HttpOptionsI } from '../odata-service/http-options';\nimport { ODataService } from '../odata-service/odata.service';\nimport { Expand } from '../query-options/expand';\nimport { Filter } from '../query-options/filter/filter';\nimport { Orderby } from '../query-options/orderby';\nimport { QueryOptions } from '../query-options/query-options';\nimport { Search } from '../query-options/search/search';\nimport { Utils } from '../utils/utils';\nimport { ODataQueryAbstract } from './odata-query-abstract';\nimport { ODataQueryBatch } from './odata-query-batch';\n\nexport class ODataQuery extends ODataQueryAbstract {\n  // QUERY OPTIONS SEPARATOR\n  static readonly SEPARATOR = '&';\n\n  // SEGMENT NAMES\n  private static readonly METADATA = 'metadata';\n  private static readonly ENTITY_SET = 'entitySet';\n  private static readonly ENTITY_KEY = 'entityKey';\n  private static readonly SINGLETON = 'singleton';\n  private static readonly TYPE_NAME = 'typeName';\n  private static readonly PROPERTY = 'property';\n  private static readonly NAVIGATION_PROPERTY = 'navigationProperty';\n  private static readonly REF = 'ref';\n  private static readonly VALUE = 'value';\n  private static readonly COUNT = 'count';\n  private static readonly FUNCTION_CALL = 'functionCall';\n  private static readonly ACTION_CALL = 'actionCall';\n\n  // CONSTANT SEGMENTS\n  private static readonly $METADATA = '$metadata';\n  private static readonly $REF = '$ref';\n  private static readonly $VALUE = '$value';\n  private static readonly $COUNT = '$count';\n\n  // VARIABLES\n  private queryOptions: QueryOptions;\n  private segments: string[];\n  private lastSegment: string;\n\n  constructor(odataService: ODataService, serviceRoot: string) {\n    super(odataService, serviceRoot);\n    Utils.requireNotNullNorUndefined(odataService, 'odataService');\n    Utils.requireNotNullNorUndefined(serviceRoot, 'serviceRoot');\n    Utils.requireNotEmpty(serviceRoot, 'serviceRoot');\n    this.queryOptions = new QueryOptions(ODataQuery.SEPARATOR);\n    this.segments = [];\n    this.lastSegment = null;\n  }\n\n  // QUERY SEGMENTS\n\n  metadata(): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.METADATA), ODataQuery.METADATA);\n    if (this.segments.length) {\n      throw new Error('metadata segment cannot be appended to other segments');\n    }\n    this.queryString = Utils.appendSegment(this.queryString, ODataQuery.$METADATA);\n    this.addSegment(ODataQuery.METADATA);\n    return this;\n  }\n\n  entitySet(entitySet: string): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.ENTITY_SET), ODataQuery.ENTITY_SET);\n    Utils.requireNotNullNorUndefined(entitySet, 'entitySet');\n    Utils.requireNotEmpty(entitySet, 'entitySet');\n    this.queryString = Utils.appendSegment(this.queryString, entitySet);\n    this.addSegment(ODataQuery.ENTITY_SET);\n    return this;\n  }\n\n  entityKey(entityKey: any | any[]): ODataQuery {\n    if (this.lastSegment !== ODataQuery.ENTITY_SET && this.lastSegment !== ODataQuery.NAVIGATION_PROPERTY) {\n      throw new Error('entityKey can only be appended to entitySet or navigationProperty');\n    }\n    Utils.requireNotNullNorUndefined(entityKey, 'entityKey');\n    Utils.requireNotEmpty(entityKey, 'entityKey');\n    entityKey = Utils.getValueURI(entityKey, true);\n    this.queryString = Utils.removeEndingSeparator(this.queryString) + '(' + entityKey + ')';\n    this.addSegment(ODataQuery.ENTITY_KEY);\n    return this;\n  }\n\n  singleton(singleton: string) {\n    if (this.segments.length) {\n      throw new Error('singleton segment cannot be appended to other segments');\n    }\n    Utils.requireNotNullNorUndefined(singleton, 'singleton');\n    Utils.requireNotEmpty(singleton, 'singleton');\n    this.queryString = Utils.appendSegment(this.queryString, singleton);\n    this.addSegment(ODataQuery.SINGLETON);\n    return this;\n  }\n\n  typeName(typeName: string) {\n    if (this.lastSegment !== ODataQuery.ENTITY_SET && this.lastSegment !== ODataQuery.NAVIGATION_PROPERTY && this.lastSegment !== ODataQuery.ENTITY_KEY) {\n      throw new Error('typeName can only be appended to entitySet, navigationProperty or entityKey');\n    }\n    Utils.requireNotNullNorUndefined(typeName, 'typeName');\n    Utils.requireNotEmpty(typeName, 'typeName');\n    this.queryString = Utils.appendSegment(this.queryString, typeName);\n    this.addSegment(ODataQuery.TYPE_NAME);\n    return this;\n  }\n\n  property(property: string): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.PROPERTY), ODataQuery.PROPERTY);\n    if (this.lastSegment !== ODataQuery.ENTITY_KEY && this.lastSegment !== ODataQuery.SINGLETON) {\n      throw new Error('property can only be appended to entityKey or singleton');\n    }\n    Utils.requireNotNullNorUndefined(property, 'property');\n    Utils.requireNotEmpty(property, 'property');\n    this.queryString = Utils.appendSegment(this.queryString, property);\n    this.addSegment(ODataQuery.PROPERTY);\n    return this;\n  }\n\n  navigationProperty(navigationProperty: string): ODataQuery {\n    if (this.lastSegment !== ODataQuery.ENTITY_KEY && this.lastSegment !== ODataQuery.SINGLETON && this.lastSegment !== ODataQuery.TYPE_NAME) {\n      throw new Error('navigationProperty can only be appended to entityKey, singleton or typeName');\n    }\n    Utils.requireNotNullNorUndefined(navigationProperty, 'navigationProperty');\n    Utils.requireNotEmpty(navigationProperty, 'navigationProperty');\n    this.queryString = Utils.appendSegment(this.queryString, navigationProperty);\n    this.addSegment(ODataQuery.NAVIGATION_PROPERTY);\n    return this;\n  }\n\n  ref(): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.REF), ODataQuery.REF);\n    if (this.lastSegment !== ODataQuery.NAVIGATION_PROPERTY) {\n      throw new Error('ref can only be appended to navigationProperty');\n    }\n    this.queryString = Utils.appendSegment(this.queryString, ODataQuery.$REF);\n    this.addSegment(ODataQuery.REF);\n    return this;\n  }\n\n  value(): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.VALUE), ODataQuery.VALUE);\n    if (this.lastSegment !== ODataQuery.PROPERTY) {\n      throw new Error('value can only be appended to property');\n    }\n    this.queryString = Utils.appendSegment(this.queryString, ODataQuery.$VALUE);\n    this.addSegment(ODataQuery.VALUE);\n    return this;\n  }\n\n  countSegment(): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.COUNT), ODataQuery.COUNT);\n    if (this.lastSegment !== ODataQuery.ENTITY_SET && this.lastSegment !== ODataQuery.NAVIGATION_PROPERTY) {\n      throw new Error('count can only be appended to entitySet or navigationProperty');\n    }\n    this.queryString = Utils.appendSegment(this.queryString, ODataQuery.$COUNT);\n    this.addSegment(ODataQuery.COUNT);\n    return this;\n  }\n\n  functionCall(functionCall: string): ODataQuery {\n    Utils.requireNotNullNorUndefined(functionCall, 'functionCall');\n    Utils.requireNotEmpty(functionCall, 'functionCall');\n    this.queryString = Utils.appendSegment(this.queryString, functionCall);\n    this.addSegment(ODataQuery.FUNCTION_CALL);\n    return this;\n  }\n\n  actionCall(actionCall: string): ODataQuery {\n    Utils.requireNotNullNorUndefined(actionCall, 'actionCall');\n    Utils.requireNotEmpty(actionCall, 'actionCall');\n    this.queryString = Utils.appendSegment(this.queryString, actionCall);\n    this.addSegment(ODataQuery.ACTION_CALL);\n    return this;\n  }\n\n  batch(): ODataQueryBatch {\n    return new ODataQueryBatch(this.odataService, this.serviceRoot);\n  }\n\n  // QUERY OPTIONS\n\n  select(select: string | string[]): ODataQuery {\n    this.queryOptions.select(select);\n    return this;\n  }\n\n  filter(filter: string | Filter): ODataQuery {\n    this.queryOptions.filter(filter);\n    return this;\n  }\n\n  expand(expand: string | Expand | Expand[]): ODataQuery {\n    this.queryOptions.expand(expand);\n    return this;\n  }\n\n  orderby(orderby: string | Orderby[]): ODataQuery {\n    this.queryOptions.orderby(orderby);\n    return this;\n  }\n\n  search(search: string | Search): ODataQuery {\n    this.queryOptions.search(search);\n    return this;\n  }\n\n  skip(skip: number): ODataQuery {\n    this.queryOptions.skip(skip);\n    return this;\n  }\n\n  top(top: number): ODataQuery {\n    this.queryOptions.top(top);\n    return this;\n  }\n\n  countOption(count: boolean): ODataQuery {\n    this.queryOptions.count(count);\n    return this;\n  }\n\n  customOption(key: string, value: string) {\n    this.queryOptions.customOption(key, value);\n    return this;\n  }\n\n  format(format: string): ODataQuery {\n    this.queryOptions.format(format);\n    return this;\n  }\n\n  // QUERY EXECUTION\n\n  get(httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.get(this, httpOptions);\n  }\n\n  post(body: any, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.post(this, body, httpOptions);\n  }\n\n  patch(body: any, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.patch(this, body, etag, httpOptions);\n  }\n\n  put(body: any, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.put(this, body, etag, httpOptions);\n  }\n\n  delete(etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.delete(this, etag, httpOptions);\n  }\n\n  toString(): string {\n    let res: string = this.queryString;\n    if (Utils.isNotNullNorUndefined(this.queryOptions) && !this.queryOptions.isEmpty()) {\n      res += '?' + this.queryOptions.toString();\n    }\n    return res;\n  }\n\n  protected getSegment(segment: string): string {\n    Utils.requireNotNull(segment, 'segment');\n    const res: string = this.segments.find((value: string, index: number, segments: string[]) => {\n      return value === segment;\n    });\n    return res;\n  }\n\n  protected addSegment(segment: string): void {\n    Utils.requireNotNull(segment, 'segment');\n    this.segments.push(segment);\n    if (Utils.isNotNullNorUndefined(this.segments) && this.segments.length) {\n      this.lastSegment = this.segments[this.segments.length - 1];\n    }\n  }\n}\n","export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n","import { CsdlEntitySet } from './csdl-entity-set';\nimport { CsdlSingleton } from './csdl-singleton';\nimport { CsdlFunctionImport, CsdlActionImport } from './csdl-function-action';\n\nexport class CsdlEntityContainer {\n    constructor(\n        public name: string,\n        public extend?: string,\n        public entitySets?: CsdlEntitySet[],\n        public singletons?: CsdlSingleton[],\n        public functionImports?: CsdlFunctionImport[],\n        public actionImports?: CsdlActionImport[]\n    ) { }\n}\n","import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlEntitySet {\n    constructor(\n        public name: string,\n        public entityType: string,\n        public navigationPropertyBinding?: CsdlNavigationPropertyBinding[],\n        public includeInServiceDocument?: boolean\n    ) {\n\n    }\n}\n","export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n","export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n","export class CsdlNavigationPropertyBinding {\n    constructor(\n        public path: string,\n        public target: string,\n    ) { }\n}\n","import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n","import { CsdlAnnotation, CsdlAnnotable, CsdlTerm, CsdlAnnotations } from './csdl-annotation';\nimport { CsdlTypeDefinition } from './csdl-type-definition';\nimport { CsdlEnumType } from './csdl-enum-type';\nimport { CsdlEntityType, CsdlComplexType } from './csdl-structured-type';\nimport { CsdlFunction, CsdlAction } from './csdl-function-action';\nimport { CsdlEntityContainer } from './csdl-entity-container';\n\nexport class CsdlSchema extends CsdlAnnotable {\n    constructor(\n        public namespace: string,\n        public alias?: string,\n        public enumTypes?: CsdlEnumType[],\n        public complexTypes?: CsdlComplexType[],\n        public entityTypes?: CsdlEntityType[],\n        public functions?: CsdlFunction[],\n        public actions?: CsdlAction[],\n        public entityContainer?: CsdlEntityContainer,\n        public typeDefinitions?: CsdlTypeDefinition[],\n        public terms?: CsdlTerm[],\n        public annotationsList?: CsdlAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n","import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlSingleton {\n    constructor(\n        public name: string,\n        public type: string,\n        public navigationPropertyBindings?: CsdlNavigationPropertyBinding[]\n    ) { }\n}\n","export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n","import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n","import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlTypeDefinition extends CsdlAnnotable {\n    constructor(\n        public name: string,\n        public underlayingType: string,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        annotationList?: CsdlAnnotation[]) {\n        super(annotationList);\n    }\n}\n","import { Utils } from '../utils/utils';\nexport class EntitySet<T> {\n    private entities: T[];\n    private count: number;\n\n    constructor(entities: T[], count: number, type: (new () => T)) {\n        Utils.requireNotNullNorUndefined(entities, 'entities');\n        this.entities = [];\n        entities.forEach(entity => {\n            if (Utils.isNullOrUndefined(type)) {\n                this.entities.push(Object.assign({}, entity));\n            } else {\n                this.entities.push(Object.assign(new type(), entity));\n            }\n        });\n        this.count = count;\n    }\n\n    getEntities(): T[] {\n        return this.entities;\n    }\n\n    getCount(): number {\n        return this.count;\n    }\n}\n","import { CsdlTypeDefinition } from './csdl/csdl-type-definition';\nimport { CsdlSchema } from './csdl/csdl-schema';\nimport { Utils } from '../utils/utils';\nimport { CsdlEnumType, CsdlEnumMember } from './csdl/csdl-enum-type';\nimport { CsdlEntityType, CsdlPropertyRef, CsdlKey, CsdlComplexType } from './csdl/csdl-structured-type';\nimport { CsdlFunction, CsdlParameter, CsdlFunctionImport, CsdlActionImport, CsdlReturnType, CsdlAction } from './csdl/csdl-function-action';\nimport { CsdlProperty, CsdlNavigationProperty, CsdlReferentialConstraint, CsdlOnDelete } from './csdl/csdl-structural-property';\nimport { CsdlEntitySet } from './csdl/csdl-entity-set';\nimport { CsdlSingleton } from './csdl/csdl-singleton';\nimport { CsdlEntityContainer } from './csdl/csdl-entity-container';\nimport { CsdlReference, CsdlInclude, CsdlIncludeAnnotations } from './csdl/csdl-reference';\nimport { CsdlAnnotation, CsdlTerm, CsdlAnnotations } from './csdl/csdl-annotation';\nimport { CsdlNavigationPropertyBinding } from './csdl/csdl-navigation-property-binding';\n\nexport enum FieldType {\n    ATTRIBUTE, TAG\n}\nexport class Field {\n    constructor(public name: string, public fieldType: FieldType) { }\n}\n\nexport class Metadata {\n    // TAGS\n    private static readonly TAG_EDMX = 'edmx:Edmx';\n    private static readonly TAG_DATA_SERVICES = 'edmx:DataServices';\n    private static readonly TAG_REFERENCE = 'edmx:Reference';\n    private static readonly TAG_INCLUDE = 'edmx:Include';\n    private static readonly TAG_INCLUDE_ANNOTATIONS = 'edmx:IncludeAnnotations';\n    private static readonly TAG_TERM = 'Term';\n    private static readonly TAG_ANNOTATIONS = 'Annotations';\n    private static readonly TAG_ANNOTATION = 'Annotation';\n    private static readonly TAG_SCHEMA = 'Schema';\n    private static readonly TAG_ENUM_TYPE = 'EnumType';\n    private static readonly TAG_MEMBER = 'Member';\n    private static readonly TAG_COMPLEX_TYPE = 'ComplexType';\n    private static readonly TAG_ENTITY_TYPE = 'EntityType';\n    private static readonly TAG_PROPERTY = 'Property';\n    private static readonly TAG_KEY = 'Key';\n    private static readonly TAG_PROPERTY_REF = 'PropertyRef';\n    private static readonly TAG_NAVIGATION_PROPERTY = 'NavigationProperty';\n    private static readonly TAG_REFERENTIAL_CONSTRAINT = 'ReferentialConstraint';\n    private static readonly TAG_ON_DELETE = 'OnDelete';\n    private static readonly TAG_FUNCTION = 'Function';\n    private static readonly TAG_RETURN_TYPE = 'ReturnType';\n    private static readonly TAG_PARAMETER = 'Parameter';\n    private static readonly TAG_ACTION = 'Action';\n    private static readonly TAG_ENTITY_CONTAINER = 'EntityContainer';\n    private static readonly TAG_ENTITY_SET = 'EntitySet';\n    private static readonly TAG_SINGLETON = 'Singleton';\n    private static readonly TAG_FUNCTION_IMPORT = 'FunctionImport';\n    private static readonly TAG_ACTION_IMPORT = 'ActionImport';\n    private static readonly TAG_NAVIGATION_PROPERTY_BINDING = 'NavigationPropertyBinding';\n    private static readonly TAG_TYPE_DEFINITION = 'TypeDefinition';\n\n    // ATTRIBUTES\n    private static readonly ATTRIBUTE_VERSION = 'Version';\n    private static readonly ATTRIBUTE_URI = 'Uri';\n    private static readonly ATTRIBUTE_ALIAS = 'Alias';\n    private static readonly ATTRIBUTE_NAMESPACE = 'Namespace';\n    private static readonly ATTRIBUTE_TERM_NAMESPACE = 'TermNamespace';\n    private static readonly ATTRIBUTE_QUALIFIER = 'Qualifier';\n    private static readonly ATTRIBUTE_TARGET_NAMESPACE = 'TargetNamespace';\n    private static readonly ATTRIBUTE_TERM = 'Term';\n    private static readonly ATTRIBUTE_NAME = 'Name';\n    private static readonly ATTRIBUTE_VALUE = 'Value';\n    private static readonly ATTRIBUTE_BASE_TYPE = 'BaseType';\n    private static readonly ATTRIBUTE_OPEN_TYPE = 'OpenType';\n    private static readonly ATTRIBUTE_TYPE = 'Type';\n    private static readonly ATTRIBUTE_NULLABLE = 'Nullable';\n    private static readonly ATTRIBUTE_MAX_LENGTH = 'MaxLength';\n    private static readonly ATTRIBUTE_PRECISION = 'Precision';\n    private static readonly ATTRIBUTE_SCALE = 'Scale';\n    private static readonly ATTRIBUTE_UNICODE = 'Unicode';\n    private static readonly ATTRIBUTE_SRID = 'SRID';\n    private static readonly ATTRIBUTE_DEFAULT_VALUE = 'DefaultValue';\n    private static readonly ATTRIBUTE_PARTNER = 'Partner';\n    private static readonly ATTRIBUTE_PROPERTY = 'Property';\n    private static readonly ATTRIBUTE_REFERENCED_PROPERTY = 'ReferencedProperty';\n    private static readonly ATTRIBUTE_HAS_STREAM = 'HasStream';\n    private static readonly ATTRIBUTE_CONTAINS_TARGET = 'ContainsTarget';\n    private static readonly ATTRIBUTE_IS_BOUND = 'IsBound';\n    private static readonly ATTRIBUTE_ENTITY_SET_PATH = 'EntitySetPath';\n    private static readonly ATTRIBUTE_IS_COMPOSABLE = 'IsComposable';\n    private static readonly ATTRIBUTE_ENTITY_TYPE = 'EntityType';\n    private static readonly ATTRIBUTE_PATH = 'Path';\n    private static readonly ATTRIBUTE_TARGET = 'Target';\n    private static readonly ATTRIBUTE_FUNCTION = 'Function';\n    private static readonly ATTRIBUTE_ACTION = 'Action';\n    private static readonly ATTRIBUTE_ENTITY_SET = 'EntitySet';\n    private static readonly ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT = 'IncludeInServiceDocument';\n    private static readonly ATTRIBUTE_ABSTRACT = 'Abstract';\n    private static readonly ATTRIBUTE_UNDERLYING_TYPE = 'UnderlyingType';\n    private static readonly ATTRIBUTE_IS_FLAGS = 'IsFlags';\n    private static readonly ATTRIBUTE_EXTENDS = 'Extends';\n    private static readonly ATTRIBUTE_BASE_TERM = 'BaseTerm';\n    private static readonly ATTRIBUTE_APPLIES_TO = 'AppliesTo';\n\n    public readonly version: string;\n    public readonly references: CsdlReference[];\n    public readonly schemas: CsdlSchema[];\n\n    constructor(xml: string) {\n        try {\n            const parser: DOMParser = new DOMParser();\n            const document: Document = parser.parseFromString(xml, 'text/xml');\n\n            this.checkVersion(document);\n\n            this.version = this.getFieldValueByAttribute(\n                new Field(Metadata.ATTRIBUTE_VERSION, FieldType.ATTRIBUTE),\n                document.documentElement.attributes);\n\n            this.references = this.getObjects(document.documentElement, Metadata.TAG_REFERENCE, [\n                new Field(Metadata.ATTRIBUTE_URI, FieldType.ATTRIBUTE),\n                new Field(Metadata.TAG_INCLUDE, FieldType.TAG),\n                new Field(Metadata.TAG_INCLUDE_ANNOTATIONS, FieldType.TAG),\n                new Field(Metadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n\n            const dataServices: Element = document.documentElement.getElementsByTagName(Metadata.TAG_DATA_SERVICES)[0];\n            this.schemas = this.getObjects(dataServices, Metadata.TAG_SCHEMA, [\n                new Field(Metadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n                new Field(Metadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE),\n                new Field(Metadata.TAG_ENUM_TYPE, FieldType.TAG),\n                new Field(Metadata.TAG_COMPLEX_TYPE, FieldType.TAG),\n                new Field(Metadata.TAG_ENTITY_TYPE, FieldType.TAG),\n                new Field(Metadata.TAG_FUNCTION, FieldType.TAG),\n                new Field(Metadata.TAG_ACTION, FieldType.TAG),\n                new Field(Metadata.TAG_ENTITY_CONTAINER, FieldType.TAG),\n                new Field(Metadata.TAG_TYPE_DEFINITION, FieldType.TAG),\n                new Field(Metadata.TAG_TERM, FieldType.TAG),\n                new Field(Metadata.TAG_ANNOTATIONS, FieldType.TAG),\n                new Field(Metadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n        } catch (error) {\n            throw new Error('Unable to parse metadata, ' + error);\n        }\n    }\n\n    protected checkVersion(document: Document) {\n        // check version\n        const attributes: NamedNodeMap = document.documentElement.attributes;\n        if (Utils.isNullOrUndefined(attributes)) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const attr: Attr = attributes.getNamedItem('Version');\n        if (Utils.isNullOrUndefined(attr)) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const odataVersion: string = attr.nodeValue;\n        if (odataVersion !== '4.0') {\n            throw new Error('OData version \"' + odataVersion + '\" is not supported');\n        }\n    }\n\n    protected getObjects(parentElement: Element, tag: string, fieldNames: Field[]): any[] {\n        let objects: any[];\n\n        const children: HTMLCollection = parentElement.children;\n        for (let index = 0; index < children.length; index++) {\n            const element: Element = children.item(index);\n\n            if (element.nodeName !== tag) {\n                continue;\n            }\n\n            const attributes: NamedNodeMap = element.attributes;\n            const fieldValues: any[] = this.getFieldValues(fieldNames, attributes, element);\n            if (Utils.isNullOrUndefined(objects)) {\n                objects = [];\n            }\n            switch (tag) {\n                case Metadata.TAG_REFERENCE:\n                    objects.push(new CsdlReference(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3]));\n                    break;\n                case Metadata.TAG_INCLUDE:\n                    objects.push(new CsdlInclude(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_INCLUDE_ANNOTATIONS:\n                    objects.push(new CsdlIncludeAnnotations(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2]));\n                    break;\n                case Metadata.TAG_TERM:\n                    objects.push(new CsdlTerm(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7],\n                        fieldValues[8],\n                        fieldValues[9]\n                    ));\n                    break;\n                case Metadata.TAG_ANNOTATIONS:\n                    objects.push(new CsdlAnnotations(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2]\n                    ));\n                    break;\n                case Metadata.TAG_ANNOTATION:\n                    objects.push(new CsdlAnnotation(\n                        fieldValues[0],\n                        fieldValues[1]\n                    ));\n                    break;\n                case Metadata.TAG_SCHEMA:\n                    objects.push(new CsdlSchema(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7],\n                        fieldValues[8],\n                        fieldValues[9],\n                        fieldValues[10],\n                        fieldValues[11]));\n                    break;\n                case Metadata.TAG_ENUM_TYPE:\n                    objects.push(new CsdlEnumType(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3]));\n                    break;\n                case Metadata.TAG_COMPLEX_TYPE:\n                    objects.push(new CsdlComplexType(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5]));\n                    break;\n                case Metadata.TAG_ENTITY_TYPE:\n                    objects.push(new CsdlEntityType(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7]));\n                    break;\n                case Metadata.TAG_FUNCTION:\n                    objects.push(new CsdlFunction(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5]));\n                    break;\n                case Metadata.TAG_MEMBER:\n                    objects.push(new CsdlEnumMember(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_PROPERTY:\n                    objects.push(new CsdlProperty(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7],\n                        fieldValues[8]));\n                    break;\n                case Metadata.TAG_PROPERTY_REF:\n                    objects.push(new CsdlPropertyRef(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_NAVIGATION_PROPERTY:\n                    objects.push(new CsdlNavigationProperty(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6]));\n                    break;\n                case Metadata.TAG_REFERENTIAL_CONSTRAINT:\n                    objects.push(new CsdlReferentialConstraint(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_PARAMETER:\n                    objects.push(new CsdlParameter(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6]));\n                    break;\n                case Metadata.TAG_ACTION:\n                    objects.push(new CsdlAction(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4]));\n                    break;\n                case Metadata.TAG_ENTITY_SET:\n                    objects.push(new CsdlEntitySet(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3]));\n                    break;\n                case Metadata.TAG_SINGLETON:\n                    objects.push(new CsdlSingleton(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2]));\n                    break;\n                case Metadata.TAG_FUNCTION_IMPORT:\n                    objects.push(new CsdlFunctionImport(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3]));\n                    break;\n                case Metadata.TAG_ACTION_IMPORT:\n                    objects.push(new CsdlActionImport(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2]));\n                    break;\n                case Metadata.TAG_NAVIGATION_PROPERTY_BINDING:\n                    objects.push(new CsdlNavigationPropertyBinding(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_TYPE_DEFINITION:\n                    objects.push(new CsdlTypeDefinition(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7]));\n                    break;\n                default: throw new Error('Unknwon tag:' + tag);\n            }\n        }\n\n        return objects;\n    }\n\n    protected getObject(parentElement: Element, tag: string, fieldNames: Field[]): any {\n        let object: any;\n\n        const children: HTMLCollection = parentElement.children;\n        let element: Element;\n        for (let index = 0; index < children.length; index++) {\n            if (children.item(index).nodeName === tag) {\n                if (Utils.isNotNullNorUndefined(element)) {\n                    throw new Error('Expected one ' + tag);\n                }\n                element = children.item(index);\n            }\n        }\n\n        if (Utils.isNotNullNorUndefined(element)) {\n            const attributes: NamedNodeMap = element.attributes;\n            const fieldValues: any[] = this.getFieldValues(fieldNames, attributes, element);\n            switch (tag) {\n                case Metadata.TAG_KEY:\n                    object = new CsdlKey(fieldValues[0]);\n                    break;\n                case Metadata.TAG_RETURN_TYPE:\n                    object = new CsdlReturnType(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5]);\n                    break;\n                case Metadata.TAG_ENTITY_CONTAINER:\n                    object = new CsdlEntityContainer(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5]);\n                    break;\n                case Metadata.TAG_ON_DELETE:\n                    object = new CsdlOnDelete(\n                        fieldValues[0]);\n                    break;\n                default: throw new Error('Unknwon tag:' + tag);\n            }\n        }\n\n        return object;\n    }\n\n    protected getFieldValues(fields: Field[], attributes: NamedNodeMap, element: Element): any[] {\n        const fieldValues: any[] = [];\n\n        for (const field of fields) {\n            if (field.fieldType === FieldType.TAG) {\n                fieldValues.push(this.getFieldValueByTag(field, element));\n            } else if (field.fieldType === FieldType.ATTRIBUTE) {\n                fieldValues.push(this.getFieldValueByAttribute(field, attributes));\n            } else {\n                throw new Error('Unknown field type: ' + field.fieldType);\n            }\n        }\n\n        return fieldValues;\n    }\n\n    protected getFieldValueByAttribute(field: Field, attributes: NamedNodeMap): any {\n        switch (field.name) {\n            case Metadata.ATTRIBUTE_VERSION:\n            case Metadata.ATTRIBUTE_URI:\n            case Metadata.ATTRIBUTE_NAMESPACE:\n            case Metadata.ATTRIBUTE_ALIAS:\n            case Metadata.ATTRIBUTE_TERM_NAMESPACE:\n            case Metadata.ATTRIBUTE_TERM:\n            case Metadata.ATTRIBUTE_QUALIFIER:\n            case Metadata.ATTRIBUTE_TARGET_NAMESPACE:\n            case Metadata.ATTRIBUTE_NAME:\n            case Metadata.ATTRIBUTE_TYPE:\n            case Metadata.ATTRIBUTE_SRID:\n            case Metadata.ATTRIBUTE_DEFAULT_VALUE:\n            case Metadata.ATTRIBUTE_PARTNER:\n            case Metadata.ATTRIBUTE_PROPERTY:\n            case Metadata.ATTRIBUTE_REFERENCED_PROPERTY:\n            case Metadata.ATTRIBUTE_BASE_TYPE:\n            case Metadata.ATTRIBUTE_ENTITY_SET_PATH:\n            case Metadata.ATTRIBUTE_ENTITY_TYPE:\n            case Metadata.ATTRIBUTE_PATH:\n            case Metadata.ATTRIBUTE_TARGET:\n            case Metadata.ATTRIBUTE_FUNCTION:\n            case Metadata.ATTRIBUTE_ACTION:\n            case Metadata.ATTRIBUTE_ENTITY_SET:\n            case Metadata.ATTRIBUTE_UNDERLYING_TYPE:\n            case Metadata.ATTRIBUTE_EXTENDS:\n            case Metadata.ATTRIBUTE_BASE_TERM:\n            case Metadata.ATTRIBUTE_APPLIES_TO:\n                return this.getAttributeValue(attributes, field.name);\n            case Metadata.ATTRIBUTE_NULLABLE:\n            case Metadata.ATTRIBUTE_UNICODE:\n            case Metadata.ATTRIBUTE_OPEN_TYPE:\n            case Metadata.ATTRIBUTE_HAS_STREAM:\n            case Metadata.ATTRIBUTE_IS_BOUND:\n            case Metadata.ATTRIBUTE_IS_COMPOSABLE:\n            case Metadata.ATTRIBUTE_CONTAINS_TARGET:\n            case Metadata.ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT:\n            case Metadata.ATTRIBUTE_ABSTRACT:\n            case Metadata.ATTRIBUTE_IS_FLAGS:\n                return this.propertyValueToBoolean(this.getAttributeValue(attributes, field.name));\n            case Metadata.ATTRIBUTE_VALUE:\n            case Metadata.ATTRIBUTE_MAX_LENGTH:\n            case Metadata.ATTRIBUTE_PRECISION:\n            case Metadata.ATTRIBUTE_SCALE:\n                return this.propertyValueToNumber(this.getAttributeValue(attributes, field.name));\n            default: throw new Error('Unknwon attribute:' + field.name);\n        }\n    }\n\n    protected getFieldValueByTag(field: Field, element: Element): any[] {\n        switch (field.name) {\n            case Metadata.TAG_INCLUDE:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_INCLUDE_ANNOTATIONS:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_TERM_NAMESPACE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_QUALIFIER, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TARGET_NAMESPACE, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_TERM:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_BASE_TERM, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_DEFAULT_VALUE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_APPLIES_TO, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ANNOTATIONS:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_TARGET, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_ANNOTATION, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_QUALIFIER, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ANNOTATION:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_TERM, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_QUALIFIER, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ENUM_TYPE:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_MEMBER, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_UNDERLYING_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_IS_FLAGS, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_COMPLEX_TYPE:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_PROPERTY, FieldType.TAG),\n                    new Field(Metadata.TAG_NAVIGATION_PROPERTY, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_BASE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_OPEN_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ABSTRACT, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ENTITY_TYPE:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_KEY, FieldType.TAG),\n                    new Field(Metadata.TAG_PROPERTY, FieldType.TAG),\n                    new Field(Metadata.TAG_NAVIGATION_PROPERTY, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_BASE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_OPEN_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_HAS_STREAM, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ABSTRACT, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_FUNCTION:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_RETURN_TYPE, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_IS_BOUND, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_SET_PATH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_IS_COMPOSABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_PARAMETER, FieldType.TAG)\n                ]);\n            case Metadata.TAG_MEMBER:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_VALUE, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_PROPERTY:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_UNICODE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_DEFAULT_VALUE, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_KEY:\n                return this.getObject(element, field.name, [\n                    new Field(Metadata.TAG_PROPERTY_REF, FieldType.TAG)\n                ]);\n            case Metadata.TAG_PROPERTY_REF:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_NAVIGATION_PROPERTY:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PARTNER, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_CONTAINS_TARGET, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_REFERENTIAL_CONSTRAINT, FieldType.TAG),\n                    new Field(Metadata.TAG_ON_DELETE, FieldType.TAG)\n                ]);\n            case Metadata.TAG_REFERENTIAL_CONSTRAINT:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_PROPERTY, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_REFERENCED_PROPERTY, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ON_DELETE:\n                return this.getObject(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_ACTION, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_PARAMETER:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_RETURN_TYPE:\n                return this.getObject(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ACTION:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_RETURN_TYPE, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_IS_BOUND, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_SET_PATH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_PARAMETER, FieldType.TAG)\n                ]);\n            case Metadata.TAG_ENTITY_CONTAINER:\n                return this.getObject(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_EXTENDS, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_ENTITY_SET, FieldType.TAG),\n                    new Field(Metadata.TAG_SINGLETON, FieldType.TAG),\n                    new Field(Metadata.TAG_FUNCTION_IMPORT, FieldType.TAG),\n                    new Field(Metadata.TAG_ACTION_IMPORT, FieldType.TAG)\n                ]);\n            case Metadata.TAG_ENTITY_SET:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_NAVIGATION_PROPERTY_BINDING, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_SINGLETON:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_NAVIGATION_PROPERTY_BINDING, FieldType.TAG)\n                ]);\n            case Metadata.TAG_FUNCTION_IMPORT:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_FUNCTION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_SET, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ACTION_IMPORT:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ACTION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_SET, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_NAVIGATION_PROPERTY_BINDING:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_PATH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TARGET, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_TYPE_DEFINITION:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_UNDERLYING_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_UNICODE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_ANNOTATION, FieldType.TAG)\n                ]);\n            default: throw new Error('Unknwon tag:' + field.name);\n        }\n    }\n\n    protected getAttributeValue(attributes: NamedNodeMap, attributeName: string): string {\n        const attribute: Attr = attributes.getNamedItem(attributeName);\n        if (Utils.isNotNullNorUndefined(attribute)) {\n            return attribute.nodeValue;\n        }\n        return undefined;\n    }\n\n    protected propertyValueToNumber(attributeValue: string): number {\n        return Utils.isNotNullNorUndefined(attributeValue) ? Number(attributeValue) : undefined;\n    }\n\n    protected propertyValueToBoolean(attributeValue: string): boolean {\n        return Utils.isNotNullNorUndefined(attributeValue) ? attributeValue === 'true' : undefined;\n    }\n}\n","import { HttpResponse } from '@angular/common/http';\n\nimport { Utils } from '../utils/utils';\n\nexport abstract class ODataResponseAbstract {\n    private httpResponse: HttpResponse<string>;\n\n    constructor(httpResponse: HttpResponse<string>) {\n        this.httpResponse = httpResponse;\n    }\n\n    getHttpResponse() {\n        return this.httpResponse;\n    }\n\n    isOk(): boolean {\n        return this.httpResponse.ok;\n    }\n\n    getBodyAsJson(): any {\n        return null;\n    }\n\n    getBodyAsText(): string {\n        return this.httpResponse.body;\n    }\n\n    toString(): string {\n        let res = `${this.httpResponse.status} ${this.httpResponse.statusText}\\n`;\n\n        const headers = this.httpResponse.headers;\n        for (const key of headers.keys()) {\n            res += key + ': ';\n            let valueString = '';\n            for (const value of headers.getAll(key)) {\n                if (valueString.length) {\n                    valueString += ' ';\n                }\n                valueString += value;\n            }\n            res += valueString + '\\n';\n        }\n\n        const json = this.getBodyAsJson();\n        if (Utils.isNotNullNorUndefined(json)) {\n            res += JSON.stringify(json, null, 4);\n        } else {\n            res += this.getBodyAsText();\n        }\n        return res;\n    }\n}\n","import { HttpResponse } from '@angular/common/http';\n\nimport { Utils } from '../utils/utils';\nimport { EntitySet } from './entity-collection';\nimport { Metadata } from './metadata';\nimport { ODataResponseAbstract } from './odata-response-abstract';\nimport { ODataResponseBatch } from './odata-response-batch';\n\nexport class ODataResponse extends ODataResponseAbstract {\n    private static readonly VALUE = 'value';\n    private static readonly ODATA_COUNT = '@odata.count';\n\n    constructor(httpResponse: HttpResponse<string>) {\n        super(httpResponse);\n    }\n\n    getBodyAsJson(): any {\n        const contentType: string = this.getHttpResponse().headers.get('Content-Type');\n        if (Utils.isNotNullNorUndefined(contentType) && contentType.includes('json')) {\n            try {\n                return JSON.parse(this.getBodyAsText());\n            } catch (error) {\n                return null;\n            }\n        }\n        return null;\n    }\n\n    toMetadata(): Metadata {\n        const xml: string = this.getBodyAsText();\n        return new Metadata(xml);\n    }\n\n    toEntitySet<T>(type?: (new () => T)): EntitySet<T> {\n        const json: any = this.getBodyAsJson();\n        if (Utils.isNotNullNorUndefined(json) && json.hasOwnProperty(ODataResponse.VALUE)) {\n            let count: number = null;\n            if (json.hasOwnProperty(ODataResponse.ODATA_COUNT)) {\n                count = json[ODataResponse.ODATA_COUNT];\n            }\n            return new EntitySet<T>(json[ODataResponse.VALUE], count, type);\n        }\n        return null;\n    }\n\n    toComplexCollection<T>(type?: (new () => T)): T[] {\n        const json: any = this.getBodyAsJson();\n\n        if (Utils.isNotNullNorUndefined(json) && json.hasOwnProperty(ODataResponse.VALUE)) {\n            const res: T[] = [];\n            for (const object of json[ODataResponse.VALUE]) {\n                res.push(this.toObject<T>(object, type));\n            }\n            return res;\n        }\n\n        return null;\n    }\n\n    toEntity<T>(type?: (new () => T)): T {\n        const json: any = this.getBodyAsJson();\n        return this.toObject<T>(json, type);\n    }\n\n    toComplexValue<T>(type?: (new () => T)): T {\n        const json: any = this.getBodyAsJson();\n        return this.toObject<T>(json, type);\n    }\n\n    toPropertyValue<T>(): T {\n        const json: any = this.getBodyAsJson();\n        if (Utils.isNotNullNorUndefined(json)) {\n            if (json.hasOwnProperty(ODataResponse.VALUE)) {\n                return <T>json[ODataResponse.VALUE];\n            }\n            return null;\n        } else {\n            return <T>JSON.parse(this.getBodyAsText());\n        }\n    }\n\n    toCount(): number {\n        return Number(this.getBodyAsText());\n    }\n\n    toODataResponseBatch(): ODataResponseBatch {\n        return new ODataResponseBatch(this.getHttpResponse());\n    }\n\n    protected toObject<T>(object: any, type: (new () => T)): T {\n        if (Utils.isNotNullNorUndefined(object)) {\n            if (Utils.isNullOrUndefined(type)) {\n                return Object.assign({}, object);\n            } else {\n                return Object.assign(new type(), object);\n            }\n        }\n        return null;\n    }\n}\n","import { HttpHeaders, HttpResponse } from '@angular/common/http';\n\nimport { Utils } from '../utils/utils';\nimport { ODataResponse } from './odata-response';\nimport { ODataResponseAbstract } from './odata-response-abstract';\n\nexport class ODataResponseBatch extends ODataResponseAbstract {\n    private static readonly CONTENT_TYPE = 'Content-Type';\n    private static readonly CONTENT_ID = 'Content-ID';\n    private static readonly HTTP11 = 'HTTP/1.1';\n    private static readonly BOUNDARY_PREFIX_SUFFIX = '--';\n    private static readonly NEWLINE = '\\r\\n';\n    private static readonly MULTIPART_MIXED = 'multipart/mixed';\n\n    private odataResponses: ODataResponse[];\n\n    constructor(httpResponse: HttpResponse<string>) {\n        super(httpResponse);\n        this.odataResponses = [];\n        this.parseResponses();\n    }\n\n    getODataResponses(): ODataResponse[] {\n        return this.odataResponses;\n    }\n\n    protected parseResponses(): void {\n        const contentType: string = this.getHttpResponse().headers.get(ODataResponseBatch.CONTENT_TYPE);\n        const boundaryDelimiterBatch: string = this.getBoundaryDelimiter(contentType);\n        const boundaryEndBatch: string = this.getBoundaryEnd(boundaryDelimiterBatch);\n\n        const batchBody: string = this.getBodyAsText();\n        const batchBodyLines: string[] = batchBody.split(ODataResponseBatch.NEWLINE);\n\n        let odataResponseCS: ODataResponse[];\n        let contentId: number;\n        let boundaryDelimiterCS;\n        let boundaryEndCS;\n        let batchPartStartIndex;\n        for (let index = 0; index < batchBodyLines.length; index++) {\n            const batchBodyLine: string = batchBodyLines[index];\n\n            if (batchBodyLine.startsWith(ODataResponseBatch.CONTENT_TYPE)) {\n                const contentTypeValue: string = this.getHeaderValue(batchBodyLine);\n                if (contentTypeValue === ODataResponseBatch.MULTIPART_MIXED) {\n                    odataResponseCS = [];\n                    contentId = undefined;\n                    boundaryDelimiterCS = this.getBoundaryDelimiter(batchBodyLine);\n                    boundaryEndCS = this.getBoundaryEnd(boundaryDelimiterCS);\n                    batchPartStartIndex = undefined;\n                }\n                continue;\n            } else if (Utils.isNotNullNorUndefined(odataResponseCS) && batchBodyLine.startsWith(ODataResponseBatch.CONTENT_ID)) {\n                contentId = Number(this.getHeaderValue(batchBodyLine));\n            } else if (batchBodyLine.startsWith(ODataResponseBatch.HTTP11)) {\n                batchPartStartIndex = index;\n            } else if (batchBodyLine === boundaryDelimiterBatch || batchBodyLine === boundaryDelimiterCS\n                || batchBodyLine === boundaryEndBatch || batchBodyLine === boundaryEndCS) {\n                if (!batchPartStartIndex) {\n                    continue;\n                }\n\n                const odataResponse: ODataResponse = this.createODataResponse(batchBodyLines, batchPartStartIndex, index - 1);\n                if (Utils.isNotNullNorUndefined(odataResponseCS)) {\n                    odataResponseCS[contentId] = odataResponse;\n                } else {\n                    this.odataResponses.push(odataResponse);\n                }\n\n                if (batchBodyLine === boundaryDelimiterBatch || batchBodyLine === boundaryDelimiterCS) {\n                    batchPartStartIndex = index + 1;\n                } else if (batchBodyLine === boundaryEndBatch || batchBodyLine === boundaryEndCS) {\n                    if (Utils.isNotNullNorUndefined(odataResponseCS)) {\n                        for (const response of odataResponseCS) {\n                            if (Utils.isNotNullNorUndefined(response)) {\n                                this.odataResponses.push(response);\n                            }\n                        }\n                    }\n                    odataResponseCS = undefined;\n                    boundaryDelimiterCS = undefined;\n                    boundaryEndCS = undefined;\n                    batchPartStartIndex = undefined;\n                }\n            }\n        }\n    }\n\n    protected getHeaderValue(header: string): string {\n        let res: string = header.split(';')[0].trim();\n        res = res.split(':')[1].trim();\n        return res;\n    }\n\n    protected getBoundaryDelimiter(contentType: string): string {\n        const contentTypeParts: string[] = contentType.split(';');\n        if (contentTypeParts.length === 2) {\n            const boundary: string = contentType.split(';')[1].trim();\n            const boundaryDelimiter: string = ODataResponseBatch.BOUNDARY_PREFIX_SUFFIX + boundary.split('=')[1];\n            return boundaryDelimiter;\n        } else {\n            return '';\n        }\n    }\n\n    protected getBoundaryEnd(boundaryDelimiter: string): string {\n        if (!boundaryDelimiter.length) {\n            return '';\n        }\n        const boundaryEnd: string = boundaryDelimiter + ODataResponseBatch.BOUNDARY_PREFIX_SUFFIX;\n        return boundaryEnd;\n    }\n\n    protected createODataResponse(batchBodyLines: string[], batchPartStartIndex: number, batchPartEndIndex: number): ODataResponse {\n        let index: number = batchPartStartIndex;\n        const statusLine: string = batchBodyLines[index];\n        const statusLineParts: string[] = batchBodyLines[index].split(' ');\n        const status: string = statusLineParts[1];\n        const statusTextIndex = statusLine.indexOf(status) + status.length + 1;\n        const statusText: string = statusLine.substring(statusTextIndex);\n\n        let httpHeaders: HttpHeaders = new HttpHeaders();\n        for (++index; index <= batchPartEndIndex; index++) {\n            const batchBodyLine: string = batchBodyLines[index];\n\n            if (batchBodyLine === '') {\n                break;\n            }\n\n            const batchBodyLineParts: string[] = batchBodyLine.split(': ');\n            httpHeaders = httpHeaders.append(batchBodyLineParts[0].trim(), batchBodyLineParts[1].trim());\n        }\n\n        let body = '';\n        for (; index <= batchPartEndIndex; index++) {\n            body += batchBodyLines[index];\n        }\n\n        return new ODataResponse(new HttpResponse({\n            body: body,\n            headers: httpHeaders,\n            status: Number(status),\n            statusText: statusText\n        }));\n    }\n}\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\n\nexport interface HttpOptionsI {\n    headers?: HttpHeaders;\n    params?: HttpParams;\n    reportProgress?: boolean;\n    withCredentials?: boolean;\n}\n\nexport class HttpOptions implements HttpOptionsI {\n    constructor(\n        public headers?: HttpHeaders,\n        public observe: 'response' = 'response',\n        public params?: HttpParams,\n        public reportProgress?: boolean,\n        public responseType: 'text' = 'text',\n        public withCredentials?: boolean\n    ) { }\n}\n","\nimport {map} from 'rxjs/operators';\n\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { ODataQuery } from '../odata-query/odata-query';\nimport { ODataQueryAbstract } from '../odata-query/odata-query-abstract';\nimport { ODataResponse } from '../odata-response/odata-response';\nimport { Utils } from '../utils/utils';\nimport { HttpOptions, HttpOptionsI } from './http-options';\n\n@Injectable()\nexport class ODataService {\n  private static readonly IF_MATCH_HEADER = 'If-Match';\n\n  constructor(private http: HttpClient) { }\n\n  get(odataQuery: ODataQuery, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    const options: HttpOptions = this.createHttpOptions(httpOptions);\n    return this.http.get(url, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  post(odataQuery: ODataQueryAbstract, body: any, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    const options: HttpOptions = this.createHttpOptions(httpOptions);\n    return this.http.post(url, body, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  patch(odataQuery: ODataQuery, body: any, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    let options: HttpOptions = this.createHttpOptions(httpOptions);\n    options = this.mergeETag(options, etag);\n    return this.http.patch(url, body, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  put(odataQuery: ODataQuery, body: any, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    let options: HttpOptions = this.createHttpOptions(httpOptions);\n    options = this.mergeETag(options, etag);\n    return this.http.put(url, body, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  delete(odataQuery: ODataQuery, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    let options: HttpOptions = this.createHttpOptions(httpOptions);\n    options = this.mergeETag(options, etag);\n    return this.http.delete(url, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  protected createHttpOptions(httpOptions: HttpOptionsI): HttpOptions {\n    if (httpOptions instanceof HttpOptions) {\n      return httpOptions;\n    }\n    return Object.assign(new HttpOptions(), httpOptions);\n  }\n\n  protected mergeETag(httpOptions: HttpOptions, etag: string): HttpOptions {\n    if (Utils.isNullOrUndefined(etag)) {\n      return httpOptions;\n    }\n    if (Utils.isNullOrUndefined(httpOptions)) {\n      httpOptions = new HttpOptions();\n    }\n    if (Utils.isNullOrUndefined(httpOptions.headers)) {\n      httpOptions.headers = new HttpHeaders();\n    }\n\n    httpOptions.headers[ODataService.IF_MATCH_HEADER] = etag;\n\n    return httpOptions;\n  }\n}\n","export abstract class Filter {\n    abstract toString(): string;\n    abstract isEmpty(): boolean;\n}\n","import { Utils } from '../../utils/utils';\n\nexport abstract class FilterHasProperty {\n    protected property: string;\n\n    constructor(property: string) {\n        this.setProperty(property);\n    }\n\n    setProperty(property: string): void {\n        Utils.requireNotNullNorUndefined(property, 'property');\n        this.property = property;\n    }\n\n    getProperty(): string {\n        return this.property;\n    }\n}\n","import { Utils } from '../../utils/utils';\nimport { QuotedString } from '../../odata-query/quoted-string';\nimport { OperatorComparison } from '../operator';\nimport { Filter } from './filter';\nimport { FilterHasProperty } from './filter-has-property';\n\nexport class FilterComparison extends FilterHasProperty implements Filter {\n    private operator: OperatorComparison;\n    private value: any;\n\n    constructor(property: string, operator: OperatorComparison, value: boolean | number | string | QuotedString) {\n        super(property);\n        Utils.requireNotNullNorUndefined(property, 'property');\n        Utils.requireNotNullNorUndefined(operator, 'operator');\n        Utils.requireNotUndefined(value, 'value');\n        this.operator = operator;\n        this.value = value;\n    }\n\n    toString(): string {\n        return `${this.property} ${OperatorComparison[this.operator].toLowerCase()} ${Utils.getValueURI(this.value, false)}`;\n    }\n\n    isEmpty(): boolean {\n        return (Utils.isNullOrUndefined(this.property) || !this.property.length)\n            && Utils.isNullOrUndefined(this.operator)\n            && Utils.isNullOrUndefined(this.value) || (this.value instanceof Filter && !this.value.isEmpty() || this.value instanceof Array && !this.value.length);\n    }\n}\n","import { Utils } from '../../utils/utils';\nimport { Filter } from './filter';\nimport { FilterHasProperty } from './filter-has-property';\nimport { QuotedString } from '../../odata-query/quoted-string';\n\nexport class FilterFunction extends FilterHasProperty implements Filter {\n    private functionName: string;\n    private value: boolean | number | string | QuotedString;\n\n    constructor(functionName: string, property: string, value?: boolean | number | string | QuotedString) {\n        super(property);\n        Utils.requireNotNullNorUndefined(functionName, 'functionName');\n        Utils.requireNotEmpty(functionName, 'functionName');\n        Utils.requireNotNullNorUndefined(property, 'property');\n        Utils.requireNotEmpty(property, 'property');\n        this.functionName = functionName;\n        this.property = property;\n        this.value = value;\n    }\n\n    toString(): string {\n        if (Utils.isNotNullNorUndefined(this.property) && Utils.isNotNullNorUndefined(this.value)) {\n            return `${this.functionName}(${this.property},${Utils.getValueURI(this.value, false)})`;\n        } else if (Utils.isNotNullNorUndefined(this.property)) {\n            return `${this.functionName}(${this.property})`;\n        } else if (Utils.isNotNullNorUndefined(this.value)) {\n            return `${this.functionName}(${Utils.getValueURI(this.value, false)})`;\n        } else {\n            return `${this.functionName}()`;\n        }\n    }\n\n    isEmpty(): boolean {\n        if (Utils.isNullOrUndefined(this.property)\n            && Utils.isNullOrUndefined(this.value)) {\n            return true;\n        }\n        if (Utils.isNullOrUndefined(this.property)\n            && Utils.isNotNullNorUndefined(this.value) && Utils.isEmpty(this.value)) {\n            return true;\n        }\n        if (Utils.isNullOrUndefined(this.value)\n            && Utils.isNotNullNorUndefined(this.property) && !this.property.length) {\n            return true;\n        }\n        return false;\n    }\n}\n\nexport class FilterFunctionString extends FilterFunction {\n    constructor(functionName: string, property?: string, value?: number | string | FilterFunctionString) {\n        super(functionName, property, typeof (value) === 'string'\n            ? new QuotedString(value)\n            : value instanceof FilterFunctionString ? value.toString() : value);\n    }\n}\n\nexport class FilterContains extends FilterFunctionString {\n    constructor(property: string, value: string | FilterFunctionString) {\n        super('contains', property, value);\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n}\n\nexport class FilterEndswith extends FilterFunctionString {\n    constructor(property: string, value: string | FilterFunctionString) {\n        super('endswith', property, value);\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n}\n\nexport class FilterStartswith extends FilterFunctionString {\n    constructor(property: string, value: string | FilterFunctionString) {\n        super('startswith', property, value);\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n}\n\nexport class FilterLength extends FilterFunctionString {\n    constructor(property: string) {\n        super('length', property);\n    }\n}\n\nexport class FilterIndexof extends FilterFunctionString {\n    constructor(property: string, value: string | FilterFunctionString) {\n        super('indexof', property, value);\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n}\n\nexport class FilterSubstring extends FilterFunctionString {\n    constructor(property: string, value: number) {\n        super('substring', property, value);\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n}\n\nexport class FilterTolower extends FilterFunctionString {\n    constructor(property: string) {\n        super('tolower', property);\n    }\n}\n\nexport class FilterToupper extends FilterFunctionString {\n    constructor(property: string) {\n        super('toupper', property);\n    }\n}\n\nexport class FilterTrim extends FilterFunctionString {\n    constructor(property: string) {\n        super('trim', property);\n    }\n}\n\nexport class FilterConcat extends FilterFunctionString {\n    constructor(property: string, value: string | FilterFunctionString) {\n        super('concat', property, value);\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n}\n","import { Filter } from './filter';\n\nexport abstract class FilterHasFilter {\n    protected filter: Filter | Filter[];\n\n    constructor(filter: Filter | Filter[]) {\n        this.filter = filter;\n    }\n\n    getFilter(): Filter | Filter[] {\n        return this.filter;\n    }\n}\n","import { Utils } from '../../utils/utils';\nimport { Filter } from './filter';\nimport { FilterHasFilter } from './filter-has-filter';\nimport { FilterHasProperty } from './filter-has-property';\n\nexport enum LambdaOperator {\n    ANY, ALL\n}\n\nexport enum LambdaCollection {\n    PROPERTY_COLLECTION, ENTITY_SET\n}\n\nexport class FilterLambda extends FilterHasFilter implements Filter {\n    private lambdaCollection: LambdaCollection;\n    private propertyOrEntitySet: string;\n    private lambdaOperator: LambdaOperator;\n\n    constructor(lambdaCollection: LambdaCollection, propertyOrEntitySet: string, lambdaOperator: LambdaOperator, filter: Filter) {\n        super(filter);\n        Utils.requireNotNullNorUndefined(lambdaCollection, 'lambdaCollection');\n        Utils.requireNotNullNorUndefined(propertyOrEntitySet, 'propertyOrEntitySet');\n        Utils.requireNotNullNorUndefined(lambdaOperator, 'lambdaOperator');\n        Utils.requireNotNullNorUndefined(filter, 'filter');\n        if (lambdaCollection === LambdaCollection.PROPERTY_COLLECTION) {\n            this.checkProperty(propertyOrEntitySet, filter);\n        }\n        this.lambdaCollection = lambdaCollection;\n        this.propertyOrEntitySet = propertyOrEntitySet;\n        this.lambdaOperator = lambdaOperator;\n    }\n\n    toString(): string {\n        switch (this.lambdaCollection) {\n            case LambdaCollection.PROPERTY_COLLECTION:\n                this.replaceProperty(this.filter);\n                return `${this.propertyOrEntitySet}/${LambdaOperator[this.lambdaOperator].toLowerCase()}(x:${this.filter.toString()})`;\n            case LambdaCollection.ENTITY_SET:\n                return `${this.propertyOrEntitySet}/${LambdaOperator[this.lambdaOperator].toLowerCase()}(x:x/${this.filter.toString()})`;\n            default:\n                throw new Error('unknown lambdaCollection: ' + this.lambdaCollection);\n        }\n    }\n\n    isEmpty(): boolean {\n        if (Utils.isNullOrUndefined(this.lambdaCollection)\n            && Utils.isNullOrUndefined(this.propertyOrEntitySet)\n            && Utils.isNullOrUndefined(this.lambdaOperator)\n            && Utils.isNullOrUndefined(this.filter)) {\n            return true;\n        }\n        if (Utils.isNullOrUndefined(this.propertyOrEntitySet)\n            && Utils.isNotNullNorUndefined(this.filter) && Utils.isEmpty(this.filter)) {\n            return true;\n        }\n        if (Utils.isNullOrUndefined(this.filter)\n            && Utils.isNotNullNorUndefined(this.propertyOrEntitySet) && !this.propertyOrEntitySet.length) {\n            return true;\n        }\n        if (Utils.isNotNullNorUndefined(this.propertyOrEntitySet) && !this.propertyOrEntitySet.length\n            && Utils.isNotNullNorUndefined(this.filter) && Utils.isEmpty(this.filter)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    protected checkProperty(propertyOrEntitySet: string, filter: Filter | Filter[]) {\n        if (Utils.isNullOrUndefined(filter)) {\n            return;\n        }\n        if (filter instanceof FilterHasProperty) {\n            if (propertyOrEntitySet !== filter.getProperty()) {\n                throw new Error('lambda property to filter must match inner filters property');\n            }\n        }\n        if (filter instanceof FilterHasFilter) {\n            const filterChild: Filter | Filter[] = filter.getFilter();\n            if (filterChild instanceof Filter) {\n                this.replaceProperty(filterChild);\n            } else {\n                for (const f of filterChild) {\n                    this.replaceProperty(f);\n                }\n            }\n        }\n    }\n\n    protected replaceProperty(filter: Filter | Filter[]) {\n        if (Utils.isNullOrUndefined(filter)) {\n            return;\n        }\n        if (filter instanceof FilterHasProperty) {\n            filter.setProperty('x');\n        }\n        if (filter instanceof FilterHasFilter) {\n            const filterChild: Filter | Filter[] = filter.getFilter();\n            if (filterChild instanceof Filter) {\n                this.replaceProperty(filterChild);\n            } else {\n                for (const f of filterChild) {\n                    this.replaceProperty(f);\n                }\n            }\n        }\n    }\n}\n","import { Utils } from '../../utils/utils';\nimport { OperatorLogical } from '../operator';\nimport { Filter } from './filter';\nimport { FilterHasFilter } from './filter-has-filter';\n\nexport class FilterLogical extends FilterHasFilter implements Filter {\n    private operator: OperatorLogical;\n\n    constructor(filters: Filter[], operator: OperatorLogical) {\n        super(filters);\n        Utils.requireNotNullNorUndefined(filters, 'filters');\n        Utils.requireNotEmpty(filters, 'filters');\n        Utils.requireNotNullNorUndefined(operator, 'operator');\n        this.operator = operator;\n    }\n\n    toString(): string {\n        if (this.filter instanceof Array) {\n            return Utils.toString(this.filter, this.operator);\n        }\n        return this.filter.toString();\n    }\n\n    isEmpty(): boolean {\n        if (Utils.isNullOrUndefined(this.filter)) {\n            return true;\n        }\n        for (const filter of <Filter[]>this.filter) {\n            if (filter.isEmpty()) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","export abstract class Search {\n    abstract toString(): string;\n    abstract isEmpty(): boolean;\n}\n","import { Utils } from '../../utils/utils';\nimport { OperatorLogical } from '../operator';\nimport { Search } from './search';\n\nexport class SearchLogical extends Search {\n    constructor(private values: Search[], private operator: OperatorLogical) {\n        super();\n        Utils.requireNotNullNorUndefined(values, 'values');\n        Utils.requireNotNullNorUndefined(operator, 'operator');\n        Utils.requireNotEmpty(values, 'values');\n\n        if (operator === OperatorLogical.NOT && values.length !== 1) {\n            throw new Error('operator ' + OperatorLogical[operator] + ' requires a single value');\n        }\n    }\n\n    toString(): string {\n        return Utils.toString(this.values, this.operator, true);\n    }\n\n    isEmpty(): boolean {\n        if (Utils.isNullOrUndefined(this.values)) {\n            return true;\n        }\n        for (const value of this.values) {\n            if (value.isEmpty()) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","import { Utils } from '../../utils/utils';\nimport { Search } from './search';\n\nexport class SearchSimple extends Search {\n    constructor(protected value: string) {\n        super();\n        Utils.requireNotNullNorUndefined(value, 'value');\n        Utils.requireNotEmpty(value, 'value');\n    }\n\n    toString(): string {\n        return this.value;\n    }\n\n    isEmpty(): boolean {\n        return Utils.isNullOrUndefined(this.value) || !this.value.length;\n    }\n}\n","import { SearchSimple } from './search-simple';\n\nexport class SearchPhrase extends SearchSimple {\n    toString(): string {\n        return `\"${this.value}\"`;\n    }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { ODataService } from './odata-service/odata.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [ODataService]\n})\nexport class ODataModule { }\n"],"names":["tslib_1.__values","tslib_1.__extends","HttpHeaders","UUID","HttpResponse","http","map","Injectable","HttpClient","NgModule","CommonModule","HttpClientModule"],"mappings":"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"}
