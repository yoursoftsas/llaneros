import { Filter } from './filter';
import { FilterHasProperty } from './filter-has-property';
import { QuotedString } from '../../odata-query/quoted-string';
export declare class FilterFunction extends FilterHasProperty implements Filter {
    private functionName;
    private value;
    constructor(functionName: string, property: string, value?: boolean | number | string | QuotedString);
    toString(): string;
    isEmpty(): boolean;
}
export declare class FilterFunctionString extends FilterFunction {
    constructor(functionName: string, property?: string, value?: number | string | FilterFunctionString);
}
export declare class FilterContains extends FilterFunctionString {
    constructor(property: string, value: string | FilterFunctionString);
}
export declare class FilterEndswith extends FilterFunctionString {
    constructor(property: string, value: string | FilterFunctionString);
}
export declare class FilterStartswith extends FilterFunctionString {
    constructor(property: string, value: string | FilterFunctionString);
}
export declare class FilterLength extends FilterFunctionString {
    constructor(property: string);
}
export declare class FilterIndexof extends FilterFunctionString {
    constructor(property: string, value: string | FilterFunctionString);
}
export declare class FilterSubstring extends FilterFunctionString {
    constructor(property: string, value: number);
}
export declare class FilterTolower extends FilterFunctionString {
    constructor(property: string);
}
export declare class FilterToupper extends FilterFunctionString {
    constructor(property: string);
}
export declare class FilterTrim extends FilterFunctionString {
    constructor(property: string);
}
export declare class FilterConcat extends FilterFunctionString {
    constructor(property: string, value: string | FilterFunctionString);
}
