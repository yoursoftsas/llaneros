import { CsdlAnnotation, CsdlAnnotable, CsdlTerm, CsdlAnnotations } from './csdl-annotation';
import { CsdlTypeDefinition } from './csdl-type-definition';
import { CsdlEnumType } from './csdl-enum-type';
import { CsdlEntityType, CsdlComplexType } from './csdl-structured-type';
import { CsdlFunction, CsdlAction } from './csdl-function-action';
import { CsdlEntityContainer } from './csdl-entity-container';
export declare class CsdlSchema extends CsdlAnnotable {
    namespace: string;
    alias: string;
    enumTypes: CsdlEnumType[];
    complexTypes: CsdlComplexType[];
    entityTypes: CsdlEntityType[];
    functions: CsdlFunction[];
    actions: CsdlAction[];
    entityContainer: CsdlEntityContainer;
    typeDefinitions: CsdlTypeDefinition[];
    terms: CsdlTerm[];
    annotationsList: CsdlAnnotations[];
    constructor(namespace: string, alias?: string, enumTypes?: CsdlEnumType[], complexTypes?: CsdlComplexType[], entityTypes?: CsdlEntityType[], functions?: CsdlFunction[], actions?: CsdlAction[], entityContainer?: CsdlEntityContainer, typeDefinitions?: CsdlTypeDefinition[], terms?: CsdlTerm[], annotationsList?: CsdlAnnotations[], annotationList?: CsdlAnnotation[]);
}
